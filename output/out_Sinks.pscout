<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)> -> _SINK_ 
<android.graphics.RectF: int describeContents()> -> _SINK_ 
<java.lang.StringBuilder: int codePointAt(int)> -> _SINK_ 
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setPreviewFrameRate(int)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setPriority(int)> -> _SINK_ 
<android.net.wifi.WifiEnterpriseConfig: void setAnonymousIdentity(java.lang.String)> -> _SINK_ 
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)> -> _SINK_ 
<android.app.Activity: void setImmersive(boolean)> -> _SINK_ 
<java.lang.Character: char toUpperCase(char)> -> _SINK_ 
<android.view.View: void setPressed(boolean)> -> _SINK_ 
<java.lang.StringBuilder: int codePointBefore(int)> -> _SINK_ 
<android.nfc.NdefRecord: int describeContents()> -> _SINK_ 
<android.webkit.WebResourceResponse: void setData(java.io.InputStream)> -> _SINK_ 
<android.graphics.Rect: int hashCode()> -> _SINK_ 
<android.view.View: void setTop(int)> -> _SINK_ 
<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> android.permission.SEND_SMS -> _SINK_ 
<android.bluetooth.BluetoothDevice: boolean setPairingConfirmation(boolean)> -> _SINK_ 
<android.graphics.Rect: int width()> -> _SINK_ 
<java.math.BigInteger: int compareTo(java.math.BigInteger)> -> _SINK_ 
<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)> -> _SINK_ 
<org.apache.http.ProtocolVersion: int hashCode()> -> _SINK_ 
<android.animation.LayoutTransition: void setDuration(int,long)> -> _SINK_ 
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle)> -> _SINK_ 
<android.widget.ExpandableListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)> -> _SINK_ 
<android.text.style.URLSpan: int describeContents()> -> _SINK_ 
<android.net.wifi.WifiManager: void setTdlsEnabled(java.net.InetAddress,boolean)> -> _SINK_ 
<android.net.sip.SipAudioCall: void setListener(android.net.sip.SipAudioCall$Listener,boolean)> -> _SINK_ 
<java.util.Date: void setMinutes(int)> -> _SINK_ 
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)> -> _SINK_ 
<android.content.BroadcastReceiver$PendingResult: void setResultCode(int)> -> _SINK_ 
<java.lang.Package: int hashCode()> -> _SINK_ 
<android.accounts.AccountAuthenticatorActivity: void setWallpaper(java.io.InputStream)> android.permission.MANAGE_APP_TOKENS android.permission.SET_WALLPAPER -> _SINK_ 
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)> -> _SINK_ 
<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)> -> _SINK_ 
<android.webkit.WebResourceResponse: void setEncoding(java.lang.String)> -> _SINK_ 
<android.view.View: void setWillNotDraw(boolean)> -> _SINK_ 
<android.graphics.Matrix: void setTranslate(float,float)> -> _SINK_ 
<android.view.View: void setHorizontalScrollBarEnabled(boolean)> -> _SINK_ 
<java.lang.Integer: java.lang.String toHexString(int)> -> _SINK_ 
<java.lang.String: boolean startsWith(java.lang.String)> -> _SINK_ 
<android.app.Dialog: void setOwnerActivity(android.app.Activity)> -> _SINK_ 
<java.util.BitSet: int cardinality()> -> _SINK_ 
<android.widget.RemoteViews: void setInt(int,java.lang.String,int)> -> _SINK_ 
<android.widget.ExpandableListView: void setChildIndicatorBoundsRelative(int,int)> -> _SINK_ 
<android.widget.TextView: void setRawInputType(int)> -> _SINK_ 
<android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)> -> _SINK_ 
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(byte[])> -> _SINK_ 
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)> -> _SINK_ 
<android.nfc.NdefRecord: android.nfc.NdefRecord createUri(java.lang.String)> -> _SINK_ 
<android.content.ContextWrapper: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)> -> _SINK_ 
<android.view.animation.LayoutAnimationController: void setInterpolator(android.content.Context,int)> -> _SINK_ 
<java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)> -> _SINK_ 
<android.os.Message: void setData(android.os.Bundle)> -> _SINK_ 
<java.lang.Double: int intValue()> -> _SINK_ 
<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)> -> _SINK_ 
<android.content.pm.InstrumentationInfo: int describeContents()> -> _SINK_ 
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)> -> _SINK_ 
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)> -> _SINK_ 
<java.lang.Float: java.lang.String toHexString(float)> -> _SINK_ 
<java.util.ArrayList: int size()> -> _SINK_ 
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)> -> _SINK_ 
<android.webkit.WebResourceResponse: void setMimeType(java.lang.String)> -> _SINK_ 
<java.lang.Thread$State: java.lang.Thread$State valueOf(java.lang.String)> -> _SINK_ 
<android.os.ParcelUuid: android.os.ParcelUuid fromString(java.lang.String)> -> _SINK_ 
<android.location.Location: void setTime(long)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setVideoStabilization(boolean)> -> _SINK_ 
<android.app.Activity: void setVolumeControlStream(int)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setFromIndex(int)> -> _SINK_ 
<android.os.Bundle: int describeContents()> -> _SINK_ 
<android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)> -> _SINK_ 
<java.lang.String: java.lang.String valueOf(java.lang.Object)> -> _SINK_ 
<android.view.View: void setId(int)> -> _SINK_ 
<java.lang.reflect.Field: void setShort(java.lang.Object,short)> -> _SINK_ 
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int,android.os.Handler,android.os.ParcelFileDescriptor$OnCloseListener)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View)> -> _SINK_ 
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)> -> _SINK_ 
<android.widget.RemoteViews: void setChronometer(int,long,java.lang.String,boolean)> -> _SINK_ 
<android.graphics.Point: int hashCode()> -> _SINK_ 
<java.util.BitSet: int length()> -> _SINK_ 
<android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> -> _SINK_ 
<android.view.animation.Transformation: void setTransformationType(int)> -> _SINK_ 
<java.lang.Byte: java.lang.Byte valueOf(java.lang.String)> -> _SINK_ 
<android.view.animation.LayoutAnimationController: void setInterpolator(android.view.animation.Interpolator)> -> _SINK_ 
<android.content.ContentProviderOperation: int describeContents()> -> _SINK_ 
<android.view.View: void setX(float)> -> _SINK_ 
<android.app.LocalActivityManager: android.view.Window startActivity(java.lang.String,android.content.Intent)> -> _SINK_ 
<android.content.BroadcastReceiver$PendingResult: void setResult(int,java.lang.String,android.os.Bundle)> -> _SINK_ 
<android.content.ClipData$Item: void <init>(android.content.Intent)> -> _SINK_ 
<android.nfc.Tag: int describeContents()> -> _SINK_ 
<android.widget.TextView: void setLines(int)> -> _SINK_ 
<android.view.View: void setLayerPaint(android.graphics.Paint)> -> _SINK_ 
<android.net.wifi.WifiEnterpriseConfig: void setIdentity(java.lang.String)> -> _SINK_ 
<java.lang.Integer: java.lang.String toOctalString(int)> -> _SINK_ 
<java.net.ServerSocket: void setReceiveBufferSize(int)> -> _SINK_ 
<android.view.animation.Transformation: void setAlpha(float)> -> _SINK_ 
<android.os.Message: int describeContents()> -> _SINK_ 
<android.location.Location: void setLatitude(double)> -> _SINK_ 
<java.io.File: boolean setReadOnly()> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setContentInfo(java.lang.CharSequence)> -> _SINK_ 
<java.lang.Float: java.lang.Float valueOf(float)> -> _SINK_ 
<java.lang.Character: int compareTo(java.lang.Character)> -> _SINK_ 
<android.widget.ExpandableListView: void setOnChildClickListener(android.widget.ExpandableListView$OnChildClickListener)> -> _SINK_ 
<java.lang.Character: int codePointBefore(char[],int)> -> _SINK_ 
<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)> -> _SINK_ 
<java.lang.Long: int compare(long,long)> -> _SINK_ 
<android.util.Log: int println(int,java.lang.String,java.lang.String)> android.permission.STOP_APP_SWITCHES -> _SINK_ 
<java.lang.Character: char reverseBytes(char)> -> _SINK_ 
<android.view.inputmethod.ExtractedText: int describeContents()> -> _SINK_ 
<android.app.backup.BackupDataInputStream: int size()> -> _SINK_ 
<java.lang.Short: java.lang.Short decode(java.lang.String)> -> _SINK_ 
<android.media.MediaFormat: void setFloat(java.lang.String,float)> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)> -> _SINK_ 
<android.app.Activity: boolean shouldUpRecreateTask(android.content.Intent)> -> _SINK_ 
<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)> -> _SINK_ 
<java.lang.Integer: int compareTo(java.lang.Object)> -> _SINK_ 
<android.widget.ExpandableListView: void setChildIndicatorBounds(int,int)> -> _SINK_ 
<android.content.ContextWrapper: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)> -> _SINK_ 
<android.app.Fragment: void setHasOptionsMenu(boolean)> -> _SINK_ 
<java.net.DatagramSocket: void setBroadcast(boolean)> -> _SINK_ 
<java.lang.Double: int compareTo(java.lang.Object)> -> _SINK_ 
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_ 
<java.net.DatagramSocket: void setSoTimeout(int)> -> _SINK_ 
<java.lang.Float: java.lang.String toString(float)> -> _SINK_ 
<android.util.Log: int v(java.lang.String,java.lang.String)> android.permission.STOP_APP_SWITCHES -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo obtain(int,float,float,float)> -> _SINK_ 
<android.view.View: void setTextDirection(int)> -> _SINK_ 
<android.animation.PropertyValuesHolder: void setKeyframes(android.animation.Keyframe[])> -> _SINK_ 
<android.bluetooth.BluetoothGatt: boolean setCharacteristicNotification(android.bluetooth.BluetoothGattCharacteristic,boolean)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setJpegThumbnailQuality(int)> -> _SINK_ 
<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)> -> _SINK_ 
<java.lang.Integer: int compareTo(java.lang.Integer)> -> _SINK_ 
<java.lang.StringBuffer: int length()> -> _SINK_ 
<android.content.IntentFilter: int describeContents()> -> _SINK_ 
<java.lang.Character: int codePointAt(java.lang.CharSequence,int)> -> _SINK_ 
<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])> -> _SINK_ 
<android.app.backup.BackupDataInput: int readEntityData(byte[],int,int)> -> _SINK_ 
<android.app.Activity: void onNewIntent(android.content.Intent)> -> _SINK_ 
<android.content.pm.ActivityInfo: int describeContents()> -> _SINK_ 
<java.net.Socket: void setTcpNoDelay(boolean)> -> _SINK_ 
<java.lang.StringBuffer: void setLength(int)> -> _SINK_ 
<android.widget.TextView: boolean setFrame(int,int,int,int)> -> _SINK_ 
<java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)> -> _SINK_ 
<java.lang.Character: int codePointBefore(java.lang.CharSequence,int)> -> _SINK_ 
<android.widget.RemoteViews: void setLong(int,java.lang.String,long)> -> _SINK_ 
<java.lang.Integer: java.lang.Integer valueOf(int)> -> _SINK_ 
<java.lang.String: java.lang.String valueOf(double)> -> _SINK_ 
<android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState valueOf(java.lang.String)> -> _SINK_ 
<java.lang.Short: short parseShort(java.lang.String,int)> -> _SINK_ 
<android.print.PageRange: int describeContents()> -> _SINK_ 
<android.content.Intent: android.content.Intent putExtras(android.content.Intent)> -> _SINK_ 
<java.lang.ThreadGroup: int enumerate(java.lang.Thread[])> -> _SINK_ 
<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)> -> _SINK_ 
<android.view.MotionEvent$PointerProperties: int hashCode()> -> _SINK_ 
<android.util.Log: int wtf(java.lang.String,java.lang.Throwable)> -> _SINK_ 
<android.media.MediaFormat: void setInteger(java.lang.String,int)> -> _SINK_ 
<android.net.wifi.WifiEnterpriseConfig: void setClientKeyEntry(java.security.PrivateKey,java.security.cert.X509Certificate)> -> _SINK_ 
<android.app.Dialog: void setFeatureDrawableResource(int,int)> -> _SINK_ 
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)> android.permission.BROADCAST_STICKY android.permission.MANAGE_APP_TOKENS -> _SINK_ 
<android.location.Criteria: void setVerticalAccuracy(int)> -> _SINK_ 
<android.content.Intent: void <init>(android.content.Intent)> -> _SINK_ 
<android.location.Location: void setSpeed(float)> -> _SINK_ 
<android.view.View: void setEnabled(boolean)> -> _SINK_ 
<android.util.Log: int i(java.lang.String,java.lang.String)> -> _SINK_ 
<java.lang.Byte: int compareTo(java.lang.Object)> -> _SINK_ 
<android.widget.ListView: void setHeaderDividersEnabled(boolean)> -> _SINK_ 
<android.app.ExpandableListActivity: void setListAdapter(android.widget.ExpandableListAdapter)> -> _SINK_ 
<android.graphics.Paint: void setShadowLayer(float,float,float,int)> -> _SINK_ 
<android.view.View: void setOverScrollMode(int)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setScrollable(boolean)> -> _SINK_ 
<android.widget.RemoteViews: void setViewVisibility(int,int)> -> _SINK_ 
<android.view.View: void setTag(int,java.lang.Object)> -> _SINK_ 
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(java.lang.String)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)> -> _SINK_ 
<java.math.BigInteger: int bitLength()> -> _SINK_ 
<java.lang.Character: int compare(char,char)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setTextSelection(int,int)> -> _SINK_ 
<android.os.ParcelUuid: int hashCode()> -> _SINK_ 
<android.view.View: void setTranslationY(float)> -> _SINK_ 
<java.lang.Integer: int parseInt(java.lang.String,int)> -> _SINK_ 
<android.widget.TextView: void setSingleLine()> -> _SINK_ 
<java.lang.Character: int hashCode()> -> _SINK_ 
<android.content.ContextWrapper: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> -> _SINK_ 
<java.lang.reflect.AccessibleObject: void setAccessible(boolean)> -> _SINK_ 
<java.lang.reflect.Field: void setFloat(java.lang.Object,float)> -> _SINK_ 
<java.lang.StringBuffer: int indexOf(java.lang.String)> -> _SINK_ 
<android.text.Layout$Alignment: android.text.Layout$Alignment valueOf(java.lang.String)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setInputType(int)> -> _SINK_ 
<android.view.WindowManager$LayoutParams: int copyFrom(android.view.WindowManager$LayoutParams)> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])> -> _SINK_ 
<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)> -> _SINK_ 
<org.apache.http.util.CharArrayBuffer: int indexOf(int,int,int)> -> _SINK_ 
<android.hardware.Camera: void setErrorCallback(android.hardware.Camera$ErrorCallback)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setJpegQuality(int)> -> _SINK_ 
<java.net.Socket: void setSoLinger(boolean,int)> -> _SINK_ 
<java.util.UUID: int hashCode()> -> _SINK_ 
<java.net.URI: int compareTo(java.net.URI)> -> _SINK_ 
<android.widget.TextView: void setHint(int)> -> _SINK_ 
<android.content.Intent: boolean filterEquals(android.content.Intent)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)> -> _SINK_ 
<android.view.View: void setRotation(float)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setContentDescription(java.lang.CharSequence)> -> _SINK_ 
<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])> -> _SINK_ 
<java.lang.Character: int toChars(int,char[],int)> -> _SINK_ 
<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)> -> _SINK_ 
<android.content.res.Configuration: void setTo(android.content.res.Configuration)> -> _SINK_ 
<java.lang.ThreadGroup: int activeGroupCount()> -> _SINK_ 
<android.nfc.NdefRecord: int hashCode()> -> _SINK_ 
<android.view.View: void setDrawingCacheEnabled(boolean)> -> _SINK_ 
<android.widget.TextView: void setPrivateImeOptions(java.lang.String)> -> _SINK_ 
<android.content.Intent: void setSourceBounds(android.graphics.Rect)> -> _SINK_ 
<android.content.IntentFilter: int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence)> -> _SINK_ 
<android.os.Message: android.os.Message obtain(android.os.Handler)> -> _SINK_ 
<android.app.Activity: void setFeatureDrawableAlpha(int,int)> -> _SINK_ 
<android.animation.ValueAnimator: void setFrameDelay(long)> -> _SINK_ 
<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> -> _SINK_ 
<android.util.SparseArray: int indexOfKey(int)> -> _SINK_ 
<android.widget.TextView: void setMaxHeight(int)> -> _SINK_ 
<android.content.pm.Signature: int describeContents()> -> _SINK_ 
<android.content.ContextWrapper: void startActivities(android.content.Intent[],android.os.Bundle)> -> _SINK_ 
<java.lang.String: int codePointAt(int)> -> _SINK_ 
<java.util.Random: int nextInt(int)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setSubText(java.lang.CharSequence)> -> _SINK_ 
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)> -> _SINK_ 
<android.graphics.Matrix: int hashCode()> -> _SINK_ 
<android.app.Fragment$SavedState: int describeContents()> -> _SINK_ 
<android.content.res.Configuration: int compareTo(java.lang.Object)> -> _SINK_ 
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)> -> _SINK_ 
<java.lang.Long: java.lang.String toOctalString(long)> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setEditable(boolean)> -> _SINK_ 
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config)> -> _SINK_ 
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)> -> _SINK_ 
<android.widget.TextView: void setInputExtras(int)> -> _SINK_ 
<android.content.pm.ConfigurationInfo: int describeContents()> -> _SINK_ 
<android.view.View: void setSystemUiVisibility(int)> -> _SINK_ 
<java.net.DatagramSocket: void setSendBufferSize(int)> -> _SINK_ 
<android.net.wifi.WifiManager$WifiLock: void setWorkSource(android.os.WorkSource)> -> _SINK_ 
<java.lang.Integer: int bitCount(int)> -> _SINK_ 
<android.view.MotionEvent: java.lang.String axisToString(int)> -> _SINK_ 
<android.animation.ValueAnimator: void setCurrentPlayTime(long)> -> _SINK_ 
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)> -> _SINK_ 
<android.widget.ListView: void setSelection(int)> -> _SINK_ 
<android.animation.ValueAnimator: void setRepeatMode(int)> -> _SINK_ 
<android.app.Activity: void startActivities(android.content.Intent[])> -> _SINK_ 
<android.content.pm.FeatureInfo: int describeContents()> -> _SINK_ 
<android.view.View: void setBottom(int)> -> _SINK_ 
<java.lang.Character: int codePointBefore(char[],int,int)> -> _SINK_ 
<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setPictureSize(int,int)> -> _SINK_ 
<java.util.UUID: int compareTo(java.lang.Object)> -> _SINK_ 
<java.lang.String: int length()> -> _SINK_ 
<java.lang.Integer: java.lang.String toString(int)> -> _SINK_ 
<android.os.ParcelFileDescriptor: int parseMode(java.lang.String)> -> _SINK_ 
<android.location.Criteria: void setBearingAccuracy(int)> -> _SINK_ 
<android.widget.TextView: void setWidth(int)> -> _SINK_ 
<android.widget.TextView: void setTextScaleX(float)> -> _SINK_ 
<android.os.Parcel: int dataPosition()> -> _SINK_ 
<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)> -> _SINK_ 
<android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)> -> _SINK_ 
<java.util.BitSet: int size()> -> _SINK_ 
<android.app.Activity: void startActivity(android.content.Intent,android.os.Bundle)> -> _SINK_ 
<android.content.res.ColorStateList: int describeContents()> -> _SINK_ 
<android.graphics.Matrix: void setSkew(float,float,float,float)> -> _SINK_ 
<android.view.KeyEvent: void setSource(int)> -> _SINK_ 
<android.view.View: void setTranslationX(float)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)> -> _SINK_ 
<android.graphics.Region: boolean set(int,int,int,int)> -> _SINK_ 
<java.lang.Character: int compareTo(java.lang.Object)> -> _SINK_ 
<java.lang.Byte: java.lang.Byte valueOf(java.lang.String,int)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setSceneMode(java.lang.String)> -> _SINK_ 
<android.telephony.ServiceState: void setIsManualSelection(boolean)> -> _SINK_ 
<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)> -> _SINK_ 
<android.view.View: void setLongClickable(boolean)> -> _SINK_ 
<java.lang.Character: int codePointAt(char[],int)> -> _SINK_ 
<android.view.animation.LayoutAnimationController: void setDelay(float)> -> _SINK_ 
<android.graphics.Bitmap: void setWidth(int)> -> _SINK_ 
<java.net.Socket: void sendUrgentData(int)> -> _SINK_ 
<android.media.MediaPlayer: void setDataSource(java.lang.String)> -> _SINK_ 
<android.widget.RemoteViews: void setScrollPosition(int,int)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setFocused(boolean)> -> _SINK_ 
<android.widget.ExpandableListView: void setOnGroupCollapseListener(android.widget.ExpandableListView$OnGroupCollapseListener)> -> _SINK_ 
<android.print.PrintAttributes$Margins: int hashCode()> -> _SINK_ 
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)> -> _SINK_ 
<java.io.File: boolean setExecutable(boolean)> -> _SINK_ 
<java.util.Date: void setSeconds(int)> -> _SINK_ 
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)> -> _SINK_ 
<android.view.inputmethod.ExtractedTextRequest: int describeContents()> -> _SINK_ 
<android.view.View: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)> -> _SINK_ 
<java.net.NetworkInterface: int hashCode()> -> _SINK_ 
<java.lang.Thread: void setDaemon(boolean)> -> _SINK_ 
<android.graphics.Paint$Style: android.graphics.Paint$Style valueOf(java.lang.String)> -> _SINK_ 
<android.bluetooth.BluetoothDevice: boolean setPin(byte[])> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int,int)> -> _SINK_ 
<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)> -> _SINK_ 
<java.lang.Short: int compare(short,short)> -> _SINK_ 
<android.view.View: void setScrollBarDefaultDelayBeforeFade(int)> -> _SINK_ 
<java.util.UUID: int variant()> -> _SINK_ 
<android.content.ComponentName: android.content.ComponentName readFromParcel(android.os.Parcel)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setEnabled(boolean)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setItemCount(int)> -> _SINK_ 
<android.app.Activity: void setTitle(int)> -> _SINK_ 
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,int,int,android.graphics.Bitmap$Config)> -> _SINK_ 
<android.content.pm.ProviderInfo: int describeContents()> -> _SINK_ 
<android.net.sip.SipAudioCall: void sendDtmf(int)> -> _SINK_ 
<android.widget.TextView: void setText(java.lang.CharSequence)> -> _SINK_ 
<android.view.KeyEvent: int normalizeMetaState(int)> -> _SINK_ 
<android.net.wifi.WifiManager$MulticastLock: void setReferenceCounted(boolean)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setNumber(int)> -> _SINK_ 
<java.net.DatagramPacket: void setLength(int)> -> _SINK_ 
<javax.security.auth.x500.X500Principal: int hashCode()> -> _SINK_ 
<java.util.Locale: int hashCode()> -> _SINK_ 
<android.view.MotionEvent: void setLocation(float,float)> -> _SINK_ 
<android.view.View: void setMinimumHeight(int)> -> _SINK_ 
<android.graphics.Region: boolean setPath(android.graphics.Path,android.graphics.Region)> -> _SINK_ 
<android.animation.LayoutTransition: void setAnimateParentHierarchy(boolean)> -> _SINK_ 
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)> -> _SINK_ 
<android.view.View: void setImportantForAccessibility(int)> -> _SINK_ 
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setStartDelay(long)> -> _SINK_ 
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)> -> _SINK_ 
<android.content.pm.PermissionInfo: int describeContents()> -> _SINK_ 
<android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setBeforeText(java.lang.CharSequence)> -> _SINK_ 
<android.view.View: int resolveSizeAndState(int,int,int)> -> _SINK_ 
<java.math.BigInteger: int bitCount()> -> _SINK_ 
<java.lang.Integer: int lowestOneBit(int)> -> _SINK_ 
<java.lang.String: java.lang.String valueOf(char[],int,int)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setChecked(boolean)> -> _SINK_ 
<android.widget.TextView: void setTextSize(float)> -> _SINK_ 
<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)> -> _SINK_ 
<android.print.PrintAttributes: int hashCode()> -> _SINK_ 
<android.widget.TextView: void setMarqueeRepeatLimit(int)> -> _SINK_ 
<android.accessibilityservice.AccessibilityService: void setWallpaper(android.graphics.Bitmap)> android.permission.MANAGE_APP_TOKENS android.permission.SET_WALLPAPER -> _SINK_ 
<android.view.View: void setY(float)> -> _SINK_ 
<java.net.URL: void setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)> -> _SINK_ 
<android.view.View: void setKeepScreenOn(boolean)> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: void setVersion(int)> -> _SINK_ 
<java.lang.Integer: int hashCode()> -> _SINK_ 
<android.animation.ValueAnimator: void setEvaluator(android.animation.TypeEvaluator)> -> _SINK_ 
<android.accounts.AuthenticatorDescription: int hashCode()> -> _SINK_ 
<android.view.View: void setActivated(boolean)> -> _SINK_ 
<android.media.MediaPlayer: void setOnTimedTextListener(android.media.MediaPlayer$OnTimedTextListener)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View,int)> -> _SINK_ 
<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)> -> _SINK_ 
<android.widget.TextView: void setGravity(int)> -> _SINK_ 
<android.content.Intent: int filterHashCode()> -> _SINK_ 
<java.lang.Double: int hashCode()> -> _SINK_ 
<android.net.sip.SipManager: void setRegistrationListener(java.lang.String,android.net.sip.SipRegistrationListener)> -> _SINK_ 
<java.lang.Integer: java.lang.Integer decode(java.lang.String)> -> _SINK_ 
<android.os.Handler: boolean sendMessage(android.os.Message)> -> _SINK_ 
<android.location.Criteria: void setAccuracy(int)> -> _SINK_ 
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setMultiLine(boolean)> -> _SINK_ 
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)> -> _SINK_ 
<android.widget.Scroller: int timePassed()> -> _SINK_ 
<java.math.BigInteger: int intValue()> -> _SINK_ 
<android.view.View: void setNextFocusDownId(int)> -> _SINK_ 
<android.widget.TextView: void setText(char[],int,int)> -> _SINK_ 
<android.content.res.AssetFileDescriptor: int describeContents()> -> _SINK_ 
<android.app.PendingIntent: void send(int,android.app.PendingIntent$OnFinished,android.os.Handler)> -> _SINK_ 
<java.lang.String: java.lang.String copyValueOf(char[],int,int)> -> _SINK_ 
<android.content.res.Configuration: void setLocale(java.util.Locale)> -> _SINK_ 
<android.view.animation.LayoutAnimationController: void setOrder(int)> -> _SINK_ 
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)> -> _SINK_ 
<android.content.ComponentName: int compareTo(java.lang.Object)> -> _SINK_ 
<android.telephony.CellInfoCdma: int hashCode()> -> _SINK_ 
<android.view.View: void setBackgroundColor(int)> -> _SINK_ 
<android.os.ParcelUuid: int describeContents()> -> _SINK_ 
<android.graphics.Paint: int breakText(java.lang.String,boolean,float,float[])> -> _SINK_ 
<android.widget.RemoteViews: void setBundle(int,java.lang.String,android.os.Bundle)> -> _SINK_ 
<android.content.ContentProviderClient: int delete(android.net.Uri,java.lang.String,java.lang.String[])> -> _SINK_ 
<java.lang.ThreadGroup: int enumerate(java.lang.ThreadGroup[])> -> _SINK_ 
<android.widget.ListView: void setOverscrollHeader(android.graphics.drawable.Drawable)> -> _SINK_ 
<java.lang.Integer: int numberOfTrailingZeros(int)> -> _SINK_ 
<android.content.IntentFilter: int matchDataAuthority(android.net.Uri)> -> _SINK_ 
<android.view.View: void setHovered(boolean)> -> _SINK_ 
<android.graphics.Region: int describeContents()> -> _SINK_ 
<android.view.accessibility.AccessibilityEvent: void setEventType(int)> -> _SINK_ 
<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)> -> _SINK_ 
<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)> -> _SINK_ 
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)> -> _SINK_ 
<java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)> -> _SINK_ 
<android.os.Debug$MemoryInfo: int describeContents()> -> _SINK_ 
<android.view.View: void setScrollBarStyle(int)> -> _SINK_ 
<java.lang.Long: int hashCode()> -> _SINK_ 
<android.app.Activity: void setProgressBarVisibility(boolean)> -> _SINK_ 
<android.view.View: void setVisibility(int)> -> _SINK_ 
<java.lang.Long: java.lang.String toBinaryString(long)> -> _SINK_ 
<android.view.View: void setSaveEnabled(boolean)> -> _SINK_ 
<android.widget.AbsListView: void setRemoteViewsAdapter(android.content.Intent)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setExtras(android.os.Bundle)> -> _SINK_ 
<android.app.Dialog: void setCanceledOnTouchOutside(boolean)> -> _SINK_ 
<android.widget.TextView: void setTextLocale(java.util.Locale)> -> _SINK_ 
<org.apache.http.util.ByteArrayBuffer: int byteAt(int)> -> _SINK_ 
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> -> _SINK_ 
<java.util.UUID: java.util.UUID nameUUIDFromBytes(byte[])> -> _SINK_ 
<java.util.BitSet: int nextClearBit(int)> -> _SINK_ 
<android.view.animation.Transformation: void set(android.view.animation.Transformation)> -> _SINK_ 
<android.media.MediaPlayer: void setSurface(android.view.Surface)> -> _SINK_ 
<android.accounts.AccountAuthenticatorActivity: void sendBroadcast(android.content.Intent,java.lang.String)> android.permission.BROADCAST_STICKY android.permission.MANAGE_APP_TOKENS -> _SINK_ 
<java.lang.String: int lastIndexOf(int,int)> -> _SINK_ 
<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)> -> _SINK_ 
<android.view.View: void setLeft(int)> -> _SINK_ 
<java.net.Socket: void setSocketImplFactory(java.net.SocketImplFactory)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setMovementGranularities(int)> -> _SINK_ 
<android.widget.TextView: void setMinWidth(int)> -> _SINK_ 
<android.graphics.Matrix: void setRotate(float,float,float)> -> _SINK_ 
<android.app.Fragment: void setTargetFragment(android.app.Fragment,int)> -> _SINK_ 
<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setPictureFormat(int)> -> _SINK_ 
<android.widget.TextView: void setTextAppearance(android.content.Context,int)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setCanOpenPopup(boolean)> -> _SINK_ 
<java.util.Random: int nextInt()> -> _SINK_ 
<android.util.SparseArray: int size()> -> _SINK_ 
<android.app.Notification: int describeContents()> -> _SINK_ 
<java.net.DatagramSocket: void setTrafficClass(int)> -> _SINK_ 
<org.apache.http.util.CharArrayBuffer: int capacity()> -> _SINK_ 
<android.location.Location: void setAccuracy(float)> -> _SINK_ 
<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)> -> _SINK_ 
<android.content.pm.Signature: int hashCode()> -> _SINK_ 
<android.os.Parcel: int dataAvail()> -> _SINK_ 
<android.util.SparseBooleanArray: int indexOfKey(int)> -> _SINK_ 
<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)> -> _SINK_ 
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)> -> _SINK_ 
<android.view.View: void setOnDragListener(android.view.View$OnDragListener)> -> _SINK_ 
<java.net.DatagramPacket: void setData(byte[])> -> _SINK_ 
<android.widget.TextView: void setSingleLine(boolean)> -> _SINK_ 
<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)> -> _SINK_ 
<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)> -> _SINK_ 
<android.app.Activity: void startManagingCursor(android.database.Cursor)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setExposureCompensation(int)> -> _SINK_ 
<android.view.View: void setScrollContainer(boolean)> -> _SINK_ 
<android.util.Log: int wtf(java.lang.String,java.lang.String)> -> _SINK_ 
<android.app.Dialog: void setDismissMessage(android.os.Message)> -> _SINK_ 
<android.content.ContextWrapper: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> -> _SINK_ 
<android.content.Intent: android.content.Intent replaceExtras(android.content.Intent)> -> _SINK_ 
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addNextIntent(android.content.Intent)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setWhen(long)> -> _SINK_ 
<android.content.ContextWrapper: int checkPermission(java.lang.String,int,int)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setJpegThumbnailSize(int,int)> -> _SINK_ 
<android.bluetooth.BluetoothDevice: int hashCode()> -> _SINK_ 
<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)> -> _SINK_ 
<android.graphics.RectF: void set(float,float,float,float)> -> _SINK_ 
<android.graphics.Rect: void set(int,int,int,int)> -> _SINK_ 
<android.view.MotionEvent: void setSource(int)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setShowWhen(boolean)> -> _SINK_ 
<android.view.View: void setOnClickListener(android.view.View$OnClickListener)> -> _SINK_ 
<android.view.View: void setBackground(android.graphics.drawable.Drawable)> -> _SINK_ 
<java.util.BitSet: void set(int)> -> _SINK_ 
<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)> -> _SINK_ 
<android.os.Parcel: int readInt()> -> _SINK_ 
<android.media.MediaPlayer$TrackInfo: int describeContents()> -> _SINK_ 
<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)> -> _SINK_ 
<android.content.ContextWrapper: int checkCallingOrSelfUriPermission(android.net.Uri,int)> -> _SINK_ 
<java.math.BigInteger: java.math.BigInteger setBit(int)> -> _SINK_ 
<android.view.View: void setNextFocusForwardId(int)> -> _SINK_ 
<android.nfc.NdefRecord: android.nfc.NdefRecord createApplicationRecord(java.lang.String)> -> _SINK_ 
<android.graphics.Bitmap: void setHasMipMap(boolean)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setViewIdResourceName(java.lang.String)> -> _SINK_ 
<android.location.Criteria: void setAltitudeRequired(boolean)> -> _SINK_ 
<java.lang.Thread: int activeCount()> -> _SINK_ 
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)> -> _SINK_ 
<android.view.MotionEvent$PointerCoords: void setAxisValue(int,float)> -> _SINK_ 
<android.graphics.Matrix: void set(android.graphics.Matrix)> -> _SINK_ 
<android.view.View: int combineMeasuredStates(int,int)> -> _SINK_ 
<android.view.View: void setHapticFeedbackEnabled(boolean)> -> _SINK_ 
<android.view.inputmethod.EditorInfo: int describeContents()> -> _SINK_ 
<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setSound(android.net.Uri,int)> -> _SINK_ 
<android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> -> _SINK_ 
<java.util.UUID: int version()> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,android.database.DatabaseErrorHandler)> -> _SINK_ 
<java.lang.Byte: byte parseByte(java.lang.String)> -> _SINK_ 
<android.content.BroadcastReceiver$PendingResult: void setResultData(java.lang.String)> -> _SINK_ 
<android.content.IntentSender: int describeContents()> -> _SINK_ 
<android.view.View: void setTouchDelegate(android.view.TouchDelegate)> -> _SINK_ 
<android.accessibilityservice.AccessibilityServiceInfo: int describeContents()> -> _SINK_ 
<android.graphics.Paint: void set(android.graphics.Paint)> -> _SINK_ 
<java.net.Socket: void setOOBInline(boolean)> -> _SINK_ 
<android.net.wifi.WifiInfo: int describeContents()> -> _SINK_ 
<android.net.wifi.SupplicantState: android.net.wifi.SupplicantState valueOf(java.lang.String)> -> _SINK_ 
<android.app.PendingIntent: void send(int)> -> _SINK_ 
<android.widget.TextView: void setMinLines(int)> -> _SINK_ 
<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> -> _SINK_ 
<android.app.Dialog: void setOnKeyListener(android.content.DialogInterface$OnKeyListener)> -> _SINK_ 
<java.lang.Double: java.lang.String toString(double)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setPackageName(java.lang.CharSequence)> -> _SINK_ 
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)> -> _SINK_ 
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)> -> _SINK_ 
<java.lang.Integer: int reverse(int)> -> _SINK_ 
<android.app.Activity: void setFeatureDrawable(int,android.graphics.drawable.Drawable)> -> _SINK_ 
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)> -> _SINK_ 
<java.lang.Byte: java.lang.String toString(byte)> -> _SINK_ 
<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)> -> _SINK_ 
<android.graphics.Paint: void setARGB(int,int,int,int)> -> _SINK_ 
<android.print.PageRange: int hashCode()> -> _SINK_ 
<java.net.DatagramPacket: void setSocketAddress(java.net.SocketAddress)> -> _SINK_ 
<java.lang.Integer: int compare(int,int)> -> _SINK_ 
<android.app.Activity: void setFeatureDrawableResource(int,int)> -> _SINK_ 
<java.io.FileInputStream: int read()> -> _SINK_ 
<android.content.ContentProviderClient: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> -> _SINK_ 
<java.lang.Short: java.lang.Short valueOf(short)> -> _SINK_ 
<android.widget.TextView: void setHint(java.lang.CharSequence)> -> _SINK_ 
<android.os.Parcel: int dataCapacity()> -> _SINK_ 
<android.os.ParcelFileDescriptor: int detachFd()> -> _SINK_ 
<java.lang.reflect.Field: void setBoolean(java.lang.Object,boolean)> -> _SINK_ 
<android.app.Fragment: void startActivityForResult(android.content.Intent,int)> -> _SINK_ 
<android.widget.ListView: void setCacheColorHint(int)> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)> -> _SINK_ 
<java.net.Socket: void setSendBufferSize(int)> -> _SINK_ 
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)> -> _SINK_ 
<android.graphics.Matrix: void setRotate(float)> -> _SINK_ 
<java.lang.Long: int numberOfLeadingZeros(long)> -> _SINK_ 
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)> -> _SINK_ 
<android.graphics.Bitmap: void setHeight(int)> -> _SINK_ 
<java.lang.Character: int digit(char,int)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setLargeIcon(android.graphics.Bitmap)> -> _SINK_ 
<java.lang.Long: java.lang.String toHexString(long)> -> _SINK_ 
<android.hardware.Camera: void setPreviewCallbackWithBuffer(android.hardware.Camera$PreviewCallback)> -> _SINK_ 
<java.lang.Thread: void setName(java.lang.String)> -> _SINK_ 
<android.app.Dialog: void setCancelMessage(android.os.Message)> -> _SINK_ 
<android.view.View: void setRight(int)> -> _SINK_ 
<java.io.File: boolean setReadable(boolean,boolean)> -> _SINK_ 
<android.nfc.NfcAdapter: void setOnNdefPushCompleteCallback(android.nfc.NfcAdapter$OnNdefPushCompleteCallback,android.app.Activity,android.app.Activity[])> -> _SINK_ 
<android.content.IntentFilter: int countDataPaths()> -> _SINK_ 
<java.lang.Short: int compareTo(java.lang.Object)> -> _SINK_ 
<android.os.Message: void setTarget(android.os.Handler)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setAutoExposureLock(boolean)> -> _SINK_ 
<android.content.ClipDescription: int describeContents()> -> _SINK_ 
<android.webkit.WebView: void setMapTrackballToArrowKeys(boolean)> -> _SINK_ 
<android.telephony.CellInfoCdma: int describeContents()> -> _SINK_ 
<android.widget.RemoteViews: void setOnClickFillInIntent(int,android.content.Intent)> -> _SINK_ 
<android.nfc.NdefRecord: android.nfc.NdefRecord createMime(java.lang.String,byte[])> -> _SINK_ 
<android.net.sip.SipAudioCall: void setSpeakerMode(boolean)> -> _SINK_ 
<android.view.View: void setOnHoverListener(android.view.View$OnHoverListener)> -> _SINK_ 
<android.widget.TextView: void setText(int)> -> _SINK_ 
<android.graphics.Typeface: int hashCode()> -> _SINK_ 
<java.io.PrintStream: void setError()> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean)> -> _SINK_ 
<android.graphics.Paint: int breakText(char[],int,int,float,float[])> -> _SINK_ 
<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)> -> _SINK_ 
<android.widget.ExpandableListView: void setChildDivider(android.graphics.drawable.Drawable)> -> _SINK_ 
<org.apache.http.util.ByteArrayBuffer: int length()> -> _SINK_ 
<android.provider.Browser: void sendString(android.content.Context,java.lang.String)> -> _SINK_ 
<android.accounts.AuthenticatorDescription: int describeContents()> -> _SINK_ 
<android.hardware.Camera$Size: int hashCode()> -> _SINK_ 
<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)> -> _SINK_ 
<android.widget.RemoteViews: void setDouble(int,java.lang.String,double)> -> _SINK_ 
<android.view.View: int resolveSize(int,int)> -> _SINK_ 
<android.widget.ListView: void setSelectionFromTop(int,int)> -> _SINK_ 
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)> -> _SINK_ 
<android.content.pm.PackageInfo: int describeContents()> -> _SINK_ 
<java.lang.Float: int compare(float,float)> -> _SINK_ 
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> -> _SINK_ 
<java.lang.String: int offsetByCodePoints(int,int)> -> _SINK_ 
<android.graphics.Paint: int breakText(java.lang.CharSequence,int,int,boolean,float,float[])> -> _SINK_ 
<java.net.DatagramSocket: void setReceiveBufferSize(int)> -> _SINK_ 
<java.lang.StringBuilder: void setCharAt(int,char)> -> _SINK_ 
<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> -> _SINK_ 
<android.view.ViewGroup$LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)> -> _SINK_ 
<android.content.ContextWrapper: void startActivity(android.content.Intent)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setAddedCount(int)> -> _SINK_ 
<java.io.PrintWriter: void setError()> -> _SINK_ 
<android.widget.TextView: void setMaxWidth(int)> -> _SINK_ 
<java.lang.Thread: int countStackFrames()> -> _SINK_ 
<android.view.View: void setFitsSystemWindows(boolean)> -> _SINK_ 
<java.lang.String: java.lang.String valueOf(char[])> -> _SINK_ 
<android.os.Messenger: int describeContents()> -> _SINK_ 
<android.content.ContextWrapper: void startActivity(android.content.Intent,android.os.Bundle)> -> _SINK_ 
<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)> -> _SINK_ 
<android.view.View: void setOnGenericMotionListener(android.view.View$OnGenericMotionListener)> -> _SINK_ 
<android.widget.ListView: void setAdapter(android.widget.Adapter)> -> _SINK_ 
<android.widget.ExpandableListView: void setSelectedGroup(int)> -> _SINK_ 
<android.graphics.Matrix: void setValues(float[])> -> _SINK_ 
<android.graphics.Matrix: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)> -> _SINK_ 
<android.animation.PropertyValuesHolder: void setProperty(android.util.Property)> -> _SINK_ 
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)> -> _SINK_ 
<android.widget.ExpandableListView: void setIndicatorBounds(int,int)> -> _SINK_ 
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)> -> _SINK_ 
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)> -> _SINK_ 
<android.util.DisplayMetrics: void setTo(android.util.DisplayMetrics)> -> _SINK_ 
<android.app.Activity: void setProgressBarIndeterminateVisibility(boolean)> -> _SINK_ 
<java.security.CodeSigner: int hashCode()> -> _SINK_ 
<android.app.Activity: void setProgress(int)> -> _SINK_ 
<android.animation.PropertyValuesHolder: void setPropertyName(java.lang.String)> -> _SINK_ 
<android.app.Fragment: void startActivity(android.content.Intent)> -> _SINK_ 
<java.lang.Double: java.lang.Double valueOf(java.lang.String)> -> _SINK_ 
<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)> -> _SINK_ 
<android.accounts.AccountAuthenticatorActivity: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> android.permission.BROADCAST_STICKY android.permission.MANAGE_APP_TOKENS -> _SINK_ 
<android.view.View: void setScrollBarSize(int)> -> _SINK_ 
<java.util.BitSet: int previousSetBit(int)> -> _SINK_ 
<java.util.ArrayList: int hashCode()> -> _SINK_ 
<java.lang.reflect.Method: int hashCode()> -> _SINK_ 
<android.util.SparseBooleanArray: int indexOfValue(boolean)> -> _SINK_ 
<android.widget.TextView: void setCompoundDrawablePadding(int)> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: void setPageSize(long)> -> _SINK_ 
<android.view.View: void setVerticalFadingEdgeEnabled(boolean)> -> _SINK_ 
<android.location.Location: void setExtras(android.os.Bundle)> -> _SINK_ 
<android.widget.RemoteViews: void setBitmap(int,java.lang.String,android.graphics.Bitmap)> -> _SINK_ 
<android.net.wifi.SupplicantState: int describeContents()> -> _SINK_ 
<java.lang.String: int lastIndexOf(int)> -> _SINK_ 
<android.app.Activity: void setTitleColor(int)> -> _SINK_ 
<android.util.SparseBooleanArray: int keyAt(int)> -> _SINK_ 
<android.os.UserHandle: android.os.UserHandle readFromParcel(android.os.Parcel)> -> _SINK_ 
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)> -> _SINK_ 
<android.widget.ListView: void setItemsCanFocus(boolean)> -> _SINK_ 
<java.lang.Thread: int enumerate(java.lang.Thread[])> -> _SINK_ 
<android.hardware.Camera$Parameters: void setGpsProcessingMethod(java.lang.String)> -> _SINK_ 
<android.widget.TextView: void setLineSpacing(float,float)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setAutoCancel(boolean)> -> _SINK_ 
<android.widget.RemoteViews: void setImageViewUri(int,android.net.Uri)> -> _SINK_ 
<android.view.View: void setPadding(int,int,int,int)> -> _SINK_ 
<android.view.View: void setTextAlignment(int)> -> _SINK_ 
<java.lang.reflect.Field: int hashCode()> -> _SINK_ 
<android.app.Activity: void setTitle(java.lang.CharSequence)> -> _SINK_ 
<android.graphics.RectF: void set(android.graphics.RectF)> -> _SINK_ 
<java.net.DatagramPacket: void setAddress(java.net.InetAddress)> -> _SINK_ 
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int)> -> _SINK_ 
<android.content.IntentFilter: int match(android.content.ContentResolver,android.content.Intent,boolean,java.lang.String)> -> _SINK_ 
<android.view.View: void setAccessibilityLiveRegion(int)> -> _SINK_ 
<android.app.Dialog: void setTitle(java.lang.CharSequence)> -> _SINK_ 
<android.content.ContextWrapper: int checkCallingPermission(java.lang.String)> -> _SINK_ 
<android.os.Message: android.os.Message obtain(android.os.Handler,int)> -> _SINK_ 
<org.apache.http.util.ByteArrayBuffer: void setLength(int)> -> _SINK_ 
<android.view.View: void setDuplicateParentStateEnabled(boolean)> -> _SINK_ 
<android.widget.TextView: void setPadding(int,int,int,int)> -> _SINK_ 
<android.location.Criteria: void setSpeedAccuracy(int)> -> _SINK_ 
<java.util.Date: int compareTo(java.lang.Object)> -> _SINK_ 
<android.widget.TextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)> -> _SINK_ 
<android.app.Fragment: void setArguments(android.os.Bundle)> -> _SINK_ 
<java.net.Socket: void setPerformancePreferences(int,int,int)> -> _SINK_ 
<android.widget.Scroller: void setFriction(float)> -> _SINK_ 
<android.location.Location: void setProvider(java.lang.String)> -> _SINK_ 
<java.lang.reflect.Field: void setDouble(java.lang.Object,double)> -> _SINK_ 
<android.view.inputmethod.CorrectionInfo: int describeContents()> -> _SINK_ 
<android.app.Activity: boolean navigateUpTo(android.content.Intent)> -> _SINK_ 
<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)> -> _SINK_ 
<java.lang.Long: long highestOneBit(long)> -> _SINK_ 
<java.util.ArrayList: int lastIndexOf(java.lang.Object)> -> _SINK_ 
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)> -> _SINK_ 
<android.view.View: void setMeasuredDimension(int,int)> -> _SINK_ 
<android.media.MediaFormat: android.media.MediaFormat createAudioFormat(java.lang.String,int,int)> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: int releaseMemory()> -> _SINK_ 
<android.widget.TextView: void setTextColor(int)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View,int)> -> _SINK_ 
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)> -> _SINK_ 
<android.animation.PropertyValuesHolder: void setFloatValues(float[])> -> _SINK_ 
<java.lang.String: int lastIndexOf(java.lang.String,int)> -> _SINK_ 
<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)> -> _SINK_ 
<android.content.ContextWrapper: boolean stopService(android.content.Intent)> -> _SINK_ 
<android.view.animation.LayoutAnimationController: void setAnimation(android.view.animation.Animation)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setAutoWhiteBalanceLock(boolean)> -> _SINK_ 
<android.view.View: void setAlpha(float)> -> _SINK_ 
<java.lang.Class: java.lang.Class forName(java.lang.String)> -> _SINK_ 
<android.accessibilityservice.AccessibilityService: android.content.ComponentName startService(android.content.Intent)> android.permission.MANAGE_APP_TOKENS -> _SINK_ 
<android.net.sip.SipAudioCall: void setListener(android.net.sip.SipAudioCall$Listener)> -> _SINK_ 
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)> -> _SINK_ 
<android.telephony.CellIdentityCdma: int describeContents()> -> _SINK_ 
<android.app.ActivityManager$RunningAppProcessInfo: int describeContents()> -> _SINK_ 
<java.lang.Short: short parseShort(java.lang.String)> -> _SINK_ 
<java.io.File: boolean setReadable(boolean)> -> _SINK_ 
<android.widget.ExpandableListView: void setChildIndicator(android.graphics.drawable.Drawable)> -> _SINK_ 
<android.app.Activity: void setIntent(android.content.Intent)> -> _SINK_ 
<java.lang.reflect.Field: void setInt(java.lang.Object,int)> -> _SINK_ 
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)> -> _SINK_ 
<android.graphics.Paint: android.graphics.Rasterizer setRasterizer(android.graphics.Rasterizer)> -> _SINK_ 
<android.telephony.CellIdentityCdma: int hashCode()> -> _SINK_ 
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)> -> _SINK_ 
<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])> -> _SINK_ 
<android.app.backup.BackupDataInputStream: int read(byte[])> -> _SINK_ 
<android.util.DisplayMetrics: int hashCode()> -> _SINK_ 
<java.lang.Integer: int reverseBytes(int)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)> -> _SINK_ 
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)> -> _SINK_ 
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int)> -> _SINK_ 
<android.widget.RemoteViews: void setRemoteAdapter(int,android.content.Intent)> -> _SINK_ 
<android.graphics.Rect: boolean setIntersect(android.graphics.Rect,android.graphics.Rect)> -> _SINK_ 
<android.widget.RemoteViews: void setRemoteAdapter(int,int,android.content.Intent)> -> _SINK_ 
<android.view.MotionEvent: android.view.MotionEvent obtainNoHistory(android.view.MotionEvent)> -> _SINK_ 
<android.provider.Settings$Secure: void setLocationProviderEnabled(android.content.ContentResolver,java.lang.String,boolean)> -> _SINK_ 
<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)> -> _SINK_ 
<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer$OnSeekCompleteListener)> -> _SINK_ 
<java.lang.Boolean: int compareTo(java.lang.Boolean)> -> _SINK_ 
<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)> -> _SINK_ 
<android.widget.TextView: void setShadowLayer(float,float,float,int)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setPreviewFormat(int)> -> _SINK_ 
<android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)> -> _SINK_ 
<android.widget.ExpandableListView: boolean setSelectedChild(int,int,boolean)> -> _SINK_ 
<java.lang.Integer: int intValue()> -> _SINK_ 
<java.util.HashMap: int size()> -> _SINK_ 
<java.lang.String: int compareTo(java.lang.Object)> -> _SINK_ 
<java.lang.Long: java.lang.Long valueOf(long)> -> _SINK_ 
<android.content.IntentFilter: int matchData(java.lang.String,java.lang.String,android.net.Uri)> -> _SINK_ 
<android.widget.RemoteViews: void setEmptyView(int,int)> -> _SINK_ 
<android.content.SyncRequest: int describeContents()> -> _SINK_ 
<java.lang.Character: char lowSurrogate(int)> -> _SINK_ 
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)> -> _SINK_ 
<java.util.BitSet: void set(int,int)> -> _SINK_ 
<java.lang.Byte: int intValue()> -> _SINK_ 
<android.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)> -> _SINK_ 
<android.graphics.Rect: int describeContents()> -> _SINK_ 
<java.net.ServerSocket: void setReuseAddress(boolean)> -> _SINK_ 
<android.content.Intent: android.content.Intent setAction(java.lang.String)> -> _SINK_ 
<java.util.Date: void setTime(long)> -> _SINK_ 
<android.content.ContextWrapper: int checkCallingUriPermission(android.net.Uri,int)> -> _SINK_ 
<java.lang.StringBuffer: int indexOf(java.lang.String,int)> -> _SINK_ 
<android.app.Activity: void setRequestedOrientation(int)> -> _SINK_ 
<java.util.Date: int compareTo(java.util.Date)> -> _SINK_ 
<java.lang.StringBuilder: int capacity()> -> _SINK_ 
<android.hardware.Camera$Parameters: void setMeteringAreas(java.util.List)> -> _SINK_ 
<java.lang.StringBuffer: int lastIndexOf(java.lang.String)> -> _SINK_ 
<android.os.Parcel: void setDataPosition(int)> -> _SINK_ 
<java.util.UUID: java.util.UUID fromString(java.lang.String)> -> _SINK_ 
<android.view.View: void setFocusableInTouchMode(boolean)> -> _SINK_ 
<android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)> -> _SINK_ 
<java.math.BigInteger: int hashCode()> -> _SINK_ 
<java.lang.Boolean: int hashCode()> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: java.lang.String findEditTable(java.lang.String)> -> _SINK_ 
<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)> -> _SINK_ 
<java.util.BitSet: int hashCode()> -> _SINK_ 
<android.content.res.Configuration: int diff(android.content.res.Configuration)> -> _SINK_ 
<java.net.Socket: void setKeepAlive(boolean)> -> _SINK_ 
<android.view.MotionEvent: java.lang.String actionToString(int)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)> -> _SINK_ 
<android.telephony.ServiceState: void setStateOff()> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)> -> _SINK_ 
<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()> -> _SINK_ 
<android.content.Intent: void setSelector(android.content.Intent)> -> _SINK_ 
<android.hardware.Camera: android.hardware.Camera open(int)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setFocusAreas(java.util.List)> -> _SINK_ 
<android.content.IntentFilter: int countCategories()> -> _SINK_ 
<android.app.Dialog: void setFeatureDrawable(int,android.graphics.drawable.Drawable)> -> _SINK_ 
<android.widget.ListView: void setSelectionAfterHeaderView()> -> _SINK_ 
<java.lang.Integer: java.lang.String toString(int,int)> -> _SINK_ 
<android.media.MediaFormat: android.media.MediaFormat createSubtitleFormat(java.lang.String,java.lang.String)> -> _SINK_ 
<java.util.Date: void setMonth(int)> -> _SINK_ 
<java.lang.Float: int compareTo(java.lang.Float)> -> _SINK_ 
<android.view.View: void setNextFocusLeftId(int)> -> _SINK_ 
<android.app.Application: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> android.permission.MANAGE_APP_TOKENS -> _SINK_ 
<java.net.ServerSocket: void setPerformancePreferences(int,int,int)> -> _SINK_ 
<android.telephony.CellSignalStrengthCdma: int describeContents()> -> _SINK_ 
<android.net.wifi.WifiEnterpriseConfig: int describeContents()> -> _SINK_ 
<android.accounts.AuthenticatorDescription: android.accounts.AuthenticatorDescription newKey(java.lang.String)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean)> -> _SINK_ 
<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity[])> -> _SINK_ 
<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)> -> _SINK_ 
<android.app.Fragment: void onActivityResult(int,int,android.content.Intent)> -> _SINK_ 
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)> -> _SINK_ 
<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setRotation(int)> -> _SINK_ 
<android.net.wifi.WifiEnterpriseConfig: void setSubjectMatch(java.lang.String)> -> _SINK_ 
<android.widget.TextView: void setImeActionLabel(java.lang.CharSequence,int)> -> _SINK_ 
<android.webkit.WebView: void setOverScrollMode(int)> -> _SINK_ 
<java.net.URI: int hashCode()> -> _SINK_ 
<java.lang.Double: java.lang.Double valueOf(double)> -> _SINK_ 
<android.widget.TextView: void setSelected(boolean)> -> _SINK_ 
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)> -> _SINK_ 
<android.webkit.WebView: void setWebContentsDebuggingEnabled(boolean)> -> _SINK_ 
<android.content.ContextWrapper: void startActivities(android.content.Intent[])> -> _SINK_ 
<java.io.File: boolean setLastModified(long)> -> _SINK_ 
<java.lang.Character: int toLowerCase(int)> -> _SINK_ 
<java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit valueOf(java.lang.String)> -> _SINK_ 
<android.util.TypedValue: int complexToDimensionPixelOffset(int,android.util.DisplayMetrics)> -> _SINK_ 
<java.net.Socket: void setReuseAddress(boolean)> -> _SINK_ 
<android.widget.TextView: void setLinkTextColor(int)> -> _SINK_ 
<java.lang.Float: float parseFloat(java.lang.String)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setColorEffect(java.lang.String)> -> _SINK_ 
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView$BufferType)> -> _SINK_ 
<java.io.File: boolean setWritable(boolean)> -> _SINK_ 
<org.apache.http.ProtocolVersion: int compareToVersion(org.apache.http.ProtocolVersion)> -> _SINK_ 
<java.net.InetAddress: int hashCode()> -> _SINK_ 
<java.lang.Long: int numberOfTrailingZeros(long)> -> _SINK_ 
<android.app.Activity: void setFeatureDrawableUri(int,android.net.Uri)> -> _SINK_ 
<java.lang.Float: int compareTo(java.lang.Object)> -> _SINK_ 
<java.lang.String: int compareToIgnoreCase(java.lang.String)> -> _SINK_ 
<android.net.wifi.WifiEnterpriseConfig: void setCaCertificate(java.security.cert.X509Certificate)> -> _SINK_ 
<android.os.Parcel: void setDataSize(int)> -> _SINK_ 
<java.lang.reflect.Field: void setByte(java.lang.Object,byte)> -> _SINK_ 
<android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode valueOf(java.lang.String)> -> _SINK_ 
<java.lang.Integer: int rotateLeft(int,int)> -> _SINK_ 
<java.lang.String: java.lang.String valueOf(boolean)> -> _SINK_ 
<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)> -> _SINK_ 
<android.widget.ExpandableListView: void setIndicatorBoundsRelative(int,int)> -> _SINK_ 
<android.graphics.Bitmap: void setPixel(int,int,int)> -> _SINK_ 
<java.lang.String: int codePointCount(int,int)> -> _SINK_ 
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)> -> _SINK_ 
<android.app.Activity: void setResult(int,android.content.Intent)> -> _SINK_ 
<android.view.View: void setOnLongClickListener(android.view.View$OnLongClickListener)> -> _SINK_ 
<android.os.WorkSource: int hashCode()> -> _SINK_ 
<java.lang.Long: int compareTo(java.lang.Object)> -> _SINK_ 
<java.lang.reflect.Field: void setLong(java.lang.Object,long)> -> _SINK_ 
<android.content.Intent: android.content.Intent setTypeAndNormalize(java.lang.String)> -> _SINK_ 
<android.content.ClipData: android.content.ClipData newIntent(java.lang.CharSequence,android.content.Intent)> -> _SINK_ 
<android.view.ViewGroup$MarginLayoutParams: void setMarginStart(int)> -> _SINK_ 
<android.telephony.ServiceState: void setState(int)> -> _SINK_ 
<android.os.Parcel: int dataSize()> -> _SINK_ 
<android.content.SyncInfo: int describeContents()> -> _SINK_ 
<android.view.View: void setOnSystemUiVisibilityChangeListener(android.view.View$OnSystemUiVisibilityChangeListener)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)> -> _SINK_ 
<android.provider.Settings$System: void setShowGTalkServiceStatus(android.content.ContentResolver,boolean)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)> -> _SINK_ 
<android.content.IntentFilter: int countDataTypes()> -> _SINK_ 
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: void setLocale(java.util.Locale)> -> _SINK_ 
<android.view.View: void setSaveFromParentEnabled(boolean)> -> _SINK_ 
<android.app.Activity: void openContextMenu(android.view.View)> -> _SINK_ 
<android.view.View$AccessibilityDelegate: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)> -> _SINK_ 
<android.webkit.WebView: void setInitialScale(int)> -> _SINK_ 
<java.lang.String: int indexOf(java.lang.String,int)> -> _SINK_ 
<android.graphics.RectF: void setEmpty()> -> _SINK_ 
<android.location.Criteria: void setCostAllowed(boolean)> -> _SINK_ 
<android.util.SparseArray: void setValueAt(int,java.lang.Object)> -> _SINK_ 
<android.content.ComponentName: int hashCode()> -> _SINK_ 
<android.net.wifi.WifiEnterpriseConfig: void setEapMethod(int)> -> _SINK_ 
<java.lang.Long: long parseLong(java.lang.String)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setProgress(int,int,boolean)> -> _SINK_ 
<android.nfc.NfcAdapter: void setBeamPushUrisCallback(android.nfc.NfcAdapter$CreateBeamUrisCallback,android.app.Activity)> -> _SINK_ 
<android.graphics.Rect: void set(android.graphics.Rect)> -> _SINK_ 
<android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)> -> _SINK_ 
<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)> -> _SINK_ 
<android.webkit.WebView: void setNetworkAvailable(boolean)> -> _SINK_ 
<android.widget.ExpandableListView: void setAdapter(android.widget.Adapter)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)> -> _SINK_ 
<java.lang.Long: java.lang.Long valueOf(java.lang.String,int)> -> _SINK_ 
<android.os.Handler: boolean sendEmptyMessage(int)> -> _SINK_ 
<android.print.PrintAttributes$MediaSize: int hashCode()> -> _SINK_ 
<android.view.View: void setScrollbarFadingEnabled(boolean)> -> _SINK_ 
<android.widget.TextView: void setMaxEms(int)> -> _SINK_ 
<android.content.pm.ServiceInfo: int describeContents()> -> _SINK_ 
<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)> -> _SINK_ 
<android.content.res.Configuration: void setToDefaults()> -> _SINK_ 
<android.widget.RemoteViews: void setRelativeScrollPosition(int,int)> -> _SINK_ 
<java.io.FileInputStream: int available()> -> _SINK_ 
<android.view.View: void setVerticalScrollbarPosition(int)> -> _SINK_ 
<android.app.Activity: void setContentView(android.view.View)> -> _SINK_ 
<android.bluetooth.BluetoothDevice: int describeContents()> -> _SINK_ 
<android.app.Fragment: int hashCode()> -> _SINK_ 
<android.hardware.Camera$Parameters: void setFlashMode(java.lang.String)> -> _SINK_ 
<java.lang.StringBuffer: int offsetByCodePoints(int,int)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setGpsAltitude(double)> -> _SINK_ 
<android.animation.LayoutTransition: void setAnimator(int,android.animation.Animator)> -> _SINK_ 
<java.lang.StringBuilder: int indexOf(java.lang.String)> -> _SINK_ 
<android.accessibilityservice.AccessibilityServiceInfo: int hashCode()> -> _SINK_ 
<java.util.Locale: void setDefault(java.util.Locale)> -> _SINK_ 
<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)> -> _SINK_ 
<java.lang.ThreadGroup: int enumerate(java.lang.Thread[],boolean)> -> _SINK_ 
<android.animation.ValueAnimator: void setIntValues(int[])> -> _SINK_ 
<android.graphics.Bitmap: int describeContents()> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setToIndex(int)> -> _SINK_ 
<android.app.Activity: void setVisible(boolean)> -> _SINK_ 
<android.widget.RemoteViews: void setTextViewCompoundDrawablesRelative(int,int,int,int,int)> -> _SINK_ 
<java.lang.ThreadGroup: int activeCount()> -> _SINK_ 
<android.util.Pair: int hashCode()> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setContentInvalid(boolean)> -> _SINK_ 
<android.view.View: void setScrollX(int)> -> _SINK_ 
<android.content.res.Configuration: int compareTo(android.content.res.Configuration)> -> _SINK_ 
<android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)> -> _SINK_ 
<java.util.Date: void setHours(int)> -> _SINK_ 
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)> -> _SINK_ 
<android.accounts.AccountAuthenticatorActivity: android.content.ComponentName startService(android.content.Intent)> android.permission.MANAGE_APP_TOKENS -> _SINK_ 
<android.content.ContentValues: int describeContents()> -> _SINK_ 
<java.util.Date: void setDate(int)> -> _SINK_ 
<android.content.IntentSender: int hashCode()> -> _SINK_ 
<java.io.FileInputStream: int read(byte[],int,int)> -> _SINK_ 
<android.graphics.Path$Op: android.graphics.Path$Op valueOf(java.lang.String)> -> _SINK_ 
<android.widget.RemoteViews: void setPendingIntentTemplate(int,android.app.PendingIntent)> -> _SINK_ 
<android.content.ContentValues: int hashCode()> -> _SINK_ 
<java.security.Timestamp: int hashCode()> -> _SINK_ 
<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)> -> _SINK_ 
<java.lang.StringBuilder: void setLength(int)> -> _SINK_ 
<android.graphics.RectF: boolean setIntersect(android.graphics.RectF,android.graphics.RectF)> -> _SINK_ 
<android.widget.TextView: void setTextSize(int,float)> -> _SINK_ 
<java.lang.Byte: java.lang.Byte decode(java.lang.String)> -> _SINK_ 
<android.media.MediaFormat: void setByteBuffer(java.lang.String,java.nio.ByteBuffer)> -> _SINK_ 
<android.os.Messenger: int hashCode()> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setSmallIcon(int)> -> _SINK_ 
<android.app.Activity: void startActivityForResult(android.content.Intent,int)> -> _SINK_ 
<android.graphics.Rect: android.graphics.Rect unflattenFromString(java.lang.String)> -> _SINK_ 
<android.graphics.Bitmap: void setHasAlpha(boolean)> -> _SINK_ 
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)> -> _SINK_ 
<android.view.View: void setDrawingCacheQuality(int)> -> _SINK_ 
<android.graphics.Paint$Align: android.graphics.Paint$Align valueOf(java.lang.String)> -> _SINK_ 
<android.util.Log: int w(java.lang.String,java.lang.Throwable)> -> _SINK_ 
<java.net.Socket: void setReceiveBufferSize(int)> -> _SINK_ 
<android.bluetooth.BluetoothHeadset: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)> -> _SINK_ 
<android.widget.ListView: void setOverscrollFooter(android.graphics.drawable.Drawable)> -> _SINK_ 
<android.widget.RemoteViews: void setShort(int,java.lang.String,short)> -> _SINK_ 
<android.content.Intent: android.content.Intent setData(android.net.Uri)> -> _SINK_ 
<android.os.Parcel: android.os.Parcel obtain(int)> -> _SINK_ 
<android.os.WorkSource: void set(android.os.WorkSource)> -> _SINK_ 
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> -> _SINK_ 
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)> -> _SINK_ 
<android.content.ContentProviderResult: int describeContents()> -> _SINK_ 
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)> -> _SINK_ 
<android.content.Intent: android.content.Intent setPackage(java.lang.String)> -> _SINK_ 
<android.print.PrintAttributes$Resolution: int hashCode()> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setCurrentItemIndex(int)> -> _SINK_ 
<android.os.Messenger: void send(android.os.Message)> -> _SINK_ 
<android.app.Fragment: void setUserVisibleHint(boolean)> -> _SINK_ 
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)> -> _SINK_ 
<android.graphics.Region: boolean set(android.graphics.Region)> -> _SINK_ 
<android.location.Criteria: void setPowerRequirement(int)> -> _SINK_ 
<android.view.View: void setLayoutDirection(int)> -> _SINK_ 
<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)> -> _SINK_ 
<android.app.Fragment: void setInitialSavedState(android.app.Fragment$SavedState)> -> _SINK_ 
<android.net.sip.SipManager: boolean isIncomingCallIntent(android.content.Intent)> -> _SINK_ 
<android.widget.RemoteViews: void setTextViewTextSize(int,int,float)> -> _SINK_ 
<android.widget.TextView: void setAllCaps(boolean)> -> _SINK_ 
<java.net.URI: java.net.URI create(java.lang.String)> -> _SINK_ 
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(int,java.lang.String)> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)> -> _SINK_ 
<java.lang.ThreadGroup: void setMaxPriority(int)> -> _SINK_ 
<android.telephony.CellSignalStrengthCdma: int hashCode()> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setScrollY(int)> -> _SINK_ 
<java.lang.Double: int compare(double,double)> -> _SINK_ 
<java.net.URL: int hashCode()> -> _SINK_ 
<android.hardware.Camera$Parameters: void setPreviewSize(int,int)> -> _SINK_ 
<android.view.View: void setNextFocusUpId(int)> -> _SINK_ 
<android.graphics.Canvas: void setDensity(int)> -> _SINK_ 
<android.widget.TextView: void setHeight(int)> -> _SINK_ 
<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)> -> _SINK_ 
<android.widget.TextView: void setEms(int)> -> _SINK_ 
<android.content.ContextWrapper: int checkCallingOrSelfPermission(java.lang.String)> -> _SINK_ 
<android.view.animation.LayoutAnimationController: void setAnimation(android.content.Context,int)> -> _SINK_ 
<android.view.View: void setRotationX(float)> -> _SINK_ 
<android.telephony.ServiceState: void setRoaming(boolean)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setFocusMode(java.lang.String)> -> _SINK_ 
<android.location.Criteria: void setSpeedRequired(boolean)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setOngoing(boolean)> -> _SINK_ 
<android.accessibilityservice.AccessibilityService: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)> android.permission.MANAGE_APP_TOKENS -> _SINK_ 
<android.widget.TextView: void setEnabled(boolean)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setGpsLongitude(double)> -> _SINK_ 
<java.lang.StringBuilder: int codePointCount(int,int)> -> _SINK_ 
<android.animation.ValueAnimator: void setStartDelay(long)> -> _SINK_ 
<java.net.Socket: void setSoTimeout(int)> -> _SINK_ 
<java.lang.Character: int charCount(int)> -> _SINK_ 
<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])> -> _SINK_ 
<android.util.Log: int d(java.lang.String,java.lang.String)> -> _SINK_ 
<android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)> -> _SINK_ 
<android.app.Dialog: void setFeatureDrawableAlpha(int,int)> -> _SINK_ 
<java.io.File: int hashCode()> -> _SINK_ 
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)> -> _SINK_ 
<java.lang.Byte: byte parseByte(java.lang.String,int)> -> _SINK_ 
<android.provider.ContactsContract$ProfileSyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])> -> _SINK_ 
<java.lang.Character: int codePointCount(java.lang.CharSequence,int,int)> -> _SINK_ 
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> -> _SINK_ 
<android.hardware.Camera$Parameters: void set(java.lang.String,int)> -> _SINK_ 
<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)> -> _SINK_ 
<java.lang.Boolean: java.lang.String toString(boolean)> -> _SINK_ 
<android.widget.TextView: void setScroller(android.widget.Scroller)> -> _SINK_ 
<android.widget.TextView: void setKeyListener(android.text.method.KeyListener)> -> _SINK_ 
<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)> -> _SINK_ 
<android.nfc.NdefRecord: android.nfc.NdefRecord createExternal(java.lang.String,java.lang.String,byte[])> -> _SINK_ 
<java.io.File: boolean setWritable(boolean,boolean)> -> _SINK_ 
<java.lang.StringBuilder: int indexOf(java.lang.String,int)> -> _SINK_ 
<android.view.accessibility.AccessibilityEvent: void setEventTime(long)> -> _SINK_ 
<java.lang.Character: java.lang.String toString(char)> -> _SINK_ 
<android.widget.TextView: void setMaxLines(int)> -> _SINK_ 
<android.widget.RemoteViews: void setTextColor(int,int)> -> _SINK_ 
<android.view.MotionEvent: void setEdgeFlags(int)> -> _SINK_ 
<java.lang.StringBuilder: int length()> -> _SINK_ 
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,int,int,int)> -> _SINK_ 
<java.lang.Double: java.lang.String toHexString(double)> -> _SINK_ 
<android.graphics.Bitmap: void setPremultiplied(boolean)> -> _SINK_ 
<android.view.View: void setSoundEffectsEnabled(boolean)> -> _SINK_ 
<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])> -> _SINK_ 
<java.lang.Long: java.lang.String toString(long,int)> -> _SINK_ 
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,float,float,float,float,int,float,float,int,int)> -> _SINK_ 
<android.graphics.Region: boolean set(android.graphics.Rect)> -> _SINK_ 
<android.graphics.RectF: void set(android.graphics.Rect)> -> _SINK_ 
<java.lang.Long: long reverse(long)> -> _SINK_ 
<java.lang.Byte: int hashCode()> -> _SINK_ 
<android.app.Service: int onStartCommand(android.content.Intent,int,int)> -> _SINK_ 
<android.view.View: void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)> -> _SINK_ 
<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)> -> _SINK_ 
<java.math.BigInteger: int signum()> -> _SINK_ 
<android.app.Fragment: void setMenuVisibility(boolean)> -> _SINK_ 
<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)> -> _SINK_ 
<java.lang.StringBuffer: void setCharAt(int,char)> -> _SINK_ 
<java.util.Random: int next(int)> -> _SINK_ 
<android.view.View: void setScaleX(float)> -> _SINK_ 
<android.view.View: void setPivotY(float)> -> _SINK_ 
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String,int)> -> _SINK_ 
<android.app.Activity: void startActivity(android.content.Intent)> -> _SINK_ 
<android.app.Dialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> -> _SINK_ 
<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)> -> _SINK_ 
<android.view.ViewGroup$MarginLayoutParams: void setLayoutDirection(int)> -> _SINK_ 
<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)> -> _SINK_ 
<java.util.UUID: int clockSequence()> -> _SINK_ 
<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)> -> _SINK_ 
<java.lang.String: java.lang.String valueOf(int)> -> _SINK_ 
<android.app.Activity: void setResult(int)> -> _SINK_ 
<android.content.Intent: android.content.Intent setDataAndNormalize(android.net.Uri)> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)> -> _SINK_ 
<android.view.ViewGroup$MarginLayoutParams: void setMargins(int,int,int,int)> -> _SINK_ 
<android.animation.LayoutTransition: void setStagger(int,long)> -> _SINK_ 
<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener)> -> _SINK_ 
<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)> -> _SINK_ 
<java.util.ArrayList: int indexOf(java.lang.Object)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setScrollX(int)> -> _SINK_ 
<android.content.IntentFilter: int countDataSchemes()> -> _SINK_ 
<android.app.Dialog: void setTitle(int)> -> _SINK_ 
<android.view.View: void setRotationY(float)> -> _SINK_ 
<android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat valueOf(java.lang.String)> -> _SINK_ 
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)> -> _SINK_ 
<android.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)> -> _SINK_ 
<android.view.View: void setWillNotCacheDrawing(boolean)> -> _SINK_ 
<android.app.Dialog: void setCancelable(boolean)> -> _SINK_ 
<java.lang.Long: int compareTo(java.lang.Long)> -> _SINK_ 
<android.bluetooth.BluetoothAdapter: boolean startLeScan(java.util.UUID[],android.bluetooth.BluetoothAdapter$LeScanCallback)> -> _SINK_ 
<java.io.File: int compareTo(java.lang.Object)> -> _SINK_ 
<android.view.MotionEvent: int axisFromString(java.lang.String)> -> _SINK_ 
<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)> -> _SINK_ 
<android.view.KeyCharacterMap: int describeContents()> -> _SINK_ 
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle)> -> _SINK_ 
<android.app.Notification$Action: int describeContents()> -> _SINK_ 
<java.lang.Short: int intValue()> -> _SINK_ 
<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)> -> _SINK_ 
<android.widget.RemoteViews: void setString(int,java.lang.String,java.lang.String)> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory)> -> _SINK_ 
<java.lang.Character: char forDigit(int,int)> -> _SINK_ 
<java.lang.Character: char[] toChars(int)> -> _SINK_ 
<android.view.View: void setFadingEdgeLength(int)> -> _SINK_ 
<android.widget.RemoteViews: void setFloat(int,java.lang.String,float)> -> _SINK_ 
<android.content.ComponentName: int compareTo(android.content.ComponentName)> -> _SINK_ 
<android.app.ExpandableListActivity: void setSelectedGroup(int)> -> _SINK_ 
<android.widget.TextView: void setFilters(android.text.InputFilter[])> -> _SINK_ 
<android.widget.TextView: void setSelectAllOnFocus(boolean)> -> _SINK_ 
<java.lang.ThreadGroup: void setDaemon(boolean)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setUsesChronometer(boolean)> -> _SINK_ 
<android.view.View: void setCameraDistance(float)> -> _SINK_ 
<android.content.pm.ResolveInfo: int describeContents()> -> _SINK_ 
<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)> android.permission.STOP_APP_SWITCHES -> _SINK_ 
<android.widget.RemoteViews: int describeContents()> -> _SINK_ 
<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)> -> _SINK_ 
<android.os.UserHandle: int hashCode()> -> _SINK_ 
<android.graphics.Path$Direction: android.graphics.Path$Direction valueOf(java.lang.String)> -> _SINK_ 
<java.lang.StringBuffer: int capacity()> -> _SINK_ 
<android.os.Bundle: int size()> -> _SINK_ 
<java.lang.Long: int intValue()> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setOnlyAlertOnce(boolean)> -> _SINK_ 
<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)> -> _SINK_ 
<android.os.UserHandle: int describeContents()> -> _SINK_ 
<android.hardware.Camera: void setZoomChangeListener(android.hardware.Camera$OnZoomChangeListener)> -> _SINK_ 
<java.lang.Integer: int numberOfLeadingZeros(int)> -> _SINK_ 
<android.os.CancellationSignal: void setOnCancelListener(android.os.CancellationSignal$OnCancelListener)> -> _SINK_ 
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setAntibanding(java.lang.String)> -> _SINK_ 
<android.graphics.Rect: int height()> -> _SINK_ 
<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)> -> _SINK_ 
<android.graphics.Path: void setLastPoint(float,float)> -> _SINK_ 
<java.lang.StringBuilder: int lastIndexOf(java.lang.String)> -> _SINK_ 
<android.os.Messenger: android.os.Messenger readMessengerOrNullFromParcel(android.os.Parcel)> -> _SINK_ 
<java.lang.StringBuffer: int codePointBefore(int)> -> _SINK_ 
<android.widget.RemoteViews: void setImageViewResource(int,int)> -> _SINK_ 
<java.lang.Double: int compareTo(java.lang.Double)> -> _SINK_ 
<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)> -> _SINK_ 
<android.view.View: void setAnimation(android.view.animation.Animation)> -> _SINK_ 
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int[],int,int,int,int,android.graphics.Bitmap$Config)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)> -> _SINK_ 
<java.lang.String: int indexOf(int)> -> _SINK_ 
<android.content.IntentFilter: int countActions()> -> _SINK_ 
<android.view.InputDevice: int describeContents()> -> _SINK_ 
<android.widget.TextView: void setPaintFlags(int)> -> _SINK_ 
<android.content.IntentFilter: void setPriority(int)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setLights(int,int,int)> -> _SINK_ 
<android.widget.RemoteViews: void setContentDescription(int,java.lang.CharSequence)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setFullScreen(boolean)> -> _SINK_ 
<android.util.TypedValue: void setTo(android.util.TypedValue)> -> _SINK_ 
<java.lang.Character: int toUpperCase(int)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setContent(android.widget.RemoteViews)> -> _SINK_ 
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> -> _SINK_ 
<android.os.ParcelFileDescriptor: int describeContents()> -> _SINK_ 
<android.view.Surface: int describeContents()> -> _SINK_ 
<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setLiveRegion(int)> -> _SINK_ 
<android.view.View: void setTag(java.lang.Object)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setDefaults(int)> -> _SINK_ 
<java.lang.Short: java.lang.Short valueOf(java.lang.String)> -> _SINK_ 
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(java.lang.String)> -> _SINK_ 
<android.content.Intent: android.content.Intent setDataAndTypeAndNormalize(android.net.Uri,java.lang.String)> -> _SINK_ 
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)> -> _SINK_ 
<android.webkit.WebView: void setLayerType(int,android.graphics.Paint)> -> _SINK_ 
<android.view.ContextThemeWrapper: void setTheme(int)> -> _SINK_ 
<java.lang.Character: java.lang.Character valueOf(char)> -> _SINK_ 
<java.net.DatagramSocket: void send(java.net.DatagramPacket)> -> _SINK_ 
<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)> -> _SINK_ 
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)> android.permission.AUTHENTICATE_ACCOUNTS -> _SINK_ 
<android.content.res.Configuration: int describeContents()> -> _SINK_ 
<android.print.PrintAttributes: int describeContents()> -> _SINK_ 
<java.lang.Integer: int signum(int)> -> _SINK_ 
<android.app.Activity: void setDefaultKeyMode(int)> -> _SINK_ 
<java.lang.Long: java.lang.Long valueOf(java.lang.String)> -> _SINK_ 
<android.content.res.Configuration: int hashCode()> -> _SINK_ 
<android.media.MediaPlayer: void setVideoScalingMode(int)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setWhiteBalance(java.lang.String)> -> _SINK_ 
<android.hardware.Camera: void setFaceDetectionListener(android.hardware.Camera$FaceDetectionListener)> -> _SINK_ 
<android.content.SyncAdapterType: int describeContents()> -> _SINK_ 
<android.view.View$AccessibilityDelegate: void sendAccessibilityEvent(android.view.View,int)> -> _SINK_ 
<android.view.View: void setPivotX(float)> -> _SINK_ 
<android.view.View: void setScaleY(float)> -> _SINK_ 
<java.lang.Character: int toTitleCase(int)> -> _SINK_ 
<android.content.SyncAdapterType: int hashCode()> -> _SINK_ 
<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)> -> _SINK_ 
<android.view.View: void setHorizontalFadingEdgeEnabled(boolean)> -> _SINK_ 
<java.lang.Boolean: int compare(boolean,boolean)> -> _SINK_ 
<java.lang.Short: short reverseBytes(short)> -> _SINK_ 
<android.app.ActivityManager$MemoryInfo: int describeContents()> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setRangeInfo(android.view.accessibility.AccessibilityNodeInfo$RangeInfo)> -> _SINK_ 
<java.lang.Character: int offsetByCodePoints(java.lang.CharSequence,int,int)> -> _SINK_ 
<android.graphics.Paint: void setTextLocale(java.util.Locale)> -> _SINK_ 
<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)> -> _SINK_ 
<android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)> -> _SINK_ 
<android.app.Dialog: void setVolumeControlStream(int)> -> _SINK_ 
<android.widget.TextView: void setHorizontallyScrolling(boolean)> -> _SINK_ 
<android.widget.Scroller: void setFinalX(int)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setDismissable(boolean)> -> _SINK_ 
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,int[],android.view.MotionEvent$PointerCoords[],int,float,float,int,int,int,int)> -> _SINK_ 
<android.app.Dialog: void setFeatureDrawableUri(int,android.net.Uri)> -> _SINK_ 
<android.view.WindowId: int describeContents()> -> _SINK_ 
<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)> -> _SINK_ 
<android.net.wifi.WifiManager$WifiLock: void setReferenceCounted(boolean)> -> _SINK_ 
<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)> -> _SINK_ 
<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SINK_ 
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(java.lang.String)> -> _SINK_ 
<android.widget.TextView: void setInputType(int)> -> _SINK_ 
<java.lang.Short: int compareTo(java.lang.Short)> -> _SINK_ 
<android.text.TextPaint: void set(android.text.TextPaint)> -> _SINK_ 
<android.app.PendingIntent: int describeContents()> -> _SINK_ 
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)> -> _SINK_ 
<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)> -> _SINK_ 
<java.lang.Float: int hashCode()> -> _SINK_ 
<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)> -> _SINK_ 
<android.view.View: void setClickable(boolean)> -> _SINK_ 
<android.content.ContextWrapper: void setTheme(int)> -> _SINK_ 
<android.app.Activity: void startActivities(android.content.Intent[],android.os.Bundle)> -> _SINK_ 
<android.app.backup.BackupDataInputStream: int read()> -> _SINK_ 
<android.content.pm.PermissionGroupInfo: int describeContents()> -> _SINK_ 
<android.print.PrintDocumentInfo: int describeContents()> -> _SINK_ 
<android.location.Criteria: void setBearingRequired(boolean)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setEnabled(boolean)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: int hashCode()> -> _SINK_ 
<android.content.IntentFilter: int countDataAuthorities()> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)> -> _SINK_ 
<android.graphics.Paint$Cap: android.graphics.Paint$Cap valueOf(java.lang.String)> -> _SINK_ 
<android.net.sip.SipSession: void setListener(android.net.sip.SipSession$Listener)> -> _SINK_ 
<android.widget.TextView: void setMinHeight(int)> -> _SINK_ 
<android.animation.ValueAnimator: void setFloatValues(float[])> -> _SINK_ 
<java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)> -> _SINK_ 
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setPassword(boolean)> -> _SINK_ 
<android.view.View: void setMinimumWidth(int)> -> _SINK_ 
<android.graphics.Bitmap: void setConfig(android.graphics.Bitmap$Config)> -> _SINK_ 
<java.lang.Long: java.lang.Long decode(java.lang.String)> -> _SINK_ 
<android.graphics.Bitmap$Config: android.graphics.Bitmap$Config valueOf(java.lang.String)> -> _SINK_ 
<android.location.Location: void setElapsedRealtimeNanos(long)> -> _SINK_ 
<android.widget.RemoteViews: void setChar(int,java.lang.String,char)> -> _SINK_ 
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)> -> _SINK_ 
<android.widget.TextView: void setCursorVisible(boolean)> -> _SINK_ 
<android.view.View: void setFocusable(boolean)> -> _SINK_ 
<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)> -> _SINK_ 
<android.app.backup.BackupAgentHelper: void setWallpaper(android.graphics.Bitmap)> android.permission.MANAGE_APP_TOKENS android.permission.SET_WALLPAPER -> _SINK_ 
<java.lang.StringBuffer: int lastIndexOf(java.lang.String,int)> -> _SINK_ 
<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)> -> _SINK_ 
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler,java.lang.String)> -> _SINK_ 
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)> -> _SINK_ 
<android.view.accessibility.AccessibilityEvent: void setMovementGranularity(int)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setContentTitle(java.lang.CharSequence)> -> _SINK_ 
<org.apache.http.util.CharArrayBuffer: int indexOf(int)> -> _SINK_ 
<android.animation.ValueAnimator: void setRepeatCount(int)> -> _SINK_ 
<java.net.URI: int compareTo(java.lang.Object)> -> _SINK_ 
<android.util.Log: int w(java.lang.String,java.lang.String)> -> _SINK_ 
<java.lang.Integer: int highestOneBit(int)> -> _SINK_ 
<android.view.accessibility.AccessibilityEvent: java.lang.String eventTypeToString(int)> -> _SINK_ 
<android.app.Activity: void setFinishOnTouchOutside(boolean)> -> _SINK_ 
<java.lang.Short: java.lang.Short valueOf(java.lang.String,int)> -> _SINK_ 
<android.widget.TextView$BufferType: android.widget.TextView$BufferType valueOf(java.lang.String)> -> _SINK_ 
<android.accounts.Account: int describeContents()> -> _SINK_ 
<android.hardware.Camera$Parameters: void setZoom(int)> -> _SINK_ 
<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setRecordingHint(boolean)> -> _SINK_ 
<android.graphics.Path$FillType: android.graphics.Path$FillType valueOf(java.lang.String)> -> _SINK_ 
<java.lang.Character: char toLowerCase(char)> -> _SINK_ 
<java.lang.Byte: java.lang.Byte valueOf(byte)> -> _SINK_ 
<android.widget.TextView: void setMinEms(int)> -> _SINK_ 
<android.widget.TextView: void setFreezesText(boolean)> -> _SINK_ 
<android.graphics.Matrix: void setSinCos(float,float,float,float)> -> _SINK_ 
<android.view.MotionEvent: void setAction(int)> -> _SINK_ 
<android.location.Location: void set(android.location.Location)> -> _SINK_ 
<java.net.Proxy: int hashCode()> -> _SINK_ 
<android.location.Location: void setLongitude(double)> -> _SINK_ 
<android.graphics.Matrix: void setSkew(float,float)> -> _SINK_ 
<android.widget.TextView: void setImeOptions(int)> -> _SINK_ 
<android.graphics.Region: void setEmpty()> -> _SINK_ 
<java.lang.String: int lastIndexOf(java.lang.String)> -> _SINK_ 
<android.net.sip.SipAudioCall: void sendDtmf(int,android.os.Message)> -> _SINK_ 
<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)> -> _SINK_ 
<java.io.File: boolean setExecutable(boolean,boolean)> -> _SINK_ 
<android.view.View: void setNextFocusRightId(int)> -> _SINK_ 
<java.util.BitSet: void set(int,boolean)> -> _SINK_ 
<android.view.View: void setContentDescription(java.lang.CharSequence)> -> _SINK_ 
<android.view.KeyEvent: int keyCodeFromString(java.lang.String)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setMaxScrollX(int)> -> _SINK_ 
<android.view.View: void setSelected(boolean)> -> _SINK_ 
<android.util.SparseArray: int keyAt(int)> -> _SINK_ 
<android.net.DhcpInfo: int describeContents()> -> _SINK_ 
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)> -> _SINK_ 
<android.widget.TextView: void setLinksClickable(boolean)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setGpsTimestamp(long)> -> _SINK_ 
<android.graphics.Point: void set(int,int)> -> _SINK_ 
<android.view.accessibility.AccessibilityEvent: int describeContents()> -> _SINK_ 
<android.accounts.AccountAuthenticatorActivity: void setAccountAuthenticatorResult(android.os.Bundle)> -> _SINK_ 
<java.lang.Thread: void setPriority(int)> -> _SINK_ 
<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)> -> _SINK_ 
<java.util.BitSet: void set(int,int,boolean)> -> _SINK_ 
<android.graphics.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)> -> _SINK_ 
<android.content.BroadcastReceiver$PendingResult: void setResultExtras(android.os.Bundle)> -> _SINK_ 
<java.util.BitSet: int nextSetBit(int)> -> _SINK_ 
<java.lang.Byte: int compareTo(java.lang.Byte)> -> _SINK_ 
<android.view.View: void setLayerType(int,android.graphics.Paint)> -> _SINK_ 
<java.util.UUID: int compareTo(java.util.UUID)> -> _SINK_ 
<android.widget.TextView: void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)> -> _SINK_ 
<android.content.Intent: void setClipData(android.content.ClipData)> -> _SINK_ 
<android.net.wifi.WifiConfiguration: int describeContents()> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)> -> _SINK_ 
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)> -> _SINK_ 
<java.lang.String: boolean startsWith(java.lang.String,int)> -> _SINK_ 
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence)> -> _SINK_ 
<android.widget.Scroller: void setFinalY(int)> -> _SINK_ 
<java.lang.Character: int codePointCount(char[],int,int)> -> _SINK_ 
<java.nio.charset.CoderResult: int length()> -> _SINK_ 
<java.net.URL: java.net.URLConnection openConnection()> android.permission.INTERNET -> _SINK_ 
<java.lang.Character: int toCodePoint(char,char)> -> _SINK_ 
<android.hardware.Camera$Parameters: void set(java.lang.String,java.lang.String)> -> _SINK_ 
<android.animation.PropertyValuesHolder: void setIntValues(int[])> -> _SINK_ 
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: int describeContents()> -> _SINK_ 
<android.animation.LayoutTransition: void setInterpolator(int,android.animation.TimeInterpolator)> -> _SINK_ 
<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)> -> _SINK_ 
<java.net.ServerSocket: void setSoTimeout(int)> -> _SINK_ 
<android.content.Intent: android.content.Intent setType(java.lang.String)> -> _SINK_ 
<java.util.Random: void setSeed(long)> -> _SINK_ 
<android.os.Handler: boolean sendMessageAtFrontOfQueue(android.os.Message)> -> _SINK_ 
<android.widget.ExpandableListView: void setAdapter(android.widget.ListAdapter)> -> _SINK_ 
<java.lang.reflect.Field: void setChar(java.lang.Object,char)> -> _SINK_ 
<java.lang.Long: long parseLong(java.lang.String,int)> -> _SINK_ 
<android.app.Dialog: void setOnShowListener(android.content.DialogInterface$OnShowListener)> -> _SINK_ 
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)> -> _SINK_ 
<android.graphics.Path: void set(android.graphics.Path)> -> _SINK_ 
<android.nfc.NfcAdapter: void setBeamPushUris(android.net.Uri[],android.app.Activity)> -> _SINK_ 
<android.webkit.WebView: void setCertificate(android.net.http.SslCertificate)> -> _SINK_ 
<android.widget.ExpandableListView: void setAdapter(android.widget.ExpandableListAdapter)> -> _SINK_ 
<android.graphics.Matrix: void setScale(float,float,float,float)> -> _SINK_ 
<android.graphics.Bitmap: void setDensity(int)> -> _SINK_ 
<android.content.IntentSender: void writeIntentSenderOrNullToParcel(android.content.IntentSender,android.os.Parcel)> -> _SINK_ 
<android.util.Log: int e(java.lang.String,java.lang.String)> -> _SINK_ 
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)> -> _SINK_ 
<android.view.View: void setScrollBarFadeDuration(int)> -> _SINK_ 
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(android.view.accessibility.AccessibilityEvent)> -> _SINK_ 
<android.graphics.Matrix: void setSinCos(float,float)> -> _SINK_ 
<android.bluetooth.BluetoothHeadset: boolean sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String)> -> _SINK_ 
<java.lang.String: int indexOf(java.lang.String)> -> _SINK_ 
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)> -> _SINK_ 
<android.app.Dialog: void setContentView(android.view.View)> -> _SINK_ 
<android.widget.TextView: void setTextIsSelectable(boolean)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setParcelableData(android.os.Parcelable)> -> _SINK_ 
<android.widget.RemoteViews: void setUri(int,java.lang.String,android.net.Uri)> -> _SINK_ 
<java.lang.StackTraceElement: int hashCode()> -> _SINK_ 
<android.widget.RemoteViews: void setLabelFor(int,int)> -> _SINK_ 
<java.lang.String: int indexOf(int,int)> -> _SINK_ 
<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)> android.permission.GLOBAL_SEARCH -> _SINK_ 
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)> -> _SINK_ 
<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)> -> _SINK_ 
<android.content.ContextWrapper: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)> -> _SINK_ 
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle)> -> _SINK_ 
<android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)> -> _SINK_ 
<android.nfc.NfcAdapter: void enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])> -> _SINK_ 
<java.lang.reflect.Constructor: int hashCode()> -> _SINK_ 
<android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt valueOf(java.lang.String)> -> _SINK_ 
<org.apache.http.util.ByteArrayBuffer: int capacity()> -> _SINK_ 
<android.os.Looper: void setMessageLogging(android.util.Printer)> -> _SINK_ 
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setRemovedCount(int)> -> _SINK_ 
<java.lang.StringBuilder: int offsetByCodePoints(int,int)> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: void setForeignKeyConstraintsEnabled(boolean)> -> _SINK_ 
<android.content.ClipData: int describeContents()> -> _SINK_ 
<java.lang.Character: int offsetByCodePoints(char[],int,int,int,int)> -> _SINK_ 
<android.widget.ExpandableListView: void setOnGroupClickListener(android.widget.ExpandableListView$OnGroupClickListener)> -> _SINK_ 
<java.lang.Integer: int rotateRight(int,int)> -> _SINK_ 
<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)> -> _SINK_ 
<android.widget.ExpandableListView: void setOnGroupExpandListener(android.widget.ExpandableListView$OnGroupExpandListener)> -> _SINK_ 
<java.lang.Long: long reverseBytes(long)> -> _SINK_ 
<android.media.MediaFormat: android.media.MediaFormat createVideoFormat(java.lang.String,int,int)> -> _SINK_ 
<android.content.pm.ApplicationInfo: int describeContents()> -> _SINK_ 
<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View,int)> -> _SINK_ 
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)> -> _SINK_ 
<android.net.wifi.WifiEnterpriseConfig: void setPassword(java.lang.String)> -> _SINK_ 
<android.view.WindowManager$LayoutParams: int describeContents()> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setPassword(boolean)> -> _SINK_ 
<android.accounts.Account: int hashCode()> -> _SINK_ 
<android.app.PendingIntent: int hashCode()> -> _SINK_ 
<android.app.Activity: android.app.PendingIntent createPendingResult(int,android.content.Intent,int)> -> _SINK_ 
<android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit valueOf(java.lang.String)> -> _SINK_ 
<java.util.BitSet: int previousClearBit(int)> -> _SINK_ 
<java.lang.Double: double parseDouble(java.lang.String)> -> _SINK_ 
<android.graphics.Rect: int centerY()> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)> -> _SINK_ 
<org.apache.http.util.CharArrayBuffer: int length()> -> _SINK_ 
<java.lang.String: java.lang.String copyValueOf(char[])> -> _SINK_ 
<android.view.View: void setScrollY(int)> -> _SINK_ 
<android.view.View: void setLabelFor(int)> -> _SINK_ 
<android.graphics.Region$Op: android.graphics.Region$Op valueOf(java.lang.String)> -> _SINK_ 
<java.lang.String: java.lang.String valueOf(float)> -> _SINK_ 
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler)> -> _SINK_ 
<java.security.spec.ECPoint: int hashCode()> -> _SINK_ 
<android.graphics.Matrix: void setScale(float,float)> -> _SINK_ 
<android.provider.ContactsContract$ProfileSyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])> -> _SINK_ 
<java.lang.Long: long rotateLeft(long,int)> -> _SINK_ 
<android.view.View: void setVerticalScrollBarEnabled(boolean)> -> _SINK_ 
<java.security.spec.EllipticCurve: int hashCode()> -> _SINK_ 
<android.graphics.Canvas$VertexMode: android.graphics.Canvas$VertexMode valueOf(java.lang.String)> -> _SINK_ 
<android.os.WorkSource: int describeContents()> -> _SINK_ 
<java.util.Date: void setYear(int)> -> _SINK_ 
<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)> -> _SINK_ 
<android.view.WindowId: int hashCode()> -> _SINK_ 
<java.lang.Character: int codePointAt(char[],int,int)> -> _SINK_ 
<android.widget.TextView: void setPaddingRelative(int,int,int,int)> -> _SINK_ 
<android.location.Criteria: int describeContents()> -> _SINK_ 
<java.lang.Long: long rotateRight(long,int)> -> _SINK_ 
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> -> _SINK_ 
<android.content.Intent: int fillIn(android.content.Intent,int)> -> _SINK_ 
<android.view.DragEvent: int describeContents()> -> _SINK_ 
<android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)> -> _SINK_ 
<android.widget.TextView: void setHintTextColor(int)> -> _SINK_ 
<android.content.IntentFilter: int countDataSchemeSpecificParts()> -> _SINK_ 
<java.lang.Long: long lowestOneBit(long)> -> _SINK_ 
<java.lang.String: int codePointBefore(int)> -> _SINK_ 
<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)> -> _SINK_ 
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)> -> _SINK_ 
<android.location.Criteria: void setHorizontalAccuracy(int)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)> -> _SINK_ 
<android.widget.RemoteViews: void setIntent(int,java.lang.String,android.content.Intent)> -> _SINK_ 
<android.media.MediaPlayer: void setWakeMode(android.content.Context,int)> -> _SINK_ 
<android.widget.ListView: void setFooterDividersEnabled(boolean)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View,int)> -> _SINK_ 
<android.graphics.RectF: int hashCode()> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setMaxScrollY(int)> -> _SINK_ 
<android.app.Activity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> _SINK_ 
<android.view.View: void setFilterTouchesWhenObscured(boolean)> -> _SINK_ 
<java.lang.Long: int signum(long)> -> _SINK_ 
<android.graphics.Rect: void setEmpty()> -> _SINK_ 
<java.lang.StringBuilder: int lastIndexOf(java.lang.String,int)> -> _SINK_ 
<android.content.ContentValues: int size()> -> _SINK_ 
<android.os.PatternMatcher: int describeContents()> -> _SINK_ 
<android.graphics.Path: void setFillType(android.graphics.Path$FillType)> -> _SINK_ 
<android.graphics.Point: int describeContents()> -> _SINK_ 
<android.accounts.AccountAuthenticatorActivity: void setRequestedOrientation(int)> android.permission.DEVICE_POWER android.permission.BROADCAST_STICKY android.permission.WAKE_LOCK android.permission.MANAGE_APP_TOKENS android.permission.UPDATE_DEVICE_STATS -> _SINK_ 
<android.print.PrintDocumentInfo: int hashCode()> -> _SINK_ 
<android.content.IntentFilter: void <init>(android.content.IntentFilter)> -> _SINK_ 
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_ 
<android.bluetooth.BluetoothGattCharacteristic: void setWriteType(int)> -> _SINK_ 
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_ 
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openFd(java.lang.String)> -> _SINK_ 
<android.app.Activity: void setProgressBarIndeterminate(boolean)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setFocusable(boolean)> -> _SINK_ 
<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setContentText(java.lang.CharSequence)> -> _SINK_ 
<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setStyle(android.app.Notification$Style)> -> _SINK_ 
<java.lang.Boolean: int compareTo(java.lang.Object)> -> _SINK_ 
<android.util.DisplayMetrics: void setToDefaults()> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase$CursorFactory)> -> _SINK_ 
<android.widget.TextView: void setError(java.lang.CharSequence)> -> _SINK_ 
<java.lang.Byte: int compare(byte,byte)> -> _SINK_ 
<android.os.Parcel: void setDataCapacity(int)> -> _SINK_ 
<android.view.inputmethod.CompletionInfo: int describeContents()> -> _SINK_ 
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(int,int,int)> -> _SINK_ 
<android.telephony.ServiceState: void setStateOutOfService()> -> _SINK_ 
<java.lang.Long: java.lang.String toString(long)> -> _SINK_ 
<java.lang.Character: int digit(int,int)> -> _SINK_ 
<android.location.Location: int describeContents()> -> _SINK_ 
<java.lang.String: java.lang.String valueOf(long)> -> _SINK_ 
<android.view.View: void setDrawingCacheBackgroundColor(int)> -> _SINK_ 
<java.net.Proxy$Type: java.net.Proxy$Type valueOf(java.lang.String)> -> _SINK_ 
<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])> -> _SINK_ 
<android.view.View: void setClipBounds(android.graphics.Rect)> -> _SINK_ 
<android.content.res.Configuration: void setLayoutDirection(java.util.Locale)> -> _SINK_ 
<android.view.MotionEvent: int findPointerIndex(int)> -> _SINK_ 
<android.widget.ExpandableListView: void setGroupIndicator(android.graphics.drawable.Drawable)> -> _SINK_ 
<android.webkit.WebView: void setScrollBarStyle(int)> -> _SINK_ 
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)> -> _SINK_ 
<android.content.ComponentName: int describeContents()> -> _SINK_ 
<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)> -> _SINK_ 
<java.lang.Integer: java.lang.String toBinaryString(int)> -> _SINK_ 
<android.webkit.WebView: void setBackgroundColor(int)> -> _SINK_ 
<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)> -> _SINK_ 
<android.widget.ListView: void setDividerHeight(int)> -> _SINK_ 
<android.widget.TextView: void setSpannableFactory(android.text.Spannable$Factory)> -> _SINK_ 
<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)> -> _SINK_ 
<android.util.SparseBooleanArray: int size()> -> _SINK_ 
<android.widget.TextView: void setIncludeFontPadding(boolean)> -> _SINK_ 
<android.view.View: void setHasTransientState(boolean)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setGpsLatitude(double)> -> _SINK_ 
<android.widget.TextView: void setHighlightColor(int)> -> _SINK_ 
<android.content.ContentProviderClient: int bulkInsert(android.net.Uri,android.content.ContentValues[])> -> _SINK_ 
<java.net.ServerSocket: void setSocketFactory(java.net.SocketImplFactory)> -> _SINK_ 
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)> -> _SINK_ 
<org.apache.http.protocol.DefaultedHttpContext: void setAttribute(java.lang.String,java.lang.Object)> -> _SINK_ 
<java.lang.ThreadGroup: int enumerate(java.lang.ThreadGroup[],boolean)> -> _SINK_ 
<android.app.backup.BackupDataInputStream: int read(byte[],int,int)> -> _SINK_ 
<android.widget.RemoteViews: void setTextViewCompoundDrawables(int,int,int,int,int)> -> _SINK_ 
<java.lang.Integer: int parseInt(java.lang.String)> -> _SINK_ 
<android.bluetooth.BluetoothClass: int hashCode()> -> _SINK_ 
<android.animation.LayoutTransition: void setDuration(long)> -> _SINK_ 
<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)> -> _SINK_ 
<android.app.Activity: void setContentView(int)> -> _SINK_ 
<org.apache.http.util.CharArrayBuffer: void setLength(int)> -> _SINK_ 
<android.os.Message: android.os.Message obtain(android.os.Message)> -> _SINK_ 
<android.widget.RemoteViews: void setViewPadding(int,int,int,int,int)> -> _SINK_ 
<android.view.View: void setPaddingRelative(int,int,int,int)> -> _SINK_ 
<android.view.accessibility.AccessibilityRecord: void setContentDescription(java.lang.CharSequence)> -> _SINK_ 
<java.net.DatagramSocket: void setDatagramSocketImplFactory(java.net.DatagramSocketImplFactory)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setSound(android.net.Uri)> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: void setMaxSqlCacheSize(int)> -> _SINK_ 
<java.math.BigInteger: int compareTo(java.lang.Object)> -> _SINK_ 
<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> -> _SINK_ 
<android.app.Activity: boolean navigateUpToFromChild(android.app.Activity,android.content.Intent)> -> _SINK_ 
<java.lang.Short: int hashCode()> -> _SINK_ 
<android.graphics.Paint$Join: android.graphics.Paint$Join valueOf(java.lang.String)> -> _SINK_ 
<android.hardware.Camera: void setAutoFocusMoveCallback(android.hardware.Camera$AutoFocusMoveCallback)> -> _SINK_ 
<android.content.Intent: int describeContents()> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)> -> _SINK_ 
<android.widget.TextView: void setText(int,android.widget.TextView$BufferType)> -> _SINK_ 
<android.view.accessibility.AccessibilityEvent: void setAction(int)> -> _SINK_ 
<android.location.Location: void setBearing(float)> -> _SINK_ 
<android.telephony.gsm.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)> -> _SINK_ 
<java.lang.String: int hashCode()> -> _SINK_ 
<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)> -> _SINK_ 
<java.lang.Character: char toTitleCase(char)> -> _SINK_ 
<android.content.ContextWrapper: void removeStickyBroadcast(android.content.Intent)> -> _SINK_ 
<android.util.SparseArray: int indexOfValue(java.lang.Object)> -> _SINK_ 
<android.bluetooth.BluetoothClass: int describeContents()> -> _SINK_ 
<java.lang.Long: int bitCount(long)> -> _SINK_ 
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)> -> _SINK_ 
<android.content.res.TypedArray: int length()> -> _SINK_ 
<java.io.File: int compareTo(java.io.File)> -> _SINK_ 
<android.widget.RemoteViews: void setDisplayedChild(int,int)> -> _SINK_ 
<android.app.Activity: void setSecondaryProgress(int)> -> _SINK_ 
<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)> -> _SINK_ 
<android.location.Location: void setAltitude(double)> -> _SINK_ 
<java.net.Socket: void setTrafficClass(int)> -> _SINK_ 
<android.graphics.Rect: int centerX()> -> _SINK_ 
<android.view.View: int generateViewId()> -> _SINK_ 
<java.lang.Float: int intValue()> -> _SINK_ 
<java.lang.Character: char highSurrogate(int)> -> _SINK_ 
<android.net.sip.SipProfile: int describeContents()> -> _SINK_ 
<java.net.DatagramPacket: void setPort(int)> -> _SINK_ 
<android.view.ViewGroup$MarginLayoutParams: void setMarginEnd(int)> -> _SINK_ 
<android.graphics.Canvas$EdgeType: android.graphics.Canvas$EdgeType valueOf(java.lang.String)> -> _SINK_ 
<android.app.Notification$Builder: android.app.Notification$Builder setVibrate(long[])> -> _SINK_ 
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)> -> _SINK_ 
<android.content.Intent: android.content.Intent setFlags(int)> -> _SINK_ 
<android.widget.TextView: void setEditableFactory(android.text.Editable$Factory)> -> _SINK_ 
<android.nfc.NdefMessage: int hashCode()> -> _SINK_ 
<android.widget.TextView: void setExtractedText(android.view.inputmethod.ExtractedText)> -> _SINK_ 
<android.net.wifi.WifiEnterpriseConfig: void setPhase2Method(int)> -> _SINK_ 
<java.lang.String: java.lang.String valueOf(char)> -> _SINK_ 
<android.widget.RemoteViews: void setByte(int,java.lang.String,byte)> -> _SINK_ 
<android.app.Dialog: void setContentView(int)> -> _SINK_ 
<android.bluetooth.BluetoothAdapter: boolean startLeScan(android.bluetooth.BluetoothAdapter$LeScanCallback)> -> _SINK_ 
<java.net.DatagramPacket: void setData(byte[],int,int)> -> _SINK_ 
<android.hardware.Camera$Parameters: void setPreviewFpsRange(int,int)> -> _SINK_ 
<java.lang.Short: java.lang.String toString(short)> -> _SINK_ 
<android.widget.TextView: void setTypeface(android.graphics.Typeface)> -> _SINK_ 
<android.bluetooth.BluetoothGattDescriptor: boolean setValue(byte[])> -> _SINK_ 
<android.nfc.tech.IsoDep: void setTimeout(int)> -> _SINK_ 
<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)> -> _SINK_ 
<android.media.MediaFormat: void setLong(java.lang.String,long)> -> _SINK_ 
<android.widget.TextView: void setAutoLinkMask(int)> -> _SINK_ 
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)> -> _SINK_ 
<java.util.Date: int hashCode()> -> _SINK_ 
<java.lang.Float: java.lang.Float valueOf(java.lang.String)> -> _SINK_ 
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)> -> _SINK_ 
<android.nfc.NdefMessage: int describeContents()> -> _SINK_ 
<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup$LayoutParams)> -> _SINK_ 
<android.view.View: void setBackgroundResource(int)> -> _SINK_ 
<java.lang.StringBuffer: int codePointCount(int,int)> -> _SINK_ 
<android.animation.LayoutTransition: void setStartDelay(int,long)> -> _SINK_ 
<android.app.Fragment: void setRetainInstance(boolean)> -> _SINK_ 
<android.view.accessibility.AccessibilityNodeInfo: void setAccessibilityFocused(boolean)> -> _SINK_ 
<android.nfc.NdefRecord: android.nfc.NdefRecord createUri(android.net.Uri)> -> _SINK_ 
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(int,int,int,int)> -> _SINK_ 
<android.content.IntentFilter$AuthorityEntry: int match(android.net.Uri)> -> _SINK_ 
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int[],int,int,android.graphics.Bitmap$Config)> -> _SINK_ 
<java.lang.StringBuffer: int codePointAt(int)> -> _SINK_ 
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])> -> _SINK_ 
<java.net.DatagramSocket: void setReuseAddress(boolean)> -> _SINK_ 
<android.net.wifi.WifiManager: void setTdlsEnabledWithMacAddress(java.lang.String,boolean)> -> _SINK_ 
<android.app.PendingIntent: android.app.PendingIntent readPendingIntentOrNullFromParcel(android.os.Parcel)> -> _SINK_ 
