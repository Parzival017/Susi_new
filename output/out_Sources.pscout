<java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)> -> _SOURCE_
<android.text.Layout: int getLineBottom(int)> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.annotation.Annotation getAnnotation(java.lang.Class)> -> _SOURCE_
<android.view.View: int getScrollBarDefaultDelayBeforeFade()> -> _SOURCE_
<android.app.PendingIntent: int getCreatorUid()> -> _SOURCE_
<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()> -> _SOURCE_
<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)> android.permission.READ_CALENDAR -> _SOURCE_
<java.lang.Package: java.lang.String getSpecificationVersion()> -> _SOURCE_
<android.widget.TextView: java.lang.String getPrivateImeOptions()> -> _SOURCE_
<android.app.Fragment: boolean getRetainInstance()> -> _SOURCE_
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.content.Intent: java.lang.String getDataString()> -> _SOURCE_
<android.content.BroadcastReceiver: android.os.Bundle getResultExtras(boolean)> -> _SOURCE_
<android.bluetooth.BluetoothDevice: int getType()> -> _SOURCE_
<android.text.Layout: int getOffsetToRightOf(int)> -> _SOURCE_
<android.view.View: int getLayerType()> -> _SOURCE_
<android.widget.TextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getProxyAddress()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getMaxScrollY()> -> _SOURCE_
<java.lang.Thread: int getPriority()> -> _SOURCE_
<android.view.MotionEvent: float getY(int)> -> _SOURCE_
<android.content.ContentResolver: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<android.net.sip.SipAudioCall: int getState()> -> _SOURCE_
<android.content.IntentFilter: java.lang.String getAction(int)> -> _SOURCE_
<java.lang.reflect.Method: java.lang.String getName()> -> _SOURCE_
<android.view.MotionEvent: int getFlags()> -> _SOURCE_
<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()> -> _SOURCE_
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedWhiteBalance()> -> _SOURCE_
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> -> _SOURCE_
<android.content.ContextWrapper: java.io.File[] getExternalCacheDirs()> -> _SOURCE_
<java.lang.ThreadGroup: int getMaxPriority()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getMaxExposureCompensation()> -> _SOURCE_
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getAnnotations()> -> _SOURCE_
<android.view.InputDevice: int getSources()> -> _SOURCE_
<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[])> -> _SOURCE_
<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<java.lang.Package: java.lang.annotation.Annotation[] getDeclaredAnnotations()> -> _SOURCE_
<android.webkit.WebHistoryItem: java.lang.String getOriginalUrl()> -> _SOURCE_
<android.text.Layout: int getLineForVertical(int)> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$Cap getStrokeCap()> -> _SOURCE_
<android.animation.LayoutTransition: java.util.List getTransitionListeners()> -> _SOURCE_
<android.widget.AbsListView: int getListPaddingBottom()> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getAsuLevel()> -> _SOURCE_
<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()> -> _SOURCE_
<android.text.Layout: float getPrimaryHorizontal(int)> -> _SOURCE_
<java.util.Date: long getTime()> -> _SOURCE_
<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] getValues()> -> _SOURCE_
<android.view.animation.Animation: float getScaleFactor()> -> _SOURCE_
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])> -> _SOURCE_
<android.hardware.Camera$Parameters: int getMinExposureCompensation()> -> _SOURCE_
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)> -> _SOURCE_
<java.net.NetworkInterface: int getIndex()> -> _SOURCE_
<android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newUpdate(android.net.Uri)> -> _SOURCE_
<android.net.wifi.WifiManager: int calculateSignalLevel(int,int)> -> _SOURCE_
<android.app.Service: android.app.Application getApplication()> -> _SOURCE_
<java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getDeviceId()> -> _SOURCE_
<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)> -> _SOURCE_
<android.app.ActivityManager: java.util.List getRunningTasks(int)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)> -> _SOURCE_
<android.view.KeyEvent: int getSource()> -> _SOURCE_
<android.animation.ValueAnimator: long getFrameDelay()> -> _SOURCE_
<java.lang.Class: java.lang.Object[] getSigners()> -> _SOURCE_
<android.util.TypedValue: float getFloat()> -> _SOURCE_
<android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)> -> _SOURCE_
<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)> -> _SOURCE_
<android.widget.AbsListView: int getListPaddingRight()> -> _SOURCE_
<android.view.View: java.lang.CharSequence getContentDescription()> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getUriString()> -> _SOURCE_
<android.webkit.WebHistoryItem: java.lang.String getTitle()> -> _SOURCE_
<android.view.Display: void getCurrentSizeRange(android.graphics.Point,android.graphics.Point)> -> _SOURCE_
<android.widget.TextView: android.graphics.Typeface getTypeface()> -> _SOURCE_
<android.graphics.Movie: android.graphics.Movie decodeStream(java.io.InputStream)> -> _SOURCE_
<android.view.Display: int getPixelFormat()> -> _SOURCE_
<android.widget.AbsListView: int getCacheColorHint()> -> _SOURCE_
<android.webkit.WebChromeClient: android.view.View getVideoLoadingProgressView()> -> _SOURCE_
<android.content.ClipData$Item: java.lang.CharSequence getText()> -> _SOURCE_
<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()> -> _SOURCE_
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<android.widget.AbsListView: int getChoiceMode()> -> _SOURCE_
<android.net.http.SslError: android.net.http.SslCertificate getCertificate()> -> _SOURCE_
<android.location.GpsStatus: java.lang.Iterable getSatellites()> -> _SOURCE_
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()> -> _SOURCE_
<java.lang.reflect.Field: byte getByte(java.lang.Object)> -> _SOURCE_
<android.view.View: int getVerticalScrollbarWidth()> -> _SOURCE_
<android.view.KeyEvent: int getUnicodeChar(int)> -> _SOURCE_
<java.lang.ThreadGroup: java.lang.String getName()> -> _SOURCE_
<android.bluetooth.BluetoothGattService: java.util.List getIncludedServices()> -> _SOURCE_
<android.location.Location: double getAltitude()> -> _SOURCE_
<android.view.ViewGroup: boolean getClipChildren()> -> _SOURCE_
<android.webkit.WebHistoryItem: android.graphics.Bitmap getFavicon()> -> _SOURCE_
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()> -> _SOURCE_
<android.view.ViewGroup: int getLayoutMode()> -> _SOURCE_
<java.net.URLConnection: int getConnectTimeout()> -> _SOURCE_
<android.nfc.tech.IsoDep: int getMaxTransceiveLength()> -> _SOURCE_
<android.view.View: float getX()> -> _SOURCE_
<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)> -> _SOURCE_
<android.app.ActivityManager: java.util.List getRunningServices(int)> -> _SOURCE_
<android.net.wifi.WifiInfo: int getIpAddress()> -> _SOURCE_
<android.view.InputDevice: java.util.List getMotionRanges()> -> _SOURCE_
<android.net.http.SslCertificate$DName: java.lang.String getUName()> -> _SOURCE_
<android.text.Layout: int getParagraphRight(int)> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()> -> _SOURCE_
<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)> -> _SOURCE_
<java.security.spec.EllipticCurve: java.security.spec.ECField getField()> -> _SOURCE_
<android.view.View: int getSystemUiVisibility()> -> _SOURCE_
<java.lang.Package: java.lang.String getSpecificationVendor()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getViewIdResourceName()> -> _SOURCE_
<android.content.ClipData$Item: android.content.Intent getIntent()> -> _SOURCE_
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)> -> _SOURCE_
<android.os.Bundle: char getChar(java.lang.String)> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()> -> _SOURCE_
<java.net.InetAddress: java.net.InetAddress getLocalHost()> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)> -> _SOURCE_
<android.app.backup.BackupDataInput: java.lang.String getKey()> -> _SOURCE_
<android.view.View: long getDrawingTime()> -> _SOURCE_
<android.app.Fragment: int getId()> -> _SOURCE_
<android.net.sip.SipProfile: int getPort()> -> _SOURCE_
<android.content.ContentValues: java.lang.Object get(java.lang.String)> -> _SOURCE_
<android.hardware.Camera$Parameters: int getPreviewFrameRate()> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: int getRecordCount()> -> _SOURCE_
<android.accessibilityservice.AccessibilityService: android.os.IBinder onBind(android.content.Intent)> -> _SOURCE_
<android.media.MediaPlayer$TrackInfo: java.lang.String getLanguage()> -> _SOURCE_
<java.lang.reflect.Field: java.lang.String getName()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getFocusAreas()> -> _SOURCE_
<android.widget.Scroller: int getStartX()> -> _SOURCE_
<android.webkit.WebSettings: boolean getLoadsImagesAutomatically()> -> _SOURCE_
<android.location.Criteria: int getAccuracy()> -> _SOURCE_
<android.view.View: android.view.View getRootView()> -> _SOURCE_
<android.widget.TextView: float getLineSpacingMultiplier()> -> _SOURCE_
<android.view.View: int getBottom()> -> _SOURCE_
<android.location.Location: java.lang.String getProvider()> -> _SOURCE_
<java.lang.Throwable: java.lang.String getLocalizedMessage()> -> _SOURCE_
<android.nfc.tech.BasicTagTechnology: android.nfc.Tag getTag()> -> _SOURCE_
<android.app.Activity: android.content.Intent getParentActivityIntent()> -> _SOURCE_
<java.nio.IntBuffer: java.nio.IntBuffer get(int[],int,int)> -> _SOURCE_
<android.widget.TextView: int getCompoundPaddingEnd()> -> _SOURCE_
<android.content.res.TypedArray: boolean getBoolean(int,boolean)> -> _SOURCE_
<android.webkit.WebSettings: int getMinimumLogicalFontSize()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()> -> _SOURCE_
<java.net.URL: java.lang.String getHost()> -> _SOURCE_
<android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newDelete(android.net.Uri)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getLiveRegion()> -> _SOURCE_
<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)> -> _SOURCE_
<android.widget.AdapterView: java.lang.Object getSelectedItem()> -> _SOURCE_
<android.content.ContextWrapper: int getWallpaperDesiredMinimumWidth()> -> _SOURCE_
<android.os.Message: java.lang.Runnable getCallback()> -> _SOURCE_
<java.util.ArrayList: java.lang.Object get(int)> -> _SOURCE_
<android.widget.TextView: float getTextScaleX()> -> _SOURCE_
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)> -> _SOURCE_
<android.view.InputDevice: int getId()> -> _SOURCE_
<android.view.View: int getPaddingEnd()> -> _SOURCE_
<android.graphics.Bitmap: int getScaledWidth(android.util.DisplayMetrics)> -> _SOURCE_
<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)> -> _SOURCE_
<android.view.Window: int getLocalFeatures()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()> -> _SOURCE_
<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(android.net.Uri)> -> _SOURCE_
<android.content.ContextWrapper: java.io.File[] getObbDirs()> -> _SOURCE_
<android.webkit.WebView: android.net.http.SslCertificate getCertificate()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalToolMajor(int,int)> -> _SOURCE_
<android.net.wifi.WifiManager: int getWifiState()> -> _SOURCE_
<android.animation.Keyframe: float getFraction()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getPictureFormat()> -> _SOURCE_
<android.content.res.Resources: void getValueForDensity(int,int,android.util.TypedValue,boolean)> -> _SOURCE_
<java.security.cert.CertPath: java.lang.String getType()> -> _SOURCE_
<android.net.http.SslError: int getPrimaryError()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: int getScanMode()> -> _SOURCE_
<android.content.res.ColorStateList: int getDefaultColor()> -> _SOURCE_
<java.nio.channels.SocketChannel: long read(java.nio.ByteBuffer[])> -> _SOURCE_
<java.net.Socket: int getSoLinger()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()> -> _SOURCE_
<android.view.MotionEvent: float getXPrecision()> -> _SOURCE_
<android.nfc.tech.IsoDep: byte[] getHistoricalBytes()> -> _SOURCE_
<java.net.URLStreamHandler: int getDefaultPort()> -> _SOURCE_
<android.view.MotionEvent: float getX(int)> -> _SOURCE_
<java.util.Date: int getSeconds()> -> _SOURCE_
<android.graphics.drawable.Drawable: int getAlpha()> -> _SOURCE_
<android.view.ViewGroup: int getChildDrawingOrder(int,int)> -> _SOURCE_
<android.content.IntentFilter$AuthorityEntry: int getPort()> -> _SOURCE_
<java.net.ServerSocket: int getSoTimeout()> -> _SOURCE_
<java.util.AbstractList: java.util.List subList(int,int)> -> _SOURCE_
<android.text.Layout: float getSpacingMultiplier()> -> _SOURCE_
<java.util.Date: int getDay()> -> _SOURCE_
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreferredPreviewSizeForVideo()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: int getProfileConnectionState(int)> -> _SOURCE_
<android.telephony.CellInfoCdma: android.telephony.CellSignalStrengthCdma getCellSignalStrength()> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<android.telephony.CellIdentityCdma: int getLatitude()> -> _SOURCE_
<android.animation.Keyframe: java.lang.Class getType()> -> _SOURCE_
<android.bluetooth.BluetoothGattCharacteristic: java.util.List getDescriptors()> -> _SOURCE_
<android.widget.TextView: float getLeftFadingEdgeStrength()> -> _SOURCE_
<android.content.SyncAdapterType: java.lang.String getSettingsActivity()> -> _SOURCE_
<android.content.ContentProviderClient: android.net.Uri uncanonicalize(android.net.Uri)> -> _SOURCE_
<java.nio.CharBuffer: java.nio.CharBuffer put(char[])> -> _SOURCE_
<android.view.Display: void getSize(android.graphics.Point)> -> _SOURCE_
<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])> -> _SOURCE_
<android.widget.TextView: int getMaxHeight()> -> _SOURCE_
<android.content.Intent: int getIntExtra(java.lang.String,int)> -> _SOURCE_
<java.security.CodeSigner: java.security.Timestamp getTimestamp()> -> _SOURCE_
<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)> -> _SOURCE_
<android.text.Layout: android.text.Layout$Alignment getAlignment()> -> _SOURCE_
<android.content.Intent: android.content.Intent getIntentOld(java.lang.String)> -> _SOURCE_
<android.location.Criteria: int getVerticalAccuracy()> -> _SOURCE_
<java.net.URISyntaxException: int getIndex()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getMeteringAreas()> -> _SOURCE_
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getIdentity()> -> _SOURCE_
<java.util.Date: int getDate()> -> _SOURCE_
<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()> android.permission.READ_SYNC_STATS -> _SOURCE_
<android.view.View: float getTopFadingEdgeStrength()> -> _SOURCE_
<android.content.ContentProvider: android.content.Context getContext()> -> _SOURCE_
<android.content.res.AssetFileDescriptor: long getDeclaredLength()> -> _SOURCE_
<android.widget.TextView: int getInputType()> -> _SOURCE_
<java.lang.ClassLoader: java.lang.Class defineClass(byte[],int,int)> -> _SOURCE_
<android.content.res.AssetFileDescriptor: android.os.Bundle getExtras()> -> _SOURCE_
<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()> -> _SOURCE_
<java.net.URL: java.lang.String getPath()> -> _SOURCE_
<android.animation.Animator: java.util.ArrayList getListeners()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<android.media.MediaFormat: long getLong(java.lang.String)> -> _SOURCE_
<android.animation.ValueAnimator: long getDuration()> -> _SOURCE_
<android.content.res.TypedArray: android.content.res.Resources getResources()> -> _SOURCE_
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)> -> _SOURCE_
<android.app.LocalActivityManager: java.lang.String getCurrentId()> -> _SOURCE_
<java.lang.Class: java.net.URL getResource(java.lang.String)> -> _SOURCE_
<android.view.View: float getAlpha()> -> _SOURCE_
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)> -> _SOURCE_
<android.os.Bundle: float getFloat(java.lang.String)> -> _SOURCE_
<android.content.IntentFilter$AuthorityEntry: java.lang.String getHost()> -> _SOURCE_
<java.net.URISyntaxException: java.lang.String getReason()> -> _SOURCE_
<android.view.View: android.view.ViewParent getParent()> -> _SOURCE_
<android.telephony.TelephonyManager: int getNetworkType()> -> _SOURCE_
<android.bluetooth.BluetoothGattDescriptor: int getPermissions()> -> _SOURCE_
<android.app.TaskStackBuilder: android.content.Intent[] getIntents()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedVideoSizes()> -> _SOURCE_
<android.text.Spannable$Factory: android.text.Spannable$Factory getInstance()> -> _SOURCE_
<android.view.View: int getHorizontalFadingEdgeLength()> -> _SOURCE_
<android.content.pm.FeatureInfo: java.lang.String getGlEsVersion()> -> _SOURCE_
<android.app.Fragment: android.os.Bundle getArguments()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getRowSpan()> -> _SOURCE_
<android.view.View: java.lang.Object getTag(int)> -> _SOURCE_
<android.webkit.WebSettings: int getDefaultFontSize()> -> _SOURCE_
<java.net.Socket: int getLocalPort()> -> _SOURCE_
<android.app.ExpandableListActivity: long getSelectedPosition()> -> _SOURCE_
<android.content.ContentProviderClient: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> -> _SOURCE_
<java.io.File: java.lang.String getPath()> -> _SOURCE_
<android.content.Intent: float getFloatExtra(java.lang.String,float)> -> _SOURCE_
<android.text.Layout: int getHeight()> -> _SOURCE_
<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)> -> _SOURCE_
<android.webkit.WebResourceResponse: java.lang.String getMimeType()> -> _SOURCE_
<java.io.File: java.io.File getCanonicalFile()> -> _SOURCE_
<android.content.ContentResolver: android.net.Uri canonicalize(android.net.Uri)> -> _SOURCE_
<android.content.res.Configuration: int getLayoutDirection()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.Object getDefaultValue()> -> _SOURCE_
<android.view.KeyCharacterMap: boolean getKeyData(int,android.view.KeyCharacterMap$KeyData)> -> _SOURCE_
<android.view.View: int getPaddingTop()> -> _SOURCE_
<android.bluetooth.BluetoothGattService: int getInstanceId()> -> _SOURCE_
<java.net.ServerSocket: java.net.SocketAddress getLocalSocketAddress()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedPictureFormats()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.lang.String getAntibanding()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedFlashModes()> -> _SOURCE_
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)> -> _SOURCE_
<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int,int)> -> _SOURCE_
<java.util.Locale: java.util.Locale[] getAvailableLocales()> -> _SOURCE_
<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)> -> _SOURCE_
<android.view.MotionEvent: int getToolType(int)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[],android.os.CancellationSignal)> -> _SOURCE_
<java.net.URL: java.lang.String getProtocol()> -> _SOURCE_
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)> -> _SOURCE_
<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()> -> _SOURCE_
<android.view.KeyEvent: int getScanCode()> -> _SOURCE_
<android.location.LocationManager: java.util.List getAllProviders()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float getCurrent()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getFantasyFontFamily()> -> _SOURCE_
<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator getInterpolator()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getLine1Number()> -> _SOURCE_
<android.content.ContextWrapper: android.graphics.drawable.Drawable getWallpaper()> -> _SOURCE_
<android.view.View: int getVisibility()> -> _SOURCE_
<android.content.IntentFilter: java.lang.String getDataScheme(int)> -> _SOURCE_
<java.lang.reflect.Method: java.lang.annotation.Annotation[] getDeclaredAnnotations()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo getCollectionInfo()> -> _SOURCE_
<android.view.View: int getMeasuredWidth()> -> _SOURCE_
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()> -> _SOURCE_
<android.app.ActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float getMax()> -> _SOURCE_
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> -> _SOURCE_
<android.graphics.drawable.Drawable: int[] getState()> -> _SOURCE_
<android.view.KeyCharacterMap: char getNumber(int)> -> _SOURCE_
<android.view.animation.Transformation: int getTransformationType()> -> _SOURCE_
<android.widget.Scroller: int getDuration()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalTouchMinor(int)> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()> -> _SOURCE_
<java.net.URL: int getPort()> -> _SOURCE_
<org.apache.http.ProtocolVersion: int getMinor()> -> _SOURCE_
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getId()> -> _SOURCE_
<android.view.View: int getWindowVisibility()> -> _SOURCE_
<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)> -> _SOURCE_
<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()> -> _SOURCE_
<android.view.View: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.telephony.SignalStrength: int getEvdoEcio()> -> _SOURCE_
<android.view.MotionEvent: float getToolMinor()> -> _SOURCE_
<android.view.MotionEvent: int getButtonState()> -> _SOURCE_
<android.content.Loader: android.content.Context getContext()> -> _SOURCE_
<java.lang.Class: java.lang.annotation.Annotation[] getAnnotations()> -> _SOURCE_
<android.widget.AdapterView: int getCount()> -> _SOURCE_
<android.net.http.SslError: java.lang.String getUrl()> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getPassword()> -> _SOURCE_
<android.view.View: void getLocationInWindow(int[])> -> _SOURCE_
<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)> -> _SOURCE_
<android.os.Bundle: char[] getCharArray(java.lang.String)> -> _SOURCE_
<java.lang.StringBuilder: void getChars(int,int,char[],int)> -> _SOURCE_
<android.graphics.drawable.Drawable: int getMinimumHeight()> -> _SOURCE_
<android.webkit.WebResourceResponse: java.io.InputStream getData()> -> _SOURCE_
<java.net.NetworkInterface: java.net.NetworkInterface getParent()> -> _SOURCE_
<android.view.inputmethod.CompletionInfo: int getPosition()> -> _SOURCE_
<android.location.Location: android.os.Bundle getExtras()> -> _SOURCE_
<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])> -> _SOURCE_
<java.net.Socket: boolean getOOBInline()> -> _SOURCE_
<android.nfc.tech.NfcB: byte[] getApplicationData()> -> _SOURCE_
<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)> -> _SOURCE_
<android.view.Window: android.content.res.TypedArray getWindowStyle()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalToolMinor(int)> -> _SOURCE_
<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int getRowCount()> -> _SOURCE_
<android.view.KeyEvent: char getNumber()> -> _SOURCE_
<android.content.Intent: boolean[] getBooleanArrayExtra(java.lang.String)> -> _SOURCE_
<android.graphics.Canvas: android.graphics.Matrix getMatrix()> -> _SOURCE_
<java.net.DatagramSocket: int getTrafficClass()> -> _SOURCE_
<android.view.KeyEvent: int getMetaState()> -> _SOURCE_
<android.view.Display: int getOrientation()> -> _SOURCE_
<android.bluetooth.BluetoothGattCharacteristic: java.lang.Integer getIntValue(int,int)> -> _SOURCE_
<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)> -> _SOURCE_
<android.view.animation.Transformation: float getAlpha()> -> _SOURCE_
<android.webkit.WebBackForwardList: int getSize()> -> _SOURCE_
<android.bluetooth.BluetoothGatt: java.util.List getConnectedDevices()> -> _SOURCE_
<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getExternalCacheDir()> -> _SOURCE_
<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<android.telephony.ServiceState: java.lang.String getOperatorNumeric()> -> _SOURCE_
<java.util.Locale: java.util.Locale getDefault()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getString(int)> -> _SOURCE_
<android.content.res.TypedArray: int getResourceId(int,int)> -> _SOURCE_
<java.net.URLConnection: long getDate()> -> _SOURCE_
<java.nio.channels.SocketChannel: long write(java.nio.ByteBuffer[])> -> _SOURCE_
<android.print.PrintAttributes$MediaSize: int getHeightMils()> -> _SOURCE_
<android.widget.ExpandableListView: long getSelectedPosition()> -> _SOURCE_
<android.webkit.WebSettings: boolean getBlockNetworkLoads()> -> _SOURCE_
<java.net.InetAddress: byte[] getAddress()> -> _SOURCE_
<android.graphics.Bitmap: int getHeight()> -> _SOURCE_
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()> -> _SOURCE_
<java.security.cert.X509Certificate: java.util.List getExtendedKeyUsage()> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getEvdoLevel()> -> _SOURCE_
<android.widget.TextView: boolean getFreezesText()> -> _SOURCE_
<android.view.MotionEvent: float getTouchMinor(int)> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int)> -> _SOURCE_
<java.nio.IntBuffer: java.nio.IntBuffer get(int[])> -> _SOURCE_
<java.net.Socket: java.nio.channels.SocketChannel getChannel()> -> _SOURCE_
<android.util.SparseArray: java.lang.Object get(int)> -> _SOURCE_
<android.widget.TextView: int getRightPaddingOffset()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()> -> _SOURCE_
<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<java.net.URLConnection: boolean getDefaultAllowUserInteraction()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$Align getTextAlign()> -> _SOURCE_
<android.webkit.WebSettings: boolean getJavaScriptEnabled()> -> _SOURCE_
<android.webkit.WebSettings: android.webkit.WebSettings$ZoomDensity getDefaultZoom()> -> _SOURCE_
<android.net.wifi.WifiManager: int addNetwork(android.net.wifi.WifiConfiguration)> -> _SOURCE_
<android.view.View: android.graphics.drawable.Drawable getBackground()> -> _SOURCE_
<java.lang.Class: java.lang.String getSimpleName()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()> -> _SOURCE_
<android.widget.TextView: int getLineCount()> -> _SOURCE_
<java.net.URLConnection: java.lang.Object getContent()> -> _SOURCE_
<android.widget.TextView: int getCompoundPaddingTop()> -> _SOURCE_
<android.location.Location: float getSpeed()> -> _SOURCE_
<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.io.File)> -> _SOURCE_
<org.xmlpull.v1.XmlPullParserException: java.lang.Throwable getDetail()> -> _SOURCE_
<android.graphics.drawable.Drawable: int getLevel()> -> _SOURCE_
<android.view.View: int getLeft()> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> -> _SOURCE_
<android.view.MotionEvent: float getAxisValue(int,int)> -> _SOURCE_
<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()> -> _SOURCE_
<android.widget.ListView: int getHeaderViewsCount()> -> _SOURCE_
<android.animation.ValueAnimator: float getAnimatedFraction()> -> _SOURCE_
<android.view.InputDevice$MotionRange: float getResolution()> -> _SOURCE_
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getJpegThumbnailSize()> -> _SOURCE_
<android.widget.AbsListView: long[] getCheckedItemIds()> -> _SOURCE_
<android.view.InputDevice: int getKeyboardType()> -> _SOURCE_
<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)> -> _SOURCE_
<android.bluetooth.BluetoothClass: int getMajorDeviceClass()> -> _SOURCE_
<android.content.Intent: long[] getLongArrayExtra(java.lang.String)> -> _SOURCE_
<android.app.Fragment: android.app.Fragment getTargetFragment()> -> _SOURCE_
<android.widget.TextView: java.lang.CharSequence getText()> -> _SOURCE_
<android.webkit.WebSettings: android.webkit.WebSettings$PluginState getPluginState()> -> _SOURCE_
<java.net.DatagramSocket: int getReceiveBufferSize()> -> _SOURCE_
<android.content.BroadcastReceiver: boolean getDebugUnregister()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()> -> _SOURCE_
<android.app.Fragment: android.content.res.Resources getResources()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedPictureSizes()> -> _SOURCE_
<android.widget.TextView: int getShadowColor()> -> _SOURCE_
<android.hardware.Camera$Parameters: boolean getAutoExposureLock()> -> _SOURCE_
<android.graphics.SurfaceTexture: void getTransformMatrix(float[])> -> _SOURCE_
<android.content.res.TypedArray: int getIndexCount()> -> _SOURCE_
<android.location.GpsStatus: int getTimeToFirstFix()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: int getType()> -> _SOURCE_
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(java.lang.String)> -> _SOURCE_
<android.widget.TextView: android.text.Layout getLayout()> -> _SOURCE_
<java.lang.reflect.Field: int getModifiers()> -> _SOURCE_
<android.widget.TextView: float getShadowDy()> -> _SOURCE_
<android.text.Layout: java.lang.CharSequence getText()> -> _SOURCE_
<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()> -> _SOURCE_
<android.content.res.ColorStateList: int getColorForState(int[],int)> -> _SOURCE_
<android.view.KeyEvent: int getModifiers()> -> _SOURCE_
<android.location.LocationProvider: int getAccuracy()> -> _SOURCE_
<android.view.Display: int getWidth()> -> _SOURCE_
<java.nio.LongBuffer: java.nio.LongBuffer put(long[])> -> _SOURCE_
<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()> -> _SOURCE_
<android.nfc.tech.NfcB: byte[] getProtocolInfo()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<java.net.Socket: boolean getKeepAlive()> -> _SOURCE_
<android.app.ActivityManager: java.util.List getRecentTasks(int,int)> -> _SOURCE_
<android.app.Fragment: android.app.FragmentManager getChildFragmentManager()> -> _SOURCE_
<android.content.Intent: float[] getFloatArrayExtra(java.lang.String)> -> _SOURCE_
<java.lang.ClassLoader: java.lang.ClassLoader getParent()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo getRangeInfo()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Shader getShader()> -> _SOURCE_
<android.view.MotionEvent: float getOrientation()> -> _SOURCE_
<android.view.View: void getHitRect(android.graphics.Rect)> -> _SOURCE_
<android.app.LocalActivityManager: android.app.Activity getCurrentActivity()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()> -> _SOURCE_
<android.graphics.Paint: float getFontSpacing()> -> _SOURCE_
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)> -> _SOURCE_
<java.net.ServerSocket: java.net.InetAddress getInetAddress()> -> _SOURCE_
<android.location.Location: long getTime()> -> _SOURCE_
<java.net.URI: java.lang.String getPath()> -> _SOURCE_
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)> -> _SOURCE_
<android.app.ActivityManager: int getLauncherLargeIconSize()> -> _SOURCE_
<android.widget.TextView: int getCompoundPaddingRight()> -> _SOURCE_
<android.view.View: int getMeasuredHeight()> -> _SOURCE_
<android.content.IntentFilter: android.content.IntentFilter$AuthorityEntry getDataAuthority(int)> -> _SOURCE_
<android.text.Layout: float getLineRight(int)> -> _SOURCE_
<java.net.URL: java.lang.Object getContent(java.lang.Class[])> -> _SOURCE_
<android.text.Layout: float getLineMax(int)> -> _SOURCE_
<android.view.View: int getTopPaddingOffset()> -> _SOURCE_
<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)> -> _SOURCE_
<android.widget.AdapterView: int getSelectedItemPosition()> -> _SOURCE_
<android.view.View: int getScrollBarStyle()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()> -> _SOURCE_
<android.view.View: int getWindowSystemUiVisibility()> -> _SOURCE_
<android.graphics.Bitmap: int getGenerationId()> -> _SOURCE_
<org.apache.http.message.ParserCursor: int getUpperBound()> -> _SOURCE_
<android.view.InputDevice: android.view.KeyCharacterMap getKeyCharacterMap()> -> _SOURCE_
<java.net.URI: java.lang.String getRawQuery()> -> _SOURCE_
<android.view.View: int getWidth()> -> _SOURCE_
<android.app.LocalActivityManager: android.app.Activity getActivity(java.lang.String)> -> _SOURCE_
<android.text.Layout: int getParagraphLeft(int)> -> _SOURCE_
<android.view.animation.Animation: boolean getDetachWallpaper()> -> _SOURCE_
<android.graphics.SurfaceTexture: long getTimestamp()> -> _SOURCE_
<java.net.DatagramSocket: java.net.InetAddress getInetAddress()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)> -> _SOURCE_
<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()> -> _SOURCE_
<android.graphics.Region: android.graphics.Path getBoundaryPath()> -> _SOURCE_
<java.lang.reflect.Field: short getShort(java.lang.Object)> -> _SOURCE_
<android.hardware.Camera$Parameters: void getFocusDistances(float[])> -> _SOURCE_
<android.content.res.AssetFileDescriptor: long getStartOffset()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo getCollectionItemInfo()> -> _SOURCE_
<android.content.IntentSender: android.os.UserHandle getCreatorUserHandle()> -> _SOURCE_
<android.hardware.Camera$Parameters: float getFocalLength()> -> _SOURCE_
<java.net.ServerSocket: int getReceiveBufferSize()> -> _SOURCE_
<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()> -> _SOURCE_
<java.net.URI: java.lang.String getRawUserInfo()> -> _SOURCE_
<android.content.ContextWrapper: android.content.Context getBaseContext()> -> _SOURCE_
<java.nio.charset.UnmappableCharacterException: int getInputLength()> -> _SOURCE_
<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)> -> _SOURCE_
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)> -> _SOURCE_
<android.view.ViewGroup: int getDescendantFocusability()> -> _SOURCE_
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()> -> _SOURCE_
<java.net.URI: java.lang.String getRawSchemeSpecificPart()> -> _SOURCE_
<android.widget.AdapterView: int getLastVisiblePosition()> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getEvdoEcio()> -> _SOURCE_
<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()> -> _SOURCE_
<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)> -> _SOURCE_
<android.bluetooth.BluetoothGattDescriptor: byte[] getValue()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)> -> _SOURCE_
<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)> -> _SOURCE_
<android.view.animation.Animation: int getRepeatCount()> -> _SOURCE_
<android.view.View: int getVerticalScrollbarPosition()> -> _SOURCE_
<android.app.ExpandableListActivity: long getSelectedId()> -> _SOURCE_
<android.view.View: java.lang.Object getTag()> -> _SOURCE_
<android.app.Fragment: int getTargetRequestCode()> -> _SOURCE_
<android.view.View: void getLocationOnScreen(int[])> -> _SOURCE_
<android.graphics.Region: android.graphics.Rect getBounds()> -> _SOURCE_
<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getMaxZoom()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedAntibanding()> -> _SOURCE_
<android.media.MediaPlayer$TrackInfo: int getTrackType()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getActions()> -> _SOURCE_
<android.graphics.Paint: java.util.Locale getTextLocale()> -> _SOURCE_
<android.provider.Settings$NameValueTable: android.net.Uri getUriFor(android.net.Uri,java.lang.String)> -> _SOURCE_
<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()> -> _SOURCE_
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<android.app.Activity: android.app.LoaderManager getLoaderManager()> -> _SOURCE_
<java.net.URL: java.lang.String getQuery()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getPreviewFormat()> -> _SOURCE_
<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])> -> _SOURCE_
<android.view.View: float getBottomFadingEdgeStrength()> -> _SOURCE_
<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectableChannel configureBlocking(boolean)> -> _SOURCE_
<android.view.MotionEvent: float getTouchMajor(int)> -> _SOURCE_
<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)> -> _SOURCE_
<android.bluetooth.BluetoothGattDescriptor: java.util.UUID getUuid()> -> _SOURCE_
<android.animation.ValueAnimator: long getStartDelay()> -> _SOURCE_
<android.widget.TextView: int getTotalPaddingBottom()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.Class getDeclaringClass()> -> _SOURCE_
<android.view.View: float getCameraDistance()> -> _SOURCE_
<android.print.PrintAttributes: int getColorMode()> -> _SOURCE_
<android.view.View: int getDrawingCacheQuality()> -> _SOURCE_
<android.net.wifi.WifiManager: int compareSignalLevel(int,int)> -> _SOURCE_
<java.lang.Class: java.lang.Class[] getClasses()> -> _SOURCE_
<java.lang.Long: java.lang.Long getLong(java.lang.String,java.lang.Long)> -> _SOURCE_
<java.security.ProtectionDomain: java.security.CodeSource getCodeSource()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionEnd()> -> _SOURCE_
<java.nio.CharBuffer: char charAt(int)> -> _SOURCE_
<java.lang.Character: byte getDirectionality(char)> -> _SOURCE_
<android.view.Window: android.view.WindowManager getWindowManager()> -> _SOURCE_
<android.widget.TextView: java.util.Locale getTextLocale()> -> _SOURCE_
<java.net.ServerSocket: int getLocalPort()> -> _SOURCE_
<java.net.SocketImpl: int getPort()> -> _SOURCE_
<android.view.KeyCharacterMap: int getDeadChar(int,int)> -> _SOURCE_
<android.view.View: int getTop()> -> _SOURCE_
<android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)> -> _SOURCE_
<java.nio.ShortBuffer: java.nio.ShortBuffer put(short[])> -> _SOURCE_
<android.telephony.CellInfo: long getTimeStamp()> -> _SOURCE_
<android.view.InputEvent: android.view.InputDevice getDevice()> -> _SOURCE_
<java.nio.charset.MalformedInputException: int getInputLength()> -> _SOURCE_
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()> -> _SOURCE_
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)> -> _SOURCE_
<java.nio.DoubleBuffer: java.nio.DoubleBuffer put(double[])> -> _SOURCE_
<android.content.res.Resources: java.lang.CharSequence getText(int)> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityRecord getRecord(int)> -> _SOURCE_
<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()> -> _SOURCE_
<java.net.DatagramSocket: java.net.SocketAddress getRemoteSocketAddress()> -> _SOURCE_
<android.view.animation.Animation: long getDuration()> -> _SOURCE_
<android.net.sip.SipManager: android.net.sip.SipSession createSipSession(android.net.sip.SipProfile,android.net.sip.SipSession$Listener)> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getDisplayName()> -> _SOURCE_
<android.view.ViewPropertyAnimator: android.animation.TimeInterpolator getInterpolator()> -> _SOURCE_
<android.telephony.TelephonyManager: int getCallState()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalX(int)> -> _SOURCE_
<android.view.MotionEvent: int getPointerCount()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getSerifFontFamily()> -> _SOURCE_
<android.print.PrintDocumentInfo: java.lang.String getName()> -> _SOURCE_
<java.lang.reflect.Field: java.lang.Class getDeclaringClass()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()> -> _SOURCE_
<android.app.Fragment: java.lang.String getTag()> -> _SOURCE_
<java.lang.ClassLoader: java.lang.Package[] getPackages()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()> -> _SOURCE_
<android.content.Intent: android.os.Bundle getExtras()> -> _SOURCE_
<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypes()> -> _SOURCE_
<android.net.Uri: int compareTo(android.net.Uri)> -> _SOURCE_
<android.util.SparseBooleanArray: boolean get(int)> -> _SOURCE_
<java.net.URISyntaxException: java.lang.String getInput()> -> _SOURCE_
<android.telephony.SignalStrength: int getCdmaEcio()> -> _SOURCE_
<android.graphics.drawable.Drawable: int getIntrinsicHeight()> -> _SOURCE_
<android.view.DragEvent: java.lang.Object getLocalState()> -> _SOURCE_
<android.webkit.WebSettings: boolean getLightTouchEnabled()> -> _SOURCE_
<java.lang.Class: java.lang.Class[] getDeclaredClasses()> -> _SOURCE_
<android.text.Layout: android.text.TextPaint getPaint()> -> _SOURCE_
<android.view.KeyEvent: int getUnicodeChar()> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)> -> _SOURCE_
<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)> -> _SOURCE_
<android.view.MotionEvent: float getTouchMinor()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getDefaultTextEncodingName()> -> _SOURCE_
<android.view.KeyEvent: char getDisplayLabel()> -> _SOURCE_
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)> android.permission.ACCESS_FINE_LOCATION -> _SOURCE_
<android.widget.ListView: int getMaxScrollAmount()> -> _SOURCE_
<android.content.res.Resources: android.content.res.AssetManager getAssets()> -> _SOURCE_
<android.content.res.Resources: int[] getIntArray(int)> -> _SOURCE_
<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()> -> _SOURCE_
<android.widget.TextView: java.lang.CharSequence getHint()> -> _SOURCE_
<java.security.spec.EllipticCurve: byte[] getSeed()> -> _SOURCE_
<android.webkit.WebView: android.webkit.WebSettings getSettings()> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getFilesDir()> -> _SOURCE_
<android.app.Activity: java.lang.String getCallingPackage()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getMaxNumFocusAreas()> -> _SOURCE_
<android.content.ContextWrapper: java.io.File[] getExternalFilesDirs(java.lang.String)> -> _SOURCE_
<java.security.cert.Certificate: java.lang.String getType()> -> _SOURCE_
<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)> -> _SOURCE_
<android.widget.TextView: int getBaseline()> -> _SOURCE_
<android.content.pm.ActivityInfo: int getThemeResource()> -> _SOURCE_
<android.hardware.Camera$Parameters: boolean getAutoWhiteBalanceLock()> -> _SOURCE_
<android.content.pm.ComponentInfo: int getLogoResource()> -> _SOURCE_
<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)> -> _SOURCE_
<android.net.sip.SipSession: java.lang.String getCallId()> -> _SOURCE_
<android.text.style.CharacterStyle: android.text.style.CharacterStyle getUnderlying()> -> _SOURCE_
<java.util.Date: int getYear()> -> _SOURCE_
<android.animation.Keyframe: android.animation.TimeInterpolator getInterpolator()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getClassName()> -> _SOURCE_
<android.view.View: android.graphics.Bitmap getDrawingCache()> -> _SOURCE_
<android.view.View: int getScrollBarFadeDuration()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getJpegQuality()> -> _SOURCE_
<android.bluetooth.BluetoothGattCharacteristic: int getPermissions()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()> -> _SOURCE_
<android.view.View: boolean getFilterTouchesWhenObscured()> -> _SOURCE_
<android.view.View: int getNextFocusDownId()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getWindowId()> -> _SOURCE_
<android.view.InputDevice$MotionRange: float getRange()> -> _SOURCE_
<android.content.Intent: int getFlags()> -> _SOURCE_
<android.view.View: int getScrollBarSize()> -> _SOURCE_
<android.app.LocalActivityManager: android.os.Bundle saveInstanceState()> -> _SOURCE_
<android.view.Display: int getHeight()> -> _SOURCE_
<java.io.FileInputStream: java.io.FileDescriptor getFD()> -> _SOURCE_
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> _SOURCE_
<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)> -> _SOURCE_
<android.view.InputDevice: java.lang.String getDescriptor()> -> _SOURCE_
<android.webkit.WebSettings: boolean getDisplayZoomControls()> -> _SOURCE_
<android.content.ContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> -> _SOURCE_
<android.widget.ExpandableListView: android.widget.ListAdapter getAdapter()> -> _SOURCE_
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getLocalProfile()> -> _SOURCE_
<android.widget.AbsListView: int getTopPaddingOffset()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()> -> _SOURCE_
<java.net.URLConnection: int getHeaderFieldInt(java.lang.String,int)> -> _SOURCE_
<android.view.View: int getOverScrollMode()> -> _SOURCE_
<android.widget.TextView: android.text.InputFilter[] getFilters()> -> _SOURCE_
<android.view.View: int getSolidColor()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()> -> _SOURCE_
<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayName()> -> _SOURCE_
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()> -> _SOURCE_
<android.media.TimedText: android.graphics.Rect getBounds()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<java.io.File: java.lang.String getName()> -> _SOURCE_
<android.content.OperationApplicationException: int getNumSuccessfulYieldPoints()> -> _SOURCE_
<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int)> -> _SOURCE_
<android.os.storage.StorageManager: java.lang.String getMountedObbPath(java.lang.String)> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getObbDir()> -> _SOURCE_
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()> android.permission.ACCESS_WIFI_STATE -> _SOURCE_
<java.net.InetAddress: java.lang.String getHostAddress()> -> _SOURCE_
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)> -> _SOURCE_
<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)> -> _SOURCE_
<java.nio.charset.CharsetDecoder: java.nio.CharBuffer decode(java.nio.ByteBuffer)> -> _SOURCE_
<android.view.KeyCharacterMap: int getKeyboardType()> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getAuthUserName()> -> _SOURCE_
<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder replaceWith(byte[])> -> _SOURCE_
<android.app.Fragment: java.lang.CharSequence getText(int)> -> _SOURCE_
<android.widget.TextView: int getCurrentHintTextColor()> -> _SOURCE_
<android.view.View: boolean getFitsSystemWindows()> -> _SOURCE_
<android.view.View: java.util.ArrayList getTouchables()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()> -> _SOURCE_
<java.net.URL: java.lang.String getUserInfo()> -> _SOURCE_
<android.app.Activity: android.app.FragmentManager getFragmentManager()> -> _SOURCE_
<android.telephony.ServiceState: boolean getRoaming()> -> _SOURCE_
<android.widget.TextView: java.lang.CharSequence getImeActionLabel()> -> _SOURCE_
<android.view.View: int getImportantForAccessibility()> -> _SOURCE_
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)> -> _SOURCE_
<android.text.style.MetricAffectingSpan: android.text.style.MetricAffectingSpan getUnderlying()> -> _SOURCE_
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.annotation.Annotation[][] getParameterAnnotations()> -> _SOURCE_
<android.view.MotionEvent: float getY()> -> _SOURCE_
<android.text.Layout: int getOffsetForHorizontal(int,float)> -> _SOURCE_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<java.io.File: long getFreeSpace()> -> _SOURCE_
<android.telephony.CellLocation: android.telephony.CellLocation getEmpty()> -> _SOURCE_
<android.view.MotionEvent: float getToolMinor(int)> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayVariant(java.util.Locale)> -> _SOURCE_
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()> -> _SOURCE_
<android.content.BroadcastReceiver$PendingResult: boolean getAbortBroadcast()> -> _SOURCE_
<android.widget.TextView: int getTopPaddingOffset()> -> _SOURCE_
<android.location.GpsStatus: int getMaxSatellites()> -> _SOURCE_
<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()> -> _SOURCE_
<android.content.Intent: long getLongExtra(java.lang.String,long)> -> _SOURCE_
<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)> -> _SOURCE_
<android.widget.TextView: int getLineHeight()> -> _SOURCE_
<java.net.URI: java.lang.String getFragment()> -> _SOURCE_
<android.webkit.WebSettings: boolean getSavePassword()> -> _SOURCE_
<java.lang.Class: int getModifiers()> -> _SOURCE_
<android.view.MotionEvent: int getActionMasked()> -> _SOURCE_
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<java.lang.Package: java.lang.String getImplementationTitle()> -> _SOURCE_
<android.accessibilityservice.AccessibilityServiceInfo: int getCapabilities()> -> _SOURCE_
<android.content.ContentValues: java.lang.Byte getAsByte(java.lang.String)> -> _SOURCE_
<android.app.Fragment: java.lang.String getString(int)> -> _SOURCE_
<android.content.ContentValues: java.lang.Short getAsShort(java.lang.String)> -> _SOURCE_
<android.view.View: java.util.ArrayList getFocusables(int)> -> _SOURCE_
<android.widget.AbsListView: int getRightPaddingOffset()> -> _SOURCE_
<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult flush(java.nio.CharBuffer)> -> _SOURCE_
<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()> -> _SOURCE_
<android.view.animation.Animation: int getRepeatMode()> -> _SOURCE_
<java.util.Date: int getMonth()> -> _SOURCE_
<java.net.SocketImpl: java.net.InetAddress getInetAddress()> -> _SOURCE_
<android.widget.AdapterView: int getPositionForView(android.view.View)> -> _SOURCE_
<android.app.PendingIntent: java.lang.String getTargetPackage()> -> _SOURCE_
<android.view.animation.Animation: boolean getFillAfter()> -> _SOURCE_
<java.lang.Character: int getNumericValue(char)> -> _SOURCE_
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)> -> _SOURCE_
<android.app.Activity: java.lang.String getLocalClassName()> -> _SOURCE_
<android.view.KeyCharacterMap: char getMatch(int,char[],int)> -> _SOURCE_
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollFooter()> -> _SOURCE_
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()> -> _SOURCE_
<android.view.Window: android.view.Window getContainer()> -> _SOURCE_
<android.view.InputDevice: android.os.Vibrator getVibrator()> -> _SOURCE_
<android.telephony.TelephonyManager: int getDataActivity()> -> _SOURCE_
<android.nfc.tech.IsoDep: android.nfc.tech.IsoDep get(android.nfc.Tag)> -> _SOURCE_
<android.view.KeyEvent: long getDownTime()> -> _SOURCE_
<android.net.http.SslCertificate$DName: java.lang.String getDName()> -> _SOURCE_
<android.widget.TextView: int getLineBounds(int,android.graphics.Rect)> -> _SOURCE_
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getSettingsActivityName()> -> _SOURCE_
<android.view.View: int getDefaultSize(int,int)> -> _SOURCE_
<java.lang.Class: java.security.ProtectionDomain getProtectionDomain()> -> _SOURCE_
<java.lang.Package: java.lang.Package getPackage(java.lang.String)> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getDbm()> -> _SOURCE_
<android.widget.TextView: int getAutoLinkMask()> -> _SOURCE_
<android.content.pm.ConfigurationInfo: java.lang.String getGlEsVersion()> -> _SOURCE_
<android.net.sip.SipSession: int getState()> -> _SOURCE_
<android.widget.TextView: android.content.res.ColorStateList getTextColors()> -> _SOURCE_
<android.content.ContextWrapper: java.lang.String getPackageName()> -> _SOURCE_
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()> -> _SOURCE_
<android.content.res.TypedArray: int getInt(int,int)> -> _SOURCE_
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)> -> _SOURCE_
<android.widget.TextView: int getMaxLines()> -> _SOURCE_
<android.view.MotionEvent: int getSource()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()> -> _SOURCE_
<android.os.ParcelUuid: java.util.UUID getUuid()> -> _SOURCE_
<android.view.MotionEvent: int getDeviceId()> -> _SOURCE_
<android.telephony.SignalStrength: int getEvdoSnr()> -> _SOURCE_
<android.widget.TextView: int getTextColor(android.content.Context,android.content.res.TypedArray,int)> -> _SOURCE_
<android.print.PageRange: int getEnd()> -> _SOURCE_
<android.bluetooth.BluetoothDevice: android.os.ParcelUuid[] getUuids()> -> _SOURCE_
<android.provider.Settings$System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)> -> _SOURCE_
<java.security.ProtectionDomain: java.lang.ClassLoader getClassLoader()> -> _SOURCE_
<android.view.KeyEvent: int getRepeatCount()> -> _SOURCE_
<android.widget.Scroller: int getCurrX()> -> _SOURCE_
<android.app.ActivityManager: int getLargeMemoryClass()> -> _SOURCE_
<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String,float)> -> _SOURCE_
<android.widget.RemoteViews: java.lang.String getPackage()> -> _SOURCE_
<java.lang.Thread: java.util.Map getAllStackTraces()> -> _SOURCE_
<android.webkit.WebSettings: boolean getAllowContentAccess()> -> _SOURCE_
<java.nio.channels.DatagramChannel: long read(java.nio.ByteBuffer[])> -> _SOURCE_
<android.widget.TextView: android.text.TextUtils$TruncateAt getEllipsize()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)> android.permission.GET_ACCOUNTS android.permission.MANAGE_ACCOUNTS -> _SOURCE_
<android.webkit.WebSettings: boolean getLoadWithOverviewMode()> -> _SOURCE_
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)> -> _SOURCE_
<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)> -> _SOURCE_
<android.print.PrintAttributes$Margins: int getLeftMils()> -> _SOURCE_
<android.app.Activity: android.content.ComponentName getCallingActivity()> -> _SOURCE_
<android.view.Window: android.content.Context getContext()> -> _SOURCE_
<java.net.URLConnection: java.lang.String getContentEncoding()> -> _SOURCE_
<java.net.URLConnection: java.io.InputStream getInputStream()> -> _SOURCE_
<android.hardware.Camera: void getCameraInfo(int,android.hardware.Camera$CameraInfo)> -> _SOURCE_
<java.io.FileOutputStream: java.io.FileDescriptor getFD()> -> _SOURCE_
<android.os.Bundle: boolean[] getBooleanArray(java.lang.String)> -> _SOURCE_
<java.util.Date: int getHours()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<android.telephony.gsm.SmsManager: android.telephony.gsm.SmsManager getDefault()> -> _SOURCE_
<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(java.lang.String,java.lang.String,android.net.sip.SipAudioCall$Listener,int)> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()> -> _SOURCE_
<android.view.KeyEvent: int getAction()> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: int getMovementGranularity()> -> _SOURCE_
<java.lang.Long: java.lang.Long getLong(java.lang.String)> -> _SOURCE_
<android.widget.TextView: android.content.res.ColorStateList getLinkTextColors()> -> _SOURCE_
<android.net.sip.SipManager: android.net.sip.SipSession getSessionFor(android.content.Intent)> -> _SOURCE_
<android.webkit.WebChromeClient: android.graphics.Bitmap getDefaultVideoPoster()> -> _SOURCE_
<android.content.Intent: android.os.Parcelable[] getParcelableArrayExtra(java.lang.String)> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewSizes()> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getEvdoDbm()> -> _SOURCE_
<android.widget.TextView: int getHighlightColor()> -> _SOURCE_
<android.provider.Telephony$Sms: java.lang.String getDefaultSmsPackage(android.content.Context)> -> _SOURCE_
<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()> -> _SOURCE_
<java.net.Socket: int getPort()> -> _SOURCE_
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)> -> _SOURCE_
<android.webkit.WebSettings: int getTextZoom()> -> _SOURCE_
<android.content.res.Resources: int getColor(int)> -> _SOURCE_
<android.os.Handler: android.os.Looper getLooper()> -> _SOURCE_
<java.lang.Character: int getNumericValue(int)> -> _SOURCE_
<android.print.PrintDocumentInfo: long getDataSize()> -> _SOURCE_
<android.content.Intent: byte getByteExtra(java.lang.String,byte)> -> _SOURCE_
<java.net.Socket: int getTrafficClass()> -> _SOURCE_
<java.nio.Buffer: java.nio.Buffer limit(int)> -> _SOURCE_
<java.net.DatagramSocket: java.nio.channels.DatagramChannel getChannel()> -> _SOURCE_
<android.view.ViewGroup: android.view.View getChildAt(int)> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalY(int,int)> -> _SOURCE_
<android.os.Bundle: int getInt(java.lang.String,int)> -> _SOURCE_
<java.lang.Package: java.lang.annotation.Annotation[] getAnnotations()> -> _SOURCE_
<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()> -> _SOURCE_
<android.view.View: int getPaddingStart()> -> _SOURCE_
<android.content.BroadcastReceiver$PendingResult: android.os.Bundle getResultExtras(boolean)> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayVariant()> -> _SOURCE_
<android.os.Handler: java.lang.String getMessageName(android.os.Message)> -> _SOURCE_
<android.widget.AbsListView: int getTranscriptMode()> -> _SOURCE_
<android.view.animation.LayoutAnimationController: float getDelay()> -> _SOURCE_
<android.bluetooth.BluetoothGattService: android.bluetooth.BluetoothGattCharacteristic getCharacteristic(java.util.UUID)> -> _SOURCE_
<java.net.URLConnection: java.util.Map getHeaderFields()> -> _SOURCE_
<android.content.ContentProvider: android.net.Uri canonicalize(android.net.Uri)> -> _SOURCE_
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()> -> _SOURCE_
<android.widget.TextView: float getShadowRadius()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getInputType()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: int getVersion()> -> _SOURCE_
<android.content.Intent: java.lang.String getType()> -> _SOURCE_
<android.content.res.TypedArray: java.lang.String getPositionDescription()> -> _SOURCE_
<android.widget.TextView: java.lang.CharSequence getError()> -> _SOURCE_
<java.util.Locale: java.lang.String getVariant()> -> _SOURCE_
<android.animation.ValueAnimator: int getRepeatCount()> -> _SOURCE_
<android.widget.TextView: int getImeOptions()> -> _SOURCE_
<android.location.Location: double getLatitude()> -> _SOURCE_
<android.content.IntentFilter: android.os.PatternMatcher getDataSchemeSpecificPart(int)> -> _SOURCE_
<android.content.ClipDescription: java.lang.String getMimeType(int)> -> _SOURCE_
<android.view.MotionEvent: float getToolMajor(int)> -> _SOURCE_
<android.content.Intent: char getCharExtra(java.lang.String,char)> -> _SOURCE_
<android.app.Notification$Builder: android.app.Notification getNotification()> -> _SOURCE_
<android.print.PrintAttributes$MediaSize: java.lang.String getLabel(android.content.pm.PackageManager)> -> _SOURCE_
<android.widget.AbsListView: int getSolidColor()> -> _SOURCE_
<android.os.PatternMatcher: int getType()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.lang.String getSceneMode()> -> _SOURCE_
<android.view.InputDevice: int getProductId()> -> _SOURCE_
<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)> -> _SOURCE_
<android.os.Debug$MemoryInfo: int getTotalPrivateClean()> -> _SOURCE_
<android.view.View: float getRotation()> -> _SOURCE_
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getPeerProfile()> -> _SOURCE_
<android.app.Dialog: int getVolumeControlStream()> -> _SOURCE_
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)> -> _SOURCE_
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getOldText()> -> _SOURCE_
<android.view.ViewGroup: int getPersistentDrawingCache()> -> _SOURCE_
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<java.net.URL: int getDefaultPort()> -> _SOURCE_
<java.net.DatagramSocketImpl: java.io.FileDescriptor getFileDescriptor()> -> _SOURCE_
<android.content.res.Resources: float getDimension(int)> -> _SOURCE_
<java.net.DatagramSocket: int getSoTimeout()> -> _SOURCE_
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)> -> _SOURCE_
<android.widget.TextView: boolean getIncludeFontPadding()> -> _SOURCE_
<android.webkit.WebSettings: boolean getDatabaseEnabled()> -> _SOURCE_
<android.content.ContentResolver: android.net.Uri uncanonicalize(android.net.Uri)> -> _SOURCE_
<java.net.URI: java.lang.String getScheme()> -> _SOURCE_
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()> -> _SOURCE_
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)> -> _SOURCE_
<android.view.Display: void getRectSize(android.graphics.Rect)> -> _SOURCE_
<android.widget.AdapterView: android.view.View getEmptyView()> -> _SOURCE_
<java.net.Socket: boolean getReuseAddress()> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: long getEventTime()> -> _SOURCE_
<android.text.Layout: int getLineAscent(int)> -> _SOURCE_
<android.webkit.WebView: android.webkit.WebView$HitTestResult getHitTestResult()> -> _SOURCE_
<android.view.ViewGroup: int getChildCount()> -> _SOURCE_
<android.widget.AbsListView: android.view.View getSelectedView()> -> _SOURCE_
<android.view.View: float getScaleX()> -> _SOURCE_
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue(java.lang.String)> -> _SOURCE_
<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()> -> _SOURCE_
<android.view.View: int getTextAlignment()> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()> -> _SOURCE_
<java.net.SocketImpl: int getLocalPort()> -> _SOURCE_
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalTouchMajor(int,int)> -> _SOURCE_
<android.view.ViewGroup$MarginLayoutParams: int getMarginStart()> -> _SOURCE_
<java.lang.reflect.Field: double getDouble(java.lang.Object)> -> _SOURCE_
<java.net.Socket: java.net.InetAddress getInetAddress()> -> _SOURCE_
<android.os.Bundle: int[] getIntArray(java.lang.String)> -> _SOURCE_
<java.net.NetworkInterface: java.lang.String getDisplayName()> -> _SOURCE_
<java.lang.reflect.Field: long getLong(java.lang.Object)> -> _SOURCE_
<android.view.Display: int getFlags()> -> _SOURCE_
<java.security.spec.ECPoint: java.math.BigInteger getAffineY()> -> _SOURCE_
<java.nio.CharBuffer: java.nio.CharBuffer get(char[])> -> _SOURCE_
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getNewText()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalToolMinor(int,int)> -> _SOURCE_
<java.security.cert.X509Certificate: java.util.Collection getIssuerAlternativeNames()> -> _SOURCE_
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)> -> _SOURCE_
<android.content.BroadcastReceiver: boolean getAbortBroadcast()> -> _SOURCE_
<android.content.ContentValues: java.lang.Double getAsDouble(java.lang.String)> -> _SOURCE_
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()> -> _SOURCE_
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)> -> _SOURCE_
<java.net.URI: java.lang.String getQuery()> -> _SOURCE_
<android.content.Intent: android.content.ComponentName getComponent()> -> _SOURCE_
<android.view.ViewGroup$MarginLayoutParams: int getLayoutDirection()> -> _SOURCE_
<android.view.View: int getBaseline()> -> _SOURCE_
<android.text.Layout: int getOffsetToLeftOf(int)> -> _SOURCE_
<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters)> -> _SOURCE_
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()> -> _SOURCE_
<android.bluetooth.BluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])> -> _SOURCE_
<android.util.Property: java.lang.String getName()> -> _SOURCE_
<android.os.PatternMatcher: java.lang.String getPath()> -> _SOURCE_
<java.lang.StackTraceElement: java.lang.String getMethodName()> -> _SOURCE_
<java.net.URI: java.lang.String getHost()> -> _SOURCE_
<android.telephony.TelephonyManager: int getDataState()> -> _SOURCE_
<android.telephony.CellInfoCdma: android.telephony.CellIdentityCdma getCellIdentity()> -> _SOURCE_
<java.io.File: java.lang.String getCanonicalPath()> -> _SOURCE_
<android.os.Looper: android.os.Looper getMainLooper()> -> _SOURCE_
<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()> -> _SOURCE_
<android.content.ContentProvider: android.net.Uri uncanonicalize(android.net.Uri)> -> _SOURCE_
<android.view.Window: int getFeatures()> -> _SOURCE_
<android.os.Debug$MemoryInfo: int getTotalSwappablePss()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.Class getReturnType()> -> _SOURCE_
<android.content.Intent: double getDoubleExtra(java.lang.String,double)> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalTouchMajor(int)> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getMaxScrollX()> -> _SOURCE_
<android.nfc.tech.NfcB: android.nfc.tech.NfcB get(android.nfc.Tag)> -> _SOURCE_
<android.app.ActivityManager: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])> -> _SOURCE_
<java.lang.StringBuffer: void getChars(int,int,char[],int)> -> _SOURCE_
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)> -> _SOURCE_
<android.view.MotionEvent: int getPointerId(int)> -> _SOURCE_
<android.app.Activity: int getVolumeControlStream()> -> _SOURCE_
<android.content.IntentFilter: java.lang.String getCategory(int)> -> _SOURCE_
<android.app.Activity: android.app.Application getApplication()> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)> -> _SOURCE_
<android.content.res.TypedArray: int getLayoutDimension(int,int)> -> _SOURCE_
<android.bluetooth.BluetoothDevice: java.lang.String getAddress()> -> _SOURCE_
<android.view.View: float getRightFadingEdgeStrength()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Field[] getFields()> -> _SOURCE_
<android.content.res.TypedArray: float getFraction(int,int,int,float)> -> _SOURCE_
<android.content.res.Resources: android.content.res.Configuration getConfiguration()> -> _SOURCE_
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.app.Activity: int getTaskId()> -> _SOURCE_
<android.widget.Scroller: int getCurrY()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()> -> _SOURCE_
<android.view.KeyEvent: int getDeadChar(int,int)> -> _SOURCE_
<android.telephony.TelephonyManager: int getSimState()> -> _SOURCE_
<android.content.res.TypedArray: int getInteger(int,int)> -> _SOURCE_
<java.lang.Class: java.lang.ClassLoader getClassLoader()> -> _SOURCE_
<android.telephony.TelephonyManager: java.util.List getAllCellInfo()> -> _SOURCE_
<java.security.spec.ECParameterSpec: int getCofactor()> -> _SOURCE_
<android.view.KeyEvent: android.view.KeyCharacterMap getKeyCharacterMap()> -> _SOURCE_
<android.animation.ValueAnimator: long getCurrentPlayTime()> -> _SOURCE_
<android.bluetooth.BluetoothGatt: java.util.List getServices()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalOrientation(int,int)> -> _SOURCE_
<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice getRemoteDevice()> -> _SOURCE_
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)> -> _SOURCE_
<java.nio.channels.FileChannel: long read(java.nio.ByteBuffer[])> -> _SOURCE_
<android.view.View: int getSuggestedMinimumHeight()> -> _SOURCE_
<android.text.Layout: float getSpacingAdd()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalY(int)> -> _SOURCE_
<android.view.View: int getMeasuredHeightAndState()> -> _SOURCE_
<android.print.PrintAttributes: android.print.PrintAttributes$Resolution getResolution()> -> _SOURCE_
<java.net.URLConnection: java.lang.String getDefaultRequestProperty(java.lang.String)> -> _SOURCE_
<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)> -> _SOURCE_
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)> -> _SOURCE_
<android.os.Bundle: long getLong(java.lang.String)> -> _SOURCE_
<android.widget.TextView: android.text.style.URLSpan[] getUrls()> -> _SOURCE_
<java.net.InetAddress: java.lang.String getHostName()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: int getState()> -> _SOURCE_
<android.app.ActivityManager: void getMyMemoryState(android.app.ActivityManager$RunningAppProcessInfo)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()> -> _SOURCE_
<android.content.Intent: java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String)> -> _SOURCE_
<android.view.KeyCharacterMap: int getModifierBehavior()> -> _SOURCE_
<android.widget.ExpandableListView: int getPackedPositionChild(long)> -> _SOURCE_
<android.view.View: int getLabelFor()> -> _SOURCE_
<java.lang.Enum: java.lang.Class getDeclaringClass()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalX(int,int)> -> _SOURCE_
<android.location.Location: double getLongitude()> -> _SOURCE_
<android.content.ContextWrapper: android.os.Looper getMainLooper()> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)> -> _SOURCE_
<android.view.View: int getTextDirection()> -> _SOURCE_
<android.widget.AbsListView: float getBottomFadingEdgeStrength()> -> _SOURCE_
<android.text.style.DynamicDrawableSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)> -> _SOURCE_
<java.net.URLConnection: java.net.URL getURL()> -> _SOURCE_
<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()> -> _SOURCE_
<java.lang.Package: java.lang.String getName()> -> _SOURCE_
<android.content.res.TypedArray: java.lang.CharSequence getText(int)> -> _SOURCE_
<java.lang.Class: java.lang.Object[] getEnumConstants()> -> _SOURCE_
<android.text.style.ImageSpan: android.graphics.drawable.Drawable getDrawable()> -> _SOURCE_
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getDeclaredAnnotations()> -> _SOURCE_
<android.view.View: int getNextFocusUpId()> -> _SOURCE_
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder)> -> _SOURCE_
<android.graphics.Paint: void getTextPath(java.lang.String,int,int,float,float,android.graphics.Path)> -> _SOURCE_
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()> -> _SOURCE_
<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)> -> _SOURCE_
<android.view.MotionEvent: int getEdgeFlags()> -> _SOURCE_
<android.net.wifi.WifiInfo: int getNetworkId()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getToIndex()> -> _SOURCE_
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()> -> _SOURCE_
<android.view.View: float getLeftFadingEdgeStrength()> -> _SOURCE_
<android.view.ActionMode: java.lang.Object getTag()> -> _SOURCE_
<android.nfc.tech.NfcB: android.nfc.Tag getTag()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getItemCount()> -> _SOURCE_
<java.nio.channels.SelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int)> -> _SOURCE_
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()> -> _SOURCE_
<android.app.Activity: int getChangingConfigurations()> -> _SOURCE_
<android.widget.TextView: float getTextSize()> -> _SOURCE_
<java.net.Socket: java.io.InputStream getInputStream()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionStart()> -> _SOURCE_
<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()> -> _SOURCE_
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreviewSize()> -> _SOURCE_
<android.view.MotionEvent: float getSize()> -> _SOURCE_
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()> -> _SOURCE_
<android.graphics.Canvas: int getMaximumBitmapHeight()> -> _SOURCE_
<android.content.Intent: java.util.Set getCategories()> -> _SOURCE_
<java.net.URLConnection: boolean getUseCaches()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getStandardFontFamily()> -> _SOURCE_
<android.net.wifi.WifiInfo: int getRssi()> -> _SOURCE_
<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)> -> _SOURCE_
<java.util.Locale: java.lang.String[] getISOLanguages()> -> _SOURCE_
<org.apache.http.protocol.DefaultedHttpContext: org.apache.http.protocol.HttpContext getDefaults()> -> _SOURCE_
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)> -> _SOURCE_
<android.view.View: float getScaleY()> -> _SOURCE_
<android.content.Intent: android.content.Intent getSelector()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.lang.String getWhiteBalance()> -> _SOURCE_
<android.widget.TextView: int getExtendedPaddingBottom()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()> -> _SOURCE_
<java.security.spec.ECPoint: java.math.BigInteger getAffineX()> -> _SOURCE_
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)> -> _SOURCE_
<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)> android.permission.AUTHENTICATE_ACCOUNTS -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getEvdoSnr()> -> _SOURCE_
<android.view.inputmethod.CorrectionInfo: int getOffset()> -> _SOURCE_
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)> -> _SOURCE_
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattService getService()> -> _SOURCE_
<android.content.Intent: java.lang.String getPackage()> -> _SOURCE_
<android.view.InputDevice$MotionRange: float getFuzz()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getScrollY()> -> _SOURCE_
<android.content.Intent: java.util.ArrayList getIntegerArrayListExtra(java.lang.String)> -> _SOURCE_
<org.apache.http.ProtocolVersion: java.lang.String getProtocol()> -> _SOURCE_
<android.bluetooth.BluetoothGattCharacteristic: java.lang.String getStringValue(int)> -> _SOURCE_
<android.widget.TextView: float getRightFadingEdgeStrength()> -> _SOURCE_
<android.widget.AdapterView: android.widget.AdapterView$OnItemLongClickListener getOnItemLongClickListener()> -> _SOURCE_
<android.view.View: float getTranslationX()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayLanguage()> -> _SOURCE_
<android.print.PrintAttributes$Margins: int getRightMils()> -> _SOURCE_
<android.widget.TextView: int getMinHeight()> -> _SOURCE_
<android.widget.TextView: android.text.Editable getEditableText()> -> _SOURCE_
<org.xmlpull.v1.XmlPullParserException: int getColumnNumber()> -> _SOURCE_
<android.view.View: int getPaddingBottom()> -> _SOURCE_
<android.os.Bundle: short getShort(java.lang.String,short)> -> _SOURCE_
<android.content.res.TypedArray: java.lang.String getString(int)> -> _SOURCE_
<android.view.InputDevice$MotionRange: int getAxis()> -> _SOURCE_
<android.os.Debug$MemoryInfo: int getTotalSharedDirty()> -> _SOURCE_
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(int,java.lang.String)> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalToolMajor(int)> -> _SOURCE_
<android.widget.TextView: int getBottomPaddingOffset()> -> _SOURCE_
<android.view.View: android.view.KeyEvent$DispatcherState getKeyDispatcherState()> -> _SOURCE_
<android.location.Criteria: int getHorizontalAccuracy()> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getCdmaLevel()> -> _SOURCE_
<java.lang.String: byte[] getBytes(java.lang.String)> -> _SOURCE_
<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedTo()> -> _SOURCE_
<android.provider.ContactsContract$ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)> android.permission.READ_CONTACTS android.permission.WRITE_CONTACTS android.permission.READ_SOCIAL_STREAM -> _SOURCE_
<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(android.net.sip.SipProfile,android.net.sip.SipProfile,android.net.sip.SipAudioCall$Listener,int)> -> _SOURCE_
<android.graphics.Bitmap: int getWidth()> -> _SOURCE_
<android.app.backup.BackupDataInputStream: java.lang.String getKey()> -> _SOURCE_
<android.os.Bundle: float[] getFloatArray(java.lang.String)> -> _SOURCE_
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])> -> _SOURCE_
<java.lang.ref.Reference: java.lang.Object get()> -> _SOURCE_
<android.nfc.tech.IsoDep: android.nfc.Tag getTag()> -> _SOURCE_
<android.view.ViewPropertyAnimator: long getDuration()> -> _SOURCE_
<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)> -> _SOURCE_
<android.content.ContentProvider: java.lang.String getReadPermission()> -> _SOURCE_
<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])> -> _SOURCE_
<android.view.MotionEvent: float getYPrecision()> -> _SOURCE_
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()> -> _SOURCE_
<android.bluetooth.BluetoothSocket: java.io.InputStream getInputStream()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalOrientation(int)> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getMmsUserAgent()> -> _SOURCE_
<android.view.View: int getId()> -> _SOURCE_
<android.view.MotionEvent: int getHistorySize()> -> _SOURCE_
<java.net.DatagramPacket: java.net.SocketAddress getSocketAddress()> -> _SOURCE_
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getLabel()> -> _SOURCE_
<android.view.ViewGroup$MarginLayoutParams: int getMarginEnd()> -> _SOURCE_
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)> -> _SOURCE_
<android.view.KeyEvent: int getDeviceId()> -> _SOURCE_
<java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.lang.ClassLoader getClassLoader()> -> _SOURCE_
<android.webkit.WebView: java.lang.String getTitle()> -> _SOURCE_
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getMaxNumDetectedFaces()> -> _SOURCE_
<android.graphics.Bitmap: int getScaledHeight(android.graphics.Canvas)> -> _SOURCE_
<android.graphics.drawable.Drawable: int getIntrinsicWidth()> -> _SOURCE_
<android.view.MotionEvent: float getToolMajor()> -> _SOURCE_
<java.net.DatagramSocket: int getLocalPort()> -> _SOURCE_
<android.app.Dialog: android.view.Window getWindow()> -> _SOURCE_
<android.graphics.Bitmap: int getDensity()> -> _SOURCE_
<android.graphics.drawable.Drawable: int getChangingConfigurations()> -> _SOURCE_
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()> -> _SOURCE_
<android.net.sip.SipSession: android.net.sip.SipProfile getPeerProfile()> -> _SOURCE_
<android.content.ContextWrapper: java.lang.String getPackageResourcePath()> -> _SOURCE_
<java.net.InetAddress: java.net.InetAddress getLoopbackAddress()> -> _SOURCE_
<android.view.View: int getAccessibilityLiveRegion()> -> _SOURCE_
<java.nio.CharBuffer: java.nio.CharBuffer get(char[],int,int)> -> _SOURCE_
<java.lang.Package: java.lang.String getSpecificationTitle()> -> _SOURCE_
<android.view.animation.LayoutAnimationController: int getOrder()> -> _SOURCE_
<java.net.Socket: int getReceiveBufferSize()> -> _SOURCE_
<android.webkit.WebView: java.lang.String getOriginalUrl()> -> _SOURCE_
<android.widget.AdapterView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()> -> _SOURCE_
<java.util.Locale: java.lang.String getLanguage()> -> _SOURCE_
<java.lang.Throwable: java.lang.String getMessage()> -> _SOURCE_
<java.net.URI: java.lang.String getAuthority()> -> _SOURCE_
<android.bluetooth.BluetoothGattCharacteristic: byte[] getValue()> -> _SOURCE_
<android.os.Debug$MemoryInfo: int getTotalSharedClean()> -> _SOURCE_
<android.app.ActivityGroup: android.app.Activity getCurrentActivity()> -> _SOURCE_
<android.view.MotionEvent: float getRawX()> -> _SOURCE_
<android.content.ClipData: android.content.ClipDescription getDescription()> -> _SOURCE_
<android.nfc.Tag: byte[] getId()> -> _SOURCE_
<android.app.ActionBar: android.content.Context getThemedContext()> -> _SOURCE_
<android.widget.TextView: int getTotalPaddingRight()> -> _SOURCE_
<java.lang.Character: byte getDirectionality(int)> -> _SOURCE_
<android.net.sip.SipManager: java.lang.String getCallId(android.content.Intent)> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getCdmaDbm()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Typeface getTypeface()> -> _SOURCE_
<android.os.Bundle: long[] getLongArray(java.lang.String)> -> _SOURCE_
<android.view.animation.Animation: int getBackgroundColor()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.lang.String getFocusMode()> -> _SOURCE_
<android.app.Fragment: android.app.Fragment getParentFragment()> -> _SOURCE_
<android.app.PendingIntent: android.content.IntentSender getIntentSender()> -> _SOURCE_
<java.nio.channels.DatagramChannel: long write(java.nio.ByteBuffer[])> -> _SOURCE_
<android.nfc.NdefMessage: android.nfc.NdefRecord[] getRecords()> -> _SOURCE_
<android.view.DragEvent: float getY()> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()> -> _SOURCE_
<android.view.View: int getRightPaddingOffset()> -> _SOURCE_
<java.lang.ExceptionInInitializerError: java.lang.Throwable getException()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<android.view.View: void getDrawingRect(android.graphics.Rect)> -> _SOURCE_
<android.app.Activity: int getTitleColor()> -> _SOURCE_
<android.graphics.Canvas: int getDensity()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()> -> _SOURCE_
<android.view.Display: void getRealMetrics(android.util.DisplayMetrics)> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()> -> _SOURCE_
<java.net.URLConnection: java.lang.String getRequestProperty(java.lang.String)> -> _SOURCE_
<android.content.Context: java.lang.String getString(int,java.lang.Object[])> -> _SOURCE_
<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)> -> _SOURCE_
<android.app.Fragment: android.app.LoaderManager getLoaderManager()> -> _SOURCE_
<android.provider.Settings$Secure: float getFloat(android.content.ContentResolver,java.lang.String,float)> -> _SOURCE_
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothClass getBluetoothClass()> -> _SOURCE_
<android.view.View: int getSuggestedMinimumWidth()> -> _SOURCE_
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getPassword()> -> _SOURCE_
<android.view.ActionMode: boolean getTitleOptionalHint()> -> _SOURCE_
<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)> -> _SOURCE_
<android.webkit.WebHistoryItem: java.lang.String getUrl()> -> _SOURCE_
<android.bluetooth.BluetoothGattDescriptor: android.bluetooth.BluetoothGattCharacteristic getCharacteristic()> -> _SOURCE_
<android.util.Property: java.lang.Class getType()> -> _SOURCE_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<java.lang.Character: int getType(int)> -> _SOURCE_
<android.view.MotionEvent: float getTouchMajor()> -> _SOURCE_
<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)> -> _SOURCE_
<android.print.PrintAttributes$Resolution: int getHorizontalDpi()> -> _SOURCE_
<java.security.Permission: java.lang.String getName()> -> _SOURCE_
<android.view.animation.Animation: long getStartTime()> -> _SOURCE_
<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)> -> _SOURCE_
<android.webkit.WebView: android.graphics.Bitmap getFavicon()> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)> -> _SOURCE_
<android.widget.TextView: android.os.Bundle getInputExtras(boolean)> -> _SOURCE_
<android.view.View: android.view.View$OnFocusChangeListener getOnFocusChangeListener()> -> _SOURCE_
<android.widget.TextView: int getTotalPaddingStart()> -> _SOURCE_
<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()> -> _SOURCE_
<android.content.ContentValues: java.lang.Float getAsFloat(java.lang.String)> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalTouchMinor(int,int)> -> _SOURCE_
<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<android.view.InputDevice: int getVendorId()> -> _SOURCE_
<java.lang.reflect.Constructor: int getModifiers()> -> _SOURCE_
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getScrollX()> -> _SOURCE_
<java.lang.ExceptionInInitializerError: java.lang.Throwable getCause()> -> _SOURCE_
<android.view.View: int getWindowAttachCount()> -> _SOURCE_
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)> -> _SOURCE_
<java.net.URLConnection: boolean getDoInput()> -> _SOURCE_
<android.nfc.tech.IsoDep: byte[] getHiLayerResponse()> -> _SOURCE_
<android.animation.LayoutTransition: android.animation.TimeInterpolator getInterpolator(int)> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)> -> _SOURCE_
<android.widget.ListView: int getFooterViewsCount()> -> _SOURCE_
<java.net.NetworkInterface: java.util.List getInterfaceAddresses()> -> _SOURCE_
<java.lang.Package: java.lang.String getImplementationVersion()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<android.webkit.WebSettings: boolean getBuiltInZoomControls()> -> _SOURCE_
<android.bluetooth.BluetoothDevice: int getBondState()> -> _SOURCE_
<android.widget.AbsListView: int getListPaddingTop()> -> _SOURCE_
<android.net.sip.SipProfile: boolean getAutoRegistration()> -> _SOURCE_
<android.print.PrintAttributes$Resolution: int getVerticalDpi()> -> _SOURCE_
<java.lang.Package: java.lang.String getImplementationVendor()> -> _SOURCE_
<android.telephony.SignalStrength: int getGsmSignalStrength()> -> _SOURCE_
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)> -> _SOURCE_
<java.lang.Long: java.lang.Long getLong(java.lang.String,long)> -> _SOURCE_
<android.os.Debug$MemoryInfo: int getTotalPss()> -> _SOURCE_
<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()> -> _SOURCE_
<android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String getSSID()> -> _SOURCE_
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()> android.permission.ACCESS_FINE_LOCATION android.permission.ACCESS_COARSE_LOCATION -> _SOURCE_
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation getAnnotation(java.lang.Class)> -> _SOURCE_
<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 getFactory2()> -> _SOURCE_
<android.net.sip.SipSession: java.lang.String getLocalIp()> -> _SOURCE_
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)> -> _SOURCE_
<java.util.BitSet: java.util.BitSet get(int,int)> -> _SOURCE_
<java.util.Locale: java.lang.String getISO3Country()> -> _SOURCE_
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSimOperator()> -> _SOURCE_
<android.location.Criteria: int getSpeedAccuracy()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getCursiveFontFamily()> -> _SOURCE_
<java.nio.FloatBuffer: java.nio.FloatBuffer put(float[])> -> _SOURCE_
<android.widget.AbsListView: int getCheckedItemCount()> -> _SOURCE_
<android.net.wifi.WifiEnterpriseConfig: int getPhase2Method()> -> _SOURCE_
<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)> -> _SOURCE_
<java.nio.channels.FileChannel: long write(java.nio.ByteBuffer[])> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFpsRange()> -> _SOURCE_
<java.net.DatagramSocketImpl: int getLocalPort()> -> _SOURCE_
<android.content.ContentResolver: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> -> _SOURCE_
<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()> -> _SOURCE_
<android.net.wifi.WifiInfo: android.net.NetworkInfo$DetailedState getDetailedStateOf(android.net.wifi.SupplicantState)> -> _SOURCE_
<android.provider.ContactsContract$ProfileSyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)> -> _SOURCE_
<android.content.ContentProviderClient: android.net.Uri canonicalize(android.net.Uri)> -> _SOURCE_
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollHeader()> -> _SOURCE_
<android.app.Activity: android.view.MenuInflater getMenuInflater()> -> _SOURCE_
<android.content.ContextWrapper: java.lang.String getPackageCodePath()> -> _SOURCE_
<java.lang.Throwable: java.lang.Throwable getCause()> -> _SOURCE_
<android.nfc.NdefRecord: byte[] getId()> -> _SOURCE_
<android.view.MotionEvent: float getPressure()> -> _SOURCE_
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<android.app.Fragment: android.app.Activity getActivity()> -> _SOURCE_
<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabelFor()> -> _SOURCE_
<android.webkit.WebChromeClient: void getVisitedHistory(android.webkit.ValueCallback)> -> _SOURCE_
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)> -> _SOURCE_
<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)> -> _SOURCE_
<android.location.Criteria: int getPowerRequirement()> -> _SOURCE_
<android.graphics.Paint: int getTextWidths(char[],int,int,float[])> -> _SOURCE_
<android.app.Fragment: android.app.FragmentManager getFragmentManager()> -> _SOURCE_
<android.view.View: int getHorizontalScrollbarHeight()> -> _SOURCE_
<android.net.wifi.WifiManager: java.util.List getScanResults()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()> -> _SOURCE_
<android.webkit.WebSettings: boolean getBlockNetworkImage()> -> _SOURCE_
<android.content.IntentSender: int getCreatorUid()> -> _SOURCE_
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)> -> _SOURCE_
<android.view.View: int getLayoutDirection()> -> _SOURCE_
<android.bluetooth.BluetoothGattCharacteristic: int getProperties()> -> _SOURCE_
<java.net.NetworkInterface: java.net.NetworkInterface getByName(java.lang.String)> -> _SOURCE_
<java.net.URL: java.lang.String getRef()> -> _SOURCE_
<android.text.Layout: int getLineVisibleEnd(int)> -> _SOURCE_
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()> -> _SOURCE_
<android.view.MotionEvent: long getEventTime()> -> _SOURCE_
<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult flush(java.nio.ByteBuffer)> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getCurrentItemIndex()> -> _SOURCE_
<android.widget.RemoteViews: int getLayoutId()> -> _SOURCE_
<android.webkit.WebView$HitTestResult: int getType()> -> _SOURCE_
<java.net.URLConnection: boolean getDoOutput()> -> _SOURCE_
<java.net.NetworkInterface: byte[] getHardwareAddress()> -> _SOURCE_
<java.net.NetworkInterface: java.util.Enumeration getSubInterfaces()> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getSipDomain()> -> _SOURCE_
<android.content.ContentResolver: boolean getMasterSyncAutomatically()> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int)> -> _SOURCE_
<android.telephony.CellIdentityCdma: int getBasestationId()> -> _SOURCE_
<android.widget.TextView: int getGravity()> -> _SOURCE_
<java.net.InetAddress: java.net.InetAddress getByAddress(java.lang.String,byte[])> -> _SOURCE_
<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)> -> _SOURCE_
<android.webkit.WebBackForwardList: int getCurrentIndex()> -> _SOURCE_
<android.content.ContextWrapper: android.content.res.Resources getResources()> -> _SOURCE_
<android.view.Display: void getRealSize(android.graphics.Point)> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getZoomRatios()> -> _SOURCE_
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)> -> _SOURCE_
<android.widget.ExpandableListView: int getFlatListPosition(long)> -> _SOURCE_
<android.hardware.Camera$Parameters: int getZoom()> -> _SOURCE_
<android.os.Bundle: double getDouble(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.lang.Object get(java.lang.String)> -> _SOURCE_
<android.os.Bundle: double[] getDoubleArray(java.lang.String)> -> _SOURCE_
<java.lang.Class: java.lang.String getName()> -> _SOURCE_
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)> -> _SOURCE_
<android.net.http.SslCertificate: java.lang.String getValidNotBefore()> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getUserName()> -> _SOURCE_
<android.view.KeyCharacterMap: int get(int,int)> -> _SOURCE_
<android.widget.AdapterView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()> -> _SOURCE_
<java.net.ContentHandler: java.lang.Object getContent(java.net.URLConnection,java.lang.Class[])> -> _SOURCE_
<android.view.MotionEvent: int getAction()> -> _SOURCE_
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)> -> _SOURCE_
<android.view.InputDevice: int getControllerNumber()> -> _SOURCE_
<java.net.DatagramPacket: byte[] getData()> -> _SOURCE_
<java.security.Timestamp: java.util.Date getTimestamp()> -> _SOURCE_
<java.net.DatagramSocket: boolean getBroadcast()> -> _SOURCE_
<android.graphics.Picture: android.graphics.Picture createFromStream(java.io.InputStream)> -> _SOURCE_
<android.view.View: float getRotationX()> -> _SOURCE_
<android.net.wifi.WifiInfo: int getLinkSpeed()> -> _SOURCE_
<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)> -> _SOURCE_
<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()> -> _SOURCE_
<android.app.Activity: android.app.ActionBar getActionBar()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$Style getStyle()> -> _SOURCE_
<android.view.MotionEvent: float getX()> -> _SOURCE_
<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)> android.permission.READ_SYNC_SETTINGS -> _SOURCE_
<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])> -> _SOURCE_
<android.content.ClipData: android.content.ClipData$Item getItemAt(int)> -> _SOURCE_
<android.content.res.Resources: java.lang.String[] getStringArray(int)> -> _SOURCE_
<java.util.UUID: long getMostSignificantBits()> -> _SOURCE_
<android.content.Intent: double[] getDoubleArrayExtra(java.lang.String)> -> _SOURCE_
<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)> -> _SOURCE_
<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<java.net.SocketImpl: java.io.FileDescriptor getFileDescriptor()> -> _SOURCE_
<android.app.Activity: android.view.WindowManager getWindowManager()> -> _SOURCE_
<android.content.Intent: java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String)> -> _SOURCE_
<android.webkit.WebView$HitTestResult: java.lang.String getExtra()> -> _SOURCE_
<android.content.BroadcastReceiver$PendingResult: int getResultCode()> -> _SOURCE_
<android.view.View: boolean getKeepScreenOn()> -> _SOURCE_
<android.content.ContentProviderClient: java.lang.String getType(android.net.Uri)> -> _SOURCE_
<android.graphics.Bitmap: int getRowBytes()> -> _SOURCE_
<java.util.Locale: java.lang.String[] getISOCountries()> -> _SOURCE_
<android.content.Loader: int getId()> -> _SOURCE_
<android.view.MotionEvent: float getOrientation(int)> -> _SOURCE_
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()> -> _SOURCE_
<android.view.DragEvent: android.content.ClipData getClipData()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getMaxNumMeteringAreas()> -> _SOURCE_
<android.content.ComponentName: java.lang.String getPackageName()> -> _SOURCE_
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$MulticastLock createMulticastLock(java.lang.String)> -> _SOURCE_
<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])> -> _SOURCE_
<android.view.View: int getPaddingRight()> -> _SOURCE_
<android.content.Intent: android.net.Uri getData()> -> _SOURCE_
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getSubjectMatch()> -> _SOURCE_
<android.widget.AbsListView: int getVerticalScrollbarWidth()> -> _SOURCE_
<android.webkit.WebSettings: int getCacheMode()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.view.View$AccessibilityDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)> -> _SOURCE_
<android.util.SparseBooleanArray: boolean get(int,boolean)> -> _SOURCE_
<android.view.MotionEvent: float getAxisValue(int)> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: android.os.Parcelable getParcelableData()> -> _SOURCE_
<android.os.Bundle: double getDouble(java.lang.String,double)> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)> -> _SOURCE_
<android.view.KeyEvent: java.lang.String getCharacters()> -> _SOURCE_
<android.widget.ListView: boolean getItemsCanFocus()> -> _SOURCE_
<java.nio.LongBuffer: java.nio.LongBuffer get(long[],int,int)> -> _SOURCE_
<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<java.nio.ShortBuffer: java.nio.ShortBuffer get(short[])> -> _SOURCE_
<android.view.View: android.graphics.Matrix getMatrix()> -> _SOURCE_
<java.net.URLConnection: java.io.OutputStream getOutputStream()> -> _SOURCE_
<android.view.View: android.os.Handler getHandler()> -> _SOURCE_
<java.lang.ClassNotFoundException: java.lang.Throwable getException()> -> _SOURCE_
<android.view.InputDevice: int[] getDeviceIds()> -> _SOURCE_
<android.graphics.Paint: void getTextBounds(char[],int,int,android.graphics.Rect)> -> _SOURCE_
<android.view.MotionEvent: long getHistoricalEventTime(int)> -> _SOURCE_
<android.widget.TextView: int getMinLines()> -> _SOURCE_
<android.view.MotionEvent: void getPointerProperties(int,android.view.MotionEvent$PointerProperties)> -> _SOURCE_
<android.text.Layout: int getEllipsizedWidth()> -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getProfileName()> -> _SOURCE_
<android.location.LocationManager: java.util.List getProviders(boolean)> -> _SOURCE_
<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedBy()> -> _SOURCE_
<android.widget.AdapterView: long getItemIdAtPosition(int)> -> _SOURCE_
<android.content.Intent: java.lang.String getScheme()> -> _SOURCE_
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getCurrentItem()> -> _SOURCE_
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)> -> _SOURCE_
<android.os.Bundle: byte getByte(java.lang.String)> -> _SOURCE_
<android.app.Dialog: android.app.Activity getOwnerActivity()> -> _SOURCE_
<android.bluetooth.BluetoothGattCharacteristic: java.util.UUID getUuid()> -> _SOURCE_
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)> -> _SOURCE_
<android.nfc.NdefRecord: short getTnf()> -> _SOURCE_
<android.os.Bundle: int getInt(java.lang.String)> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalSize(int,int)> -> _SOURCE_
<android.telephony.CellIdentityCdma: int getNetworkId()> -> _SOURCE_
<android.view.View: int getMinimumWidth()> -> _SOURCE_
<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> -> _SOURCE_
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation,float)> -> _SOURCE_
<java.lang.String: byte[] getBytes(java.nio.charset.Charset)> -> _SOURCE_
<java.lang.reflect.Field: float getFloat(java.lang.Object)> -> _SOURCE_
<android.media.MediaFormat: java.lang.String getString(java.lang.String)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()> -> _SOURCE_
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()> -> _SOURCE_
<android.widget.TextView: int getExtendedPaddingTop()> -> _SOURCE_
<android.print.PrintAttributes$Resolution: java.lang.String getLabel()> -> _SOURCE_
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()> -> _SOURCE_
<java.nio.Buffer: java.nio.Buffer position(int)> -> _SOURCE_
<android.view.MotionEvent: int getMetaState()> -> _SOURCE_
<android.content.ContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])> -> _SOURCE_
<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()> -> _SOURCE_
<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getQuantityString(int,int)> -> _SOURCE_
<java.net.DatagramSocket: int getPort()> -> _SOURCE_
<android.widget.AbsListView: float getTopFadingEdgeStrength()> -> _SOURCE_
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)> -> _SOURCE_
<android.net.Uri$Builder: android.net.Uri$Builder query(java.lang.String)> -> _SOURCE_
<java.nio.charset.MalformedInputException: java.lang.String getMessage()> -> _SOURCE_
<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)> -> _SOURCE_
<java.net.URISyntaxException: java.lang.String getMessage()> -> _SOURCE_
<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String,long)> -> _SOURCE_
<android.widget.ListView: int getDividerHeight()> -> _SOURCE_
<java.net.URLConnection: java.lang.String getContentType()> -> _SOURCE_
<android.location.Location: float getAccuracy()> -> _SOURCE_
<android.bluetooth.BluetoothGattCharacteristic: int getWriteType()> -> _SOURCE_
<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)> -> _SOURCE_
<android.content.BroadcastReceiver: android.os.IBinder peekService(android.content.Context,android.content.Intent)> -> _SOURCE_
<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)> -> _SOURCE_
<android.widget.TextView: int getImeActionId()> -> _SOURCE_
<android.app.Activity: android.content.SharedPreferences getPreferences(int)> -> _SOURCE_
<android.app.ActivityManager: java.util.List getProcessesInErrorState()> -> _SOURCE_
<java.net.URLConnection: int getReadTimeout()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getUserAgentString()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalAxisValue(int,int,int)> -> _SOURCE_
<java.lang.Boolean: boolean getBoolean(java.lang.String)> -> _SOURCE_
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)> -> _SOURCE_
<android.content.res.Resources: java.lang.CharSequence getText(int,java.lang.CharSequence)> -> _SOURCE_
<android.view.View: float getTranslationY()> -> _SOURCE_
<android.app.Fragment: java.lang.String getString(int,java.lang.Object[])> -> _SOURCE_
<android.webkit.WebSettings: int getDefaultFixedFontSize()> -> _SOURCE_
<android.view.View$DragShadowBuilder: android.view.View getView()> -> _SOURCE_
<android.os.ParcelFileDescriptor: long getStatSize()> -> _SOURCE_
<java.io.File: long getUsableSpace()> -> _SOURCE_
<android.content.Intent: short[] getShortArrayExtra(java.lang.String)> -> _SOURCE_
<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()> -> _SOURCE_
<android.widget.TextView: int getCompoundDrawablePadding()> -> _SOURCE_
<android.content.res.TypedArray: java.lang.String getNonResourceString(int)> -> _SOURCE_
<android.nfc.NdefRecord: byte[] getType()> -> _SOURCE_
<org.apache.http.protocol.DefaultedHttpContext: java.lang.Object getAttribute(java.lang.String)> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<java.net.DatagramPacket: int getLength()> -> _SOURCE_
<android.text.style.URLSpan: java.lang.String getURL()> -> _SOURCE_
<android.text.Layout: int getLineEnd(int)> -> _SOURCE_
<java.lang.Thread: java.lang.Thread$State getState()> -> _SOURCE_
<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)> -> _SOURCE_
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()> -> _SOURCE_
<android.app.Dialog: android.view.View getCurrentFocus()> -> _SOURCE_
<android.view.View: android.view.WindowId getWindowId()> -> _SOURCE_
<android.view.View: int getNextFocusLeftId()> -> _SOURCE_
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()> -> _SOURCE_
<android.view.View: float getRotationY()> -> _SOURCE_
<java.io.File: java.lang.String getAbsolutePath()> -> _SOURCE_
<java.net.URI: java.lang.String getRawFragment()> -> _SOURCE_
<android.animation.ValueAnimator: int getRepeatMode()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()> -> _SOURCE_
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)> -> _SOURCE_
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)> -> _SOURCE_
<android.content.res.Resources: java.lang.String getResourceName(int)> -> _SOURCE_
<java.lang.String: void getBytes(int,int,byte[],int)> -> _SOURCE_
<android.view.KeyCharacterMap: char getMatch(int,char[])> -> _SOURCE_
<android.app.Dialog: android.app.ActionBar getActionBar()> -> _SOURCE_
<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String,long)> -> _SOURCE_
<java.net.DatagramSocket: java.net.SocketAddress getLocalSocketAddress()> -> _SOURCE_
<java.net.URI: java.lang.String getUserInfo()> -> _SOURCE_
<android.location.Location: float getBearing()> -> _SOURCE_
<android.os.Bundle: boolean getBoolean(java.lang.String)> -> _SOURCE_
<android.view.View: int getScrollX()> -> _SOURCE_
<android.widget.TextView: int getSelectionStart()> -> _SOURCE_
<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)> -> _SOURCE_
<java.lang.ClassNotFoundException: java.lang.Throwable getCause()> -> _SOURCE_
<java.io.File: java.lang.String getParent()> -> _SOURCE_
<android.nfc.Tag: java.lang.String[] getTechList()> -> _SOURCE_
<android.content.ContentResolver: int bulkInsert(android.net.Uri,android.content.ContentValues[])> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Method[] getMethods()> -> _SOURCE_
<java.lang.reflect.Field: char getChar(java.lang.Object)> -> _SOURCE_
<android.widget.TextView: int getOffsetForPosition(float,float)> -> _SOURCE_
<android.graphics.Bitmap: int getByteCount()> -> _SOURCE_
<android.content.ContentProviderClient: android.content.ContentProvider getLocalContentProvider()> -> _SOURCE_
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattDescriptor getDescriptor(java.util.UUID)> -> _SOURCE_
<java.net.URLConnection: boolean getAllowUserInteraction()> -> _SOURCE_
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)> -> _SOURCE_
<java.net.DatagramSocket: boolean getReuseAddress()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getRowIndex()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<android.content.ClipDescription: java.lang.CharSequence getLabel()> -> _SOURCE_
<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[],int,int)> -> _SOURCE_
<java.lang.Throwable: java.lang.Throwable[] getSuppressed()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getDatabasePath()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalAxisValue(int,int)> -> _SOURCE_
<android.text.Layout: int getWidth()> -> _SOURCE_
<android.content.res.AssetFileDescriptor: long getLength()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Xfermode getXfermode()> -> _SOURCE_
<android.hardware.Camera$Parameters: float getHorizontalViewAngle()> -> _SOURCE_
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(byte[])> -> _SOURCE_
<android.webkit.WebView: int getProgress()> -> _SOURCE_
<android.view.ViewGroup: android.view.animation.LayoutAnimationController getLayoutAnimation()> -> _SOURCE_
<android.content.Intent: short getShortExtra(java.lang.String,short)> -> _SOURCE_
<android.app.Activity: int getRequestedOrientation()> -> _SOURCE_
<android.content.ContentProvider: java.lang.String getWritePermission()> -> _SOURCE_
<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)> -> _SOURCE_
<android.media.MediaFormat: float getFloat(java.lang.String)> -> _SOURCE_
<java.nio.ShortBuffer: java.nio.ShortBuffer get(short[],int,int)> -> _SOURCE_
<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap$KeyData)> -> _SOURCE_
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()> -> _SOURCE_
<android.view.animation.Animation: android.view.animation.Interpolator getInterpolator()> -> _SOURCE_
<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getColumnSpan()> -> _SOURCE_
<android.app.Activity: android.view.View getCurrentFocus()> -> _SOURCE_
<java.net.DatagramPacket: int getPort()> -> _SOURCE_
<android.view.View: int getVerticalFadingEdgeLength()> -> _SOURCE_
<android.content.pm.ResolveInfo: int getIconResource()> -> _SOURCE_
<android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()> -> _SOURCE_
<android.widget.TextView: android.text.TextPaint getPaint()> -> _SOURCE_
<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()> -> _SOURCE_
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()> -> _SOURCE_
<android.app.LocalActivityManager: android.view.Window destroyActivity(java.lang.String,boolean)> -> _SOURCE_
<org.xmlpull.v1.XmlPullParserException: int getLineNumber()> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: int getEventType()> -> _SOURCE_
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)> -> _SOURCE_
<android.app.ActivityManager: int getLauncherLargeIconDensity()> -> _SOURCE_
<android.location.Location: long getElapsedRealtimeNanos()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getGroupIdLevel1()> -> _SOURCE_
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)> -> _SOURCE_
<java.net.URLConnection: java.security.Permission getPermission()> -> _SOURCE_
<android.location.LocationProvider: java.lang.String getName()> -> _SOURCE_
<android.webkit.WebSettings: int getMinimumFontSize()> -> _SOURCE_
<android.widget.ListView: android.graphics.drawable.Drawable getDivider()> -> _SOURCE_
<android.view.DragEvent: float getX()> -> _SOURCE_
<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[],int,int)> -> _SOURCE_
<android.app.TaskStackBuilder: int getIntentCount()> -> _SOURCE_
<android.widget.TextView: int getCompoundPaddingBottom()> -> _SOURCE_
<java.lang.Thread: java.lang.String getName()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)> -> _SOURCE_
<java.net.URL: java.lang.String getFile()> -> _SOURCE_
<android.bluetooth.BluetoothGattService: java.util.UUID getUuid()> -> _SOURCE_
<android.content.Intent: android.graphics.Rect getSourceBounds()> -> _SOURCE_
<android.os.Bundle: long getLong(java.lang.String,long)> -> _SOURCE_
<android.app.ActivityManager: java.util.List getRunningAppProcesses()> -> _SOURCE_
<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent$PointerCoords)> -> _SOURCE_
<java.util.HashMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<java.net.URLConnection: java.lang.String getHeaderField(int)> -> _SOURCE_
<android.app.Notification$Style: android.widget.RemoteViews getStandardView(int)> -> _SOURCE_
<android.print.PrintDocumentInfo: int getContentType()> -> _SOURCE_
<android.widget.ExpandableListView: long getPackedPositionForGroup(int)> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> -> _SOURCE_
<android.net.wifi.WifiManager: int updateNetwork(android.net.wifi.WifiConfiguration)> -> _SOURCE_
<android.content.ComponentName: java.lang.String getClassName()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getRemovedCount()> -> _SOURCE_
<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)> -> _SOURCE_
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])> -> _SOURCE_
<java.net.URI: java.lang.String getRawAuthority()> -> _SOURCE_
<android.app.backup.BackupDataInput: int getDataSize()> -> _SOURCE_
<java.net.URI: java.lang.String getSchemeSpecificPart()> -> _SOURCE_
<java.lang.String: void getChars(int,int,char[],int)> -> _SOURCE_
<java.net.URLConnection: long getLastModified()> -> _SOURCE_
<android.telephony.SmsManager: android.telephony.SmsManager getDefault()> -> _SOURCE_
<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)> -> _SOURCE_
<android.view.ViewPropertyAnimator: long getStartDelay()> -> _SOURCE_
<java.net.DatagramSocket: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<android.graphics.Paint: android.graphics.PathEffect getPathEffect()> -> _SOURCE_
<android.provider.CalendarContract$Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String)> -> _SOURCE_
<android.graphics.drawable.Drawable: int getMinimumWidth()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getResourcePackageName(int)> -> _SOURCE_
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> -> _SOURCE_
<android.content.ContentProviderOperation: android.net.Uri getUri()> -> _SOURCE_
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)> -> _SOURCE_
<android.app.ActivityManager: int getMemoryClass()> -> _SOURCE_
<java.lang.StackTraceElement: java.lang.String getFileName()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getDefaultUserAgent(android.content.Context)> -> _SOURCE_
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()> -> _SOURCE_
<java.io.File: java.io.File getParentFile()> -> _SOURCE_
<android.view.InputDevice: android.view.InputDevice getDevice(int)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
<android.os.Bundle: short[] getShortArray(java.lang.String)> -> _SOURCE_
<android.text.Layout: float getLineLeft(int)> -> _SOURCE_
<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()> -> _SOURCE_
<java.nio.IntBuffer: java.nio.IntBuffer put(int[])> -> _SOURCE_
<android.view.KeyEvent: int getFlags()> -> _SOURCE_
<android.nfc.NdefRecord: byte[] getPayload()> -> _SOURCE_
<java.security.CodeSigner: java.security.cert.CertPath getSignerCertPath()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<android.widget.AbsListView: void getFocusedRect(android.graphics.Rect)> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<android.view.View: int getScrollY()> -> _SOURCE_
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)> -> _SOURCE_
<java.nio.channels.SelectionKey: java.lang.Object attach(java.lang.Object)> -> _SOURCE_
<java.lang.Class: java.lang.String getCanonicalName()> -> _SOURCE_
<android.widget.ExpandableListView: long getSelectedId()> -> _SOURCE_
<android.view.View: int[] getDrawableState()> -> _SOURCE_
<android.graphics.Canvas: int getMaximumBitmapWidth()> -> _SOURCE_
<android.content.res.TypedArray: int getIndex(int)> -> _SOURCE_
<android.view.View: int getNextFocusRightId()> -> _SOURCE_
<android.net.http.SslCertificate: java.lang.String getValidNotAfter()> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)> -> _SOURCE_
<android.widget.AbsListView: java.lang.CharSequence getTextFilter()> -> _SOURCE_
<java.lang.Package: java.lang.Package[] getPackages()> -> _SOURCE_
<java.net.URLConnection: long getExpiration()> -> _SOURCE_
<android.widget.AdapterView: int getFirstVisiblePosition()> -> _SOURCE_
<android.view.View: int getMinimumHeight()> -> _SOURCE_
<android.view.MotionEvent: int getActionIndex()> -> _SOURCE_
<android.content.res.Resources: void getValue(java.lang.String,android.util.TypedValue,boolean)> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getAddedCount()> -> _SOURCE_
<java.net.URI: int getPort()> -> _SOURCE_
<android.app.Activity: android.content.Intent getIntent()> -> _SOURCE_
<android.content.IntentFilter: int getPriority()> -> _SOURCE_
<android.view.View: int getLeftPaddingOffset()> -> _SOURCE_
<android.content.Context: java.lang.CharSequence getText(int)> -> _SOURCE_
<android.view.WindowManager$LayoutParams: java.lang.CharSequence getTitle()> -> _SOURCE_
<android.content.ContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)> -> _SOURCE_
<android.view.animation.Animation: boolean getFillBefore()> -> _SOURCE_
<android.content.ClipData$Item: java.lang.String getHtmlText()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getExposureCompensation()> -> _SOURCE_
<android.telephony.gsm.SmsManager: java.util.ArrayList divideMessage(java.lang.String)> -> _SOURCE_
<android.view.View: android.content.Context getContext()> -> _SOURCE_
<java.lang.Package: java.lang.annotation.Annotation getAnnotation(java.lang.Class)> -> _SOURCE_
<java.lang.Thread: long getId()> -> _SOURCE_
<android.widget.TextView: float getShadowDx()> -> _SOURCE_
<android.media.TimedText: java.lang.String getText()> -> _SOURCE_
<org.apache.http.message.ParserCursor: int getPos()> -> _SOURCE_
<android.net.sip.SipManager: android.net.sip.SipAudioCall takeAudioCall(android.content.Intent,android.net.sip.SipAudioCall$Listener)> android.permission.USE_SIP -> _SOURCE_
<android.view.Display: void getMetrics(android.util.DisplayMetrics)> -> _SOURCE_
<android.bluetooth.BluetoothDevice: java.lang.String getName()> android.permission.BLUETOOTH -> _SOURCE_
<android.net.sip.SipProfile: java.lang.String getProtocol()> -> _SOURCE_
<java.net.ServerSocket: boolean getReuseAddress()> -> _SOURCE_
<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.nio.CharBuffer)> -> _SOURCE_
<android.net.wifi.WifiInfo: boolean getHiddenSSID()> -> _SOURCE_
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> -> _SOURCE_
<android.webkit.WebSettings: boolean getMediaPlaybackRequiresUserGesture()> -> _SOURCE_
<android.graphics.Bitmap: int getScaledWidth(android.graphics.Canvas)> -> _SOURCE_
<org.apache.http.ProtocolVersion: int getMajor()> -> _SOURCE_
<android.app.Dialog: android.content.Context getContext()> -> _SOURCE_
<android.os.Bundle: java.lang.String getString(java.lang.String)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInParent(android.graphics.Rect)> -> _SOURCE_
<android.app.Activity: android.app.Activity getParent()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.lang.String getColorEffect()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()> -> _SOURCE_
<android.view.Window: android.view.Window$Callback getCallback()> -> _SOURCE_
<android.widget.ExpandableListView: long getExpandableListPosition(int)> -> _SOURCE_
<android.widget.TextView: android.content.res.ColorStateList getHintTextColors()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getContentDescription()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int getColumnCount()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getColumnIndex()> -> _SOURCE_
<android.text.style.DynamicDrawableSpan: int getVerticalAlignment()> -> _SOURCE_
<android.text.Layout: int getLineBounds(int,android.graphics.Rect)> -> _SOURCE_
<android.view.View: android.view.animation.Animation getAnimation()> -> _SOURCE_
<android.net.wifi.WifiEnterpriseConfig: int getEapMethod()> -> _SOURCE_
<android.os.ParcelFileDescriptor: int getFd()> -> _SOURCE_
<android.content.Intent: int[] getIntArrayExtra(java.lang.String)> -> _SOURCE_
<android.view.View: android.view.Display getDisplay()> -> _SOURCE_
<android.content.BroadcastReceiver$PendingResult: java.lang.String getResultData()> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)> -> _SOURCE_
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothGattService getService(java.util.UUID)> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()> -> _SOURCE_
<android.graphics.Region: boolean getBounds(android.graphics.Rect)> -> _SOURCE_
<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()> -> _SOURCE_
<android.telephony.TelephonyManager: int getPhoneType()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getPackageName()> -> _SOURCE_
<android.view.animation.Animation: long getStartOffset()> -> _SOURCE_
<android.view.View: float getPivotY()> -> _SOURCE_
<android.telephony.SignalStrength: int getCdmaDbm()> -> _SOURCE_
<android.content.BroadcastReceiver: int getResultCode()> -> _SOURCE_
<java.net.NetworkInterface: java.net.NetworkInterface getByIndex(int)> -> _SOURCE_
<android.hardware.Camera$Parameters: float getVerticalViewAngle()> -> _SOURCE_
<java.net.URLConnection: int getContentLength()> -> _SOURCE_
<android.view.Display: java.lang.String getName()> -> _SOURCE_
<android.os.Message: android.os.Handler getTarget()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: java.util.List getText()> -> _SOURCE_
<android.view.View: android.view.TouchDelegate getTouchDelegate()> -> _SOURCE_
<android.widget.AbsListView: int getListPaddingLeft()> -> _SOURCE_
<android.bluetooth.BluetoothGattCharacteristic: java.lang.Float getFloatValue(int,int)> -> _SOURCE_
<java.net.URLConnection: java.util.Map getRequestProperties()> -> _SOURCE_
<android.view.Window: int getForcedWindowFlags()> -> _SOURCE_
<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()> -> _SOURCE_
<java.lang.AbstractStringBuilder: void getChars(int,int,char[],int)> -> _SOURCE_
<android.widget.AbsListView: android.graphics.drawable.Drawable getSelector()> -> _SOURCE_
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)> -> _SOURCE_
<java.net.DatagramSocket: int getSendBufferSize()> -> _SOURCE_
<java.lang.StackTraceElement: java.lang.String getClassName()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: int getFromIndex()> -> _SOURCE_
<android.graphics.Bitmap: byte[] getNinePatchChunk()> -> _SOURCE_
<android.view.InputDevice$MotionRange: int getSource()> -> _SOURCE_
<android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)> -> _SOURCE_
<android.widget.TextView: int getCompoundPaddingLeft()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()> -> _SOURCE_
<android.widget.ListView: long[] getCheckItemIds()> -> _SOURCE_
<android.telephony.ServiceState: int getState()> -> _SOURCE_
<android.view.KeyEvent: int getKeyCode()> -> _SOURCE_
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)> -> _SOURCE_
<android.telephony.CellIdentityCdma: int getSystemId()> -> _SOURCE_
<java.nio.charset.CharsetEncoder: java.nio.ByteBuffer encode(java.nio.CharBuffer)> -> _SOURCE_
<android.bluetooth.BluetoothGattService: int getType()> -> _SOURCE_
<android.text.style.ImageSpan: java.lang.String getSource()> -> _SOURCE_
<android.view.KeyEvent: int getMaxKeyCode()> -> _SOURCE_
<android.webkit.WebSettings: boolean getAllowFileAccess()> -> _SOURCE_
<android.view.View: android.os.IBinder getWindowToken()> -> _SOURCE_
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothDevice getDevice()> -> _SOURCE_
<java.security.ProtectionDomain: java.security.PermissionCollection getPermissions()> -> _SOURCE_
<android.view.View: int getBottomPaddingOffset()> -> _SOURCE_
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> -> _SOURCE_
<android.text.style.URLSpan: int getSpanTypeId()> -> _SOURCE_
<android.view.View: android.content.res.Resources getResources()> -> _SOURCE_
<android.widget.ExpandableListView: int getPackedPositionGroup(long)> -> _SOURCE_
<android.content.ContextWrapper: android.content.Context getApplicationContext()> -> _SOURCE_
<android.app.Activity: android.view.Window getWindow()> -> _SOURCE_
<android.app.PendingIntent: java.lang.String getCreatorPackage()> -> _SOURCE_
<java.lang.StackTraceElement: int getLineNumber()> -> _SOURCE_
<java.nio.LongBuffer: java.nio.LongBuffer get(long[])> -> _SOURCE_
<java.util.Locale: java.lang.String getISO3Language()> -> _SOURCE_
<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()> -> _SOURCE_
<android.view.View: int getPaddingLeft()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedColorEffects()> -> _SOURCE_
<android.content.pm.ComponentInfo: int getIconResource()> -> _SOURCE_
<android.graphics.Bitmap: int getScaledHeight(int)> -> _SOURCE_
<java.net.Socket: boolean getTcpNoDelay()> -> _SOURCE_
<android.net.sip.SipManager: java.lang.String getOfferSessionDescription(android.content.Intent)> -> _SOURCE_
<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)> -> _SOURCE_
<android.content.ClipData: android.content.ClipData newUri(android.content.ContentResolver,java.lang.CharSequence,android.net.Uri)> -> _SOURCE_
<android.content.res.TypedArray: float getFloat(int,float)> -> _SOURCE_
<android.view.View: android.os.IBinder getApplicationWindowToken()> -> _SOURCE_
<android.content.ContentResolver: java.util.List getOutgoingPersistedUriPermissions()> -> _SOURCE_
<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)> -> _SOURCE_
<android.net.sip.SipSession: android.net.sip.SipProfile getLocalProfile()> -> _SOURCE_
<android.graphics.Paint: void getTextPath(char[],int,int,float,float,android.graphics.Path)> -> _SOURCE_
<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)> -> _SOURCE_
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()> -> _SOURCE_
<android.content.IntentFilter: java.lang.String getDataType(int)> -> _SOURCE_
<android.view.MotionEvent$PointerCoords: float getAxisValue(int)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float getMin()> -> _SOURCE_
<android.content.ContentProvider: java.lang.String getCallingPackage()> -> _SOURCE_
<android.widget.Scroller: float getCurrVelocity()> -> _SOURCE_
<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)> -> _SOURCE_
<android.widget.TextView: int getTotalPaddingLeft()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedJpegThumbnailSizes()> -> _SOURCE_
<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()> -> _SOURCE_
<android.content.ContentProviderClient: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> -> _SOURCE_
<android.view.KeyEvent: char getMatch(char[],int)> -> _SOURCE_
<android.app.Fragment: android.view.View getView()> -> _SOURCE_
<java.net.ServerSocket: java.nio.channels.ServerSocketChannel getChannel()> -> _SOURCE_
<java.lang.reflect.Method: int getModifiers()> -> _SOURCE_
<android.content.Intent: android.content.ClipData getClipData()> -> _SOURCE_
<java.security.spec.EllipticCurve: java.math.BigInteger getA()> -> _SOURCE_
<android.view.InputDevice$MotionRange: float getMin()> -> _SOURCE_
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)> -> _SOURCE_
<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()> -> _SOURCE_
<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)> -> _SOURCE_
<java.io.File: java.io.File getAbsoluteFile()> -> _SOURCE_
<android.bluetooth.BluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)> android.permission.BLUETOOTH -> _SOURCE_
<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()> -> _SOURCE_
<android.os.Bundle: short getShort(java.lang.String)> -> _SOURCE_
<android.content.res.TypedArray: int getColor(int,int)> -> _SOURCE_
<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)> -> _SOURCE_
<android.app.Activity: android.content.ComponentName getComponentName()> -> _SOURCE_
<android.bluetooth.BluetoothClass: int getDeviceClass()> -> _SOURCE_
<java.security.spec.EllipticCurve: java.math.BigInteger getB()> -> _SOURCE_
<java.net.Socket: int getSendBufferSize()> -> _SOURCE_
<android.os.Bundle: byte[] getByteArray(java.lang.String)> -> _SOURCE_
<android.widget.TextView: int getMaxWidth()> -> _SOURCE_
<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()> -> _SOURCE_
<android.view.MotionEvent: void getHistoricalPointerCoords(int,int,android.view.MotionEvent$PointerCoords)> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.String getName()> -> _SOURCE_
<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SOURCE_
<android.content.res.Resources: android.graphics.Movie getMovie(int)> -> _SOURCE_
<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)> -> _SOURCE_
<android.content.IntentSender: java.lang.String getCreatorPackage()> -> _SOURCE_
<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)> -> _SOURCE_
<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)> -> _SOURCE_
<android.view.View: android.view.ViewOverlay getOverlay()> -> _SOURCE_
<android.view.MotionEvent: float getSize(int)> -> _SOURCE_
<org.apache.http.message.ParserCursor: int getLowerBound()> -> _SOURCE_
<android.content.IntentSender: java.lang.String getTargetPackage()> -> _SOURCE_
<android.media.MediaPlayer$TrackInfo: android.media.MediaFormat getFormat()> -> _SOURCE_
<android.content.Intent: char[] getCharArrayExtra(java.lang.String)> -> _SOURCE_
<android.content.ClipData$Item: android.net.Uri getUri()> -> _SOURCE_
<android.widget.TextView: int getMaxEms()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityNodeInfo getSource()> -> _SOURCE_
<android.animation.LayoutTransition: long getDuration(int)> -> _SOURCE_
<android.print.PrintAttributes$Margins: int getTopMils()> -> _SOURCE_
<android.graphics.Path: android.graphics.Path$FillType getFillType()> -> _SOURCE_
<android.webkit.WebSettings: android.webkit.WebSettings$TextSize getTextSize()> -> _SOURCE_
<android.webkit.WebSettings: boolean getUseWideViewPort()> -> _SOURCE_
<android.net.sip.SipProfile: boolean getSendKeepAlive()> -> _SOURCE_
<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()> -> _SOURCE_
<android.graphics.Paint: android.graphics.Paint$Join getStrokeJoin()> -> _SOURCE_
<android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()> -> _SOURCE_
<android.print.PageRange: int getStart()> -> _SOURCE_
<android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newAssertQuery(android.net.Uri)> -> _SOURCE_
<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)> -> _SOURCE_
<android.widget.TextView: int getPaintFlags()> -> _SOURCE_
<android.print.PrintAttributes: android.print.PrintAttributes$Margins getMinMargins()> -> _SOURCE_
<android.nfc.NdefMessage: int getByteArrayLength()> -> _SOURCE_
<android.print.PrintAttributes$MediaSize: int getWidthMils()> -> _SOURCE_
<android.net.http.SslCertificate$DName: java.lang.String getCName()> -> _SOURCE_
<android.view.animation.Animation: int getZAdjustment()> -> _SOURCE_
<android.animation.LayoutTransition: long getStagger(int)> -> _SOURCE_
<java.net.Socket: java.io.OutputStream getOutputStream()> -> _SOURCE_
<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.annotation.Annotation[] getDeclaredAnnotations()> -> _SOURCE_
<android.webkit.WebView: float getScale()> -> _SOURCE_
<android.content.res.Resources: int getInteger(int)> -> _SOURCE_
<android.content.ContentResolver: java.util.List getCurrentSyncs()> -> _SOURCE_
<android.nfc.tech.NfcB: int getMaxTransceiveLength()> -> _SOURCE_
<java.io.File: long getTotalSpace()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: long getPageSize()> -> _SOURCE_
<android.widget.AbsListView: android.util.SparseBooleanArray getCheckedItemPositions()> -> _SOURCE_
<android.content.ComponentName: java.lang.String getShortClassName()> -> _SOURCE_
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)> -> _SOURCE_
<android.view.View: int getNextFocusForwardId()> -> _SOURCE_
<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)> -> _SOURCE_
<javax.security.auth.x500.X500Principal: byte[] getEncoded()> -> _SOURCE_
<android.os.Looper: java.lang.Thread getThread()> -> _SOURCE_
<java.net.Socket: int getSoTimeout()> -> _SOURCE_
<android.hardware.Camera$Parameters: int getJpegThumbnailQuality()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getMmsUAProfUrl()> -> _SOURCE_
<android.net.Uri: java.util.Set getQueryParameterNames()> -> _SOURCE_
<java.math.BigInteger: int getLowestSetBit()> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)> -> _SOURCE_
<android.text.Layout: float getSecondaryHorizontal(int)> -> _SOURCE_
<android.widget.TextView: int getCurrentTextColor()> -> _SOURCE_
<android.util.TypedValue: float getFraction(float,float)> -> _SOURCE_
<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[])> -> _SOURCE_
<android.hardware.Camera$Parameters: int getInt(java.lang.String)> -> _SOURCE_
<android.widget.Scroller: int getStartY()> -> _SOURCE_
<android.net.sip.SipManager: android.net.sip.SipManager newInstance(android.content.Context)> -> _SOURCE_
<android.database.sqlite.SQLiteProgram: int getUniqueId()> -> _SOURCE_
<android.view.DragEvent: int getAction()> -> _SOURCE_
<java.net.URLConnection: long getIfModifiedSince()> -> _SOURCE_
<android.webkit.WebResourceResponse: java.lang.String getEncoding()> -> _SOURCE_
<android.print.PrintAttributes: android.print.PrintAttributes$MediaSize getMediaSize()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: java.lang.String getName()> -> _SOURCE_
<android.view.InputDevice$MotionRange: float getMax()> -> _SOURCE_
<android.animation.LayoutTransition: long getStartDelay(int)> -> _SOURCE_
<java.lang.reflect.Field: int getInt(java.lang.Object)> -> _SOURCE_
<java.lang.String: byte[] getBytes()> -> _SOURCE_
<android.os.Message: long getWhen()> -> _SOURCE_
<java.lang.Class: java.lang.Package getPackage()> -> _SOURCE_
<java.net.NetworkInterface: java.lang.String getName()> -> _SOURCE_
<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)> -> _SOURCE_
<android.view.MotionEvent: long getDownTime()> -> _SOURCE_
<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)> -> _SOURCE_
<java.net.NetworkInterface: java.net.NetworkInterface getByInetAddress(java.net.InetAddress)> -> _SOURCE_
<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.SelectionKey register(java.nio.channels.Selector,int,java.lang.Object)> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedFocusModes()> -> _SOURCE_
<android.app.Activity: java.lang.CharSequence getTitle()> -> _SOURCE_
<android.view.Display: int getDisplayId()> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getCdmaEcio()> -> _SOURCE_
<android.location.Criteria: int getBearingAccuracy()> -> _SOURCE_
<android.widget.TextView: int getMinEms()> -> _SOURCE_
<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()> -> _SOURCE_
<android.content.pm.PathPermission: java.lang.String getWritePermission()> -> _SOURCE_
<android.widget.ListView: android.widget.ListAdapter getAdapter()> -> _SOURCE_
<android.net.http.SslCertificate$DName: java.lang.String getOName()> -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()> -> _SOURCE_
<android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)> -> _SOURCE_
<android.view.KeyEvent: long getEventTime()> -> _SOURCE_
<android.graphics.Bitmap: int getAllocationByteCount()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()> -> _SOURCE_
<java.net.URI: java.lang.String getRawPath()> -> _SOURCE_
<android.telephony.CellSignalStrengthCdma: int getLevel()> -> _SOURCE_
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getBeforeText()> -> _SOURCE_
<android.view.KeyEvent: char getMatch(char[])> -> _SOURCE_
<android.text.Layout: int getLineBaseline(int)> -> _SOURCE_
<java.util.Date: int getMinutes()> -> _SOURCE_
<android.text.Editable$Factory: android.text.Editable$Factory getInstance()> -> _SOURCE_
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)> -> _SOURCE_
<android.view.InputDevice$MotionRange: float getFlat()> -> _SOURCE_
<android.view.Display: int getRotation()> -> _SOURCE_
<android.content.res.TypedArray: int getLayoutDimension(int,java.lang.String)> -> _SOURCE_
<android.content.res.Resources: boolean getBoolean(int)> -> _SOURCE_
<java.net.InetAddress: java.lang.String getCanonicalHostName()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])> -> _SOURCE_
<android.widget.TextView: void getFocusedRect(android.graphics.Rect)> -> _SOURCE_
<android.view.View: int getMeasuredWidthAndState()> -> _SOURCE_
<android.view.View: int getMeasuredState()> -> _SOURCE_
<android.view.LayoutInflater: android.view.LayoutInflater$Filter getFilter()> -> _SOURCE_
<java.util.AbstractMap: java.lang.Object get(java.lang.Object)> -> _SOURCE_
<android.content.ContentResolver: java.util.List getPersistedUriPermissions()> -> _SOURCE_
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getAnonymousIdentity()> -> _SOURCE_
<android.telephony.CellIdentityCdma: int getLongitude()> -> _SOURCE_
<android.content.res.Resources: int getDimensionPixelOffset(int)> -> _SOURCE_
<android.os.Bundle: char getChar(java.lang.String,char)> -> _SOURCE_
<android.content.ClipDescription: int getMimeTypeCount()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalSize(int)> -> _SOURCE_
<android.content.ContentValues: byte[] getAsByteArray(java.lang.String)> -> _SOURCE_
<android.view.View: android.graphics.Rect getClipBounds()> -> _SOURCE_
<android.text.Layout: int getLineForOffset(int)> -> _SOURCE_
<android.app.ExpandableListActivity: android.widget.ExpandableListAdapter getExpandableListAdapter()> -> _SOURCE_
<android.content.res.Resources: android.content.res.Resources getSystem()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFrameRates()> -> _SOURCE_
<android.animation.Animator: android.animation.TimeInterpolator getInterpolator()> -> _SOURCE_
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<java.net.NetworkInterface: int getMTU()> -> _SOURCE_
<android.graphics.Canvas: android.graphics.Rect getClipBounds()> -> _SOURCE_
<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)> -> _SOURCE_
<android.provider.Settings$System: float getFloat(android.content.ContentResolver,java.lang.String)> -> _SOURCE_
<android.nfc.tech.IsoDep: int getTimeout()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalPressure(int,int)> -> _SOURCE_
<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String,java.util.Map)> -> _SOURCE_
<android.content.BroadcastReceiver: java.lang.String getResultData()> -> _SOURCE_
<android.widget.AbsListView: int getCheckedItemPosition()> -> _SOURCE_
<android.print.PrintAttributes$MediaSize: java.lang.String getId()> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)> -> _SOURCE_
<android.widget.AbsListView: int getLeftPaddingOffset()> -> _SOURCE_
<android.widget.TextView: int getSelectionEnd()> -> _SOURCE_
<android.graphics.Typeface: int getStyle()> -> _SOURCE_
<java.net.DatagramPacket: java.net.InetAddress getAddress()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.lang.String getFlashMode()> -> _SOURCE_
<android.widget.Scroller: int getFinalY()> -> _SOURCE_
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()> -> _SOURCE_
<java.net.URLConnection: boolean getDefaultUseCaches()> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)> -> _SOURCE_
<android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)> -> _SOURCE_
<android.view.View: int getDrawingCacheBackgroundColor()> -> _SOURCE_
<android.view.MotionEvent: float getHistoricalPressure(int)> -> _SOURCE_
<java.net.Socket: java.net.InetAddress getLocalAddress()> -> _SOURCE_
<java.net.URL: java.lang.String getAuthority()> -> _SOURCE_
<android.view.KeyEvent: int getModifierMetaStateMask()> -> _SOURCE_
<android.widget.ExpandableListView: int getPackedPositionType(long)> -> _SOURCE_
<android.widget.TextView: float getLineSpacingExtra()> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String getBSSID()> -> _SOURCE_
<android.webkit.WebSettings: boolean getDomStorageEnabled()> -> _SOURCE_
<android.provider.Settings$System: boolean getShowGTalkServiceStatus(android.content.ContentResolver)> -> _SOURCE_
<java.lang.Character: java.lang.String getName(int)> -> _SOURCE_
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)> -> _SOURCE_
<android.hardware.Camera$Parameters: void getPreviewFpsRange(int[])> -> _SOURCE_
<android.view.accessibility.AccessibilityEvent: int getAction()> -> _SOURCE_
<java.lang.reflect.Field: java.lang.Class getType()> -> _SOURCE_
<java.lang.reflect.Constructor: java.lang.annotation.Annotation[][] getParameterAnnotations()> -> _SOURCE_
<android.view.View: int getHeight()> -> _SOURCE_
<java.net.URLConnection: java.net.FileNameMap getFileNameMap()> -> _SOURCE_
<android.content.res.TypedArray: float getDimension(int,float)> -> _SOURCE_
<android.widget.AbsListView: int getBottomPaddingOffset()> -> _SOURCE_
<android.content.res.Resources: int getDimensionPixelSize(int)> -> _SOURCE_
<android.os.Bundle: android.os.IBinder getBinder(java.lang.String)> -> _SOURCE_
<java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)> -> _SOURCE_
<android.widget.AdapterView: long getSelectedItemId()> -> _SOURCE_
<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getClientCertificate()> -> _SOURCE_
<android.content.Context: java.lang.String getString(int)> -> _SOURCE_
<android.telephony.SignalStrength: int getGsmBitErrorRate()> -> _SOURCE_
<android.bluetooth.BluetoothGattCharacteristic: int getInstanceId()> -> _SOURCE_
<android.telephony.SignalStrength: int getEvdoDbm()> -> _SOURCE_
<android.content.ContextWrapper: java.io.File getCacheDir()> -> _SOURCE_
<android.location.LocationProvider: int getPowerRequirement()> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedSceneModes()> -> _SOURCE_
<android.content.Intent: java.lang.String getAction()> -> _SOURCE_
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()> -> _SOURCE_
<android.view.inputmethod.CompletionInfo: long getId()> -> _SOURCE_
<java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])> -> _SOURCE_
<android.content.res.Resources: float getFraction(int,int,int)> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> -> _SOURCE_
<android.webkit.WebSettings: android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()> -> _SOURCE_
<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()> -> _SOURCE_
<android.app.PendingIntent: android.os.UserHandle getCreatorUserHandle()> -> _SOURCE_
<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)> -> _SOURCE_
<android.content.pm.PathPermission: java.lang.String getReadPermission()> -> _SOURCE_
<android.graphics.Bitmap: int getScaledHeight(android.util.DisplayMetrics)> -> _SOURCE_
<android.net.Uri: java.util.List getQueryParameters(java.lang.String)> -> _SOURCE_
<android.widget.ExpandableListView: long getPackedPositionForChild(int,int)> -> _SOURCE_
<android.webkit.WebView: int getContentHeight()> -> _SOURCE_
<android.widget.TextView: int getTotalPaddingEnd()> -> _SOURCE_
<java.util.Locale: java.lang.String getCountry()> -> _SOURCE_
<android.graphics.Bitmap: int getScaledWidth(int)> -> _SOURCE_
<javax.security.auth.x500.X500Principal: java.lang.String getName()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)> -> _SOURCE_
<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPictureSize()> -> _SOURCE_
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])> -> _SOURCE_
<android.app.Fragment: boolean getUserVisibleHint()> -> _SOURCE_
<android.hardware.Camera$Parameters: boolean getVideoStabilization()> -> _SOURCE_
<java.util.Locale: java.lang.String getDisplayCountry()> -> _SOURCE_
<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()> -> _SOURCE_
<android.print.PrintAttributes$Resolution: java.lang.String getId()> -> _SOURCE_
<android.view.ViewGroup: android.view.View getFocusedChild()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getSansSerifFontFamily()> -> _SOURCE_
<android.view.KeyCharacterMap: char getDisplayLabel(int)> -> _SOURCE_
<java.util.Date: int getTimezoneOffset()> -> _SOURCE_
<android.media.MediaPlayer: android.media.MediaPlayer$TrackInfo[] getTrackInfo()> -> _SOURCE_
<java.security.Timestamp: java.security.cert.CertPath getSignerCertPath()> -> _SOURCE_
<android.view.InputDevice: java.lang.String getName()> -> _SOURCE_
<android.widget.TextView: int getTotalPaddingTop()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabeledBy()> -> _SOURCE_
<android.graphics.Matrix: void getValues(float[])> -> _SOURCE_
<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()> -> _SOURCE_
<java.util.BitSet: boolean get(int)> -> _SOURCE_
<android.view.DragEvent: boolean getResult()> -> _SOURCE_
<android.widget.TextView: boolean getDefaultEditable()> -> _SOURCE_
<android.graphics.Bitmap: int getPixel(int,int)> -> _SOURCE_
<android.widget.TextView: boolean getLinksClickable()> -> _SOURCE_
<android.widget.TextView: int getLeftPaddingOffset()> -> _SOURCE_
<android.widget.TextView: android.text.method.KeyListener getKeyListener()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getResourceEntryName(int)> -> _SOURCE_
<android.view.ViewGroup: android.view.ViewGroupOverlay getOverlay()> -> _SOURCE_
<android.view.DragEvent: android.content.ClipDescription getClipDescription()> -> _SOURCE_
<android.telephony.ServiceState: boolean getIsManualSelection()> -> _SOURCE_
<java.util.UUID: long getLeastSignificantBits()> android.permission.STOP_APP_SWITCHES -> _SOURCE_
<java.lang.Character: int getType(char)> -> _SOURCE_
<android.view.View: android.view.ViewParent getParentForAccessibility()> -> _SOURCE_
<android.webkit.WebSettings: java.lang.String getFixedFontFamily()> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int,int,int)> -> _SOURCE_
<android.webkit.WebSettings: boolean getSaveFormData()> -> _SOURCE_
<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)> -> _SOURCE_
<android.view.MotionEvent: float getRawY()> -> _SOURCE_
<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)> -> _SOURCE_
<android.widget.Scroller: int getFinalX()> -> _SOURCE_
<java.net.URLStreamHandler: java.net.InetAddress getHostAddress(java.net.URL)> -> _SOURCE_
<android.print.PrintDocumentInfo: int getPageCount()> -> _SOURCE_
<android.os.Messenger: android.os.IBinder getBinder()> -> _SOURCE_
<android.os.Bundle: float getFloat(java.lang.String,float)> -> _SOURCE_
<android.webkit.WebView: java.lang.String getUrl()> -> _SOURCE_
<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)> -> _SOURCE_
<android.view.View: void getFocusedRect(android.graphics.Rect)> -> _SOURCE_
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFormats()> -> _SOURCE_
<android.widget.TextView: int getMinWidth()> -> _SOURCE_
<android.bluetooth.BluetoothSocket: java.io.OutputStream getOutputStream()> -> _SOURCE_
<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)> -> _SOURCE_
<android.widget.TextView: int getMarqueeRepeatLimit()> -> _SOURCE_
<android.bluetooth.BluetoothGatt: java.util.List getDevicesMatchingConnectionStates(int[])> -> _SOURCE_
<android.text.Layout: float getLineWidth(int)> -> _SOURCE_
<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getCaCertificate()> -> _SOURCE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()> -> _SOURCE_
<android.content.ClipData: int getItemCount()> -> _SOURCE_
<android.print.PrintAttributes$Margins: int getBottomMils()> -> _SOURCE_
<java.security.CodeSource: java.net.URL getLocation()> -> _SOURCE_
<android.view.View: int getRight()> -> _SOURCE_
<android.media.MediaFormat: int getInteger(java.lang.String)> -> _SOURCE_
<android.view.MotionEvent: float getPressure(int)> -> _SOURCE_
<android.webkit.WebView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()> -> _SOURCE_
<android.os.Message: android.os.Bundle getData()> -> _SOURCE_
<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)> -> _SOURCE_
<java.net.URL: java.lang.Object getContent()> -> _SOURCE_
<android.bluetooth.BluetoothGatt: int getConnectionState(android.bluetooth.BluetoothDevice)> -> _SOURCE_
<android.widget.TextView: int getCompoundPaddingStart()> -> _SOURCE_
<android.view.LayoutInflater: android.content.Context getContext()> -> _SOURCE_
<android.content.Intent: android.content.Intent getIntent(java.lang.String)> -> _SOURCE_
<android.hardware.Camera$Parameters: float getExposureCompensationStep()> -> _SOURCE_
<java.net.DatagramPacket: int getOffset()> -> _SOURCE_
<android.bluetooth.BluetoothGattService: java.util.List getCharacteristics()> -> _SOURCE_
<android.view.Display: float getRefreshRate()> -> _SOURCE_
<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)> -> _SOURCE_
<android.view.View: float getPivotX()> -> _SOURCE_
<android.view.View: float getY()> -> _SOURCE_
<android.content.res.Resources: java.lang.String getResourceTypeName(int)> -> _SOURCE_
<android.view.ViewGroup: android.view.animation.Animation$AnimationListener getLayoutAnimationListener()> -> _SOURCE_
<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)> -> _SOURCE_
